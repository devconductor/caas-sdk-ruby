=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagdispositivoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{dispositivo_resource_ativar}}}
    # {{{dispositivo_resource_ativar_notes}}}
    # @param id {{{dispositivo_resource_ativar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [DispositivoResponse]
    def ativar_using_post(id, opts = {})
      data, _status_code, _headers = ativar_using_post_with_http_info(id, opts)
      return data
    end

    # {{{dispositivo_resource_ativar}}}
    # {{{dispositivo_resource_ativar_notes}}}
    # @param id {{{dispositivo_resource_ativar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(DispositivoResponse, Fixnum, Hash)>] DispositivoResponse data, response status code and response headers
    def ativar_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdispositivoApi.ativar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagdispositivoApi.ativar_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/dispositivos/{id}/ativar-dispositivo".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DispositivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdispositivoApi#ativar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{dispositivo_resource_desativar}}}
    # {{{dispositivo_resource_desativar_notes}}}
    # @param id {{{dispositivo_resource_desativar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [DispositivoResponse]
    def desativar_using_post(id, opts = {})
      data, _status_code, _headers = desativar_using_post_with_http_info(id, opts)
      return data
    end

    # {{{dispositivo_resource_desativar}}}
    # {{{dispositivo_resource_desativar_notes}}}
    # @param id {{{dispositivo_resource_desativar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(DispositivoResponse, Fixnum, Hash)>] DispositivoResponse data, response status code and response headers
    def desativar_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdispositivoApi.desativar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagdispositivoApi.desativar_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/dispositivos/{id}/desativar-dispositivo".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DispositivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdispositivoApi#desativar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{dispositivo_resource_listar}}}
    # {{{dispositivo_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :token {{{dispositivo_request_token_value}}}
    # @option opts [Integer] :id_usuario {{{dispositivo_request_id_usuario_value}}}
    # @option opts [Integer] :id_aplicacao_mobile {{{dispositivo_request_id_aplicacao_mobile_value}}}
    # @option opts [String] :data_criacao {{{dispositivo_request_data_criacao_value}}}
    # @option opts [String] :data_desativacao {{{dispositivo_request_data_desativacao_value}}}
    # @return [PageDispositivoResponse]
    def listar_using_get20(opts = {})
      data, _status_code, _headers = listar_using_get20_with_http_info(opts)
      return data
    end

    # {{{dispositivo_resource_listar}}}
    # {{{dispositivo_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :token {{{dispositivo_request_token_value}}}
    # @option opts [Integer] :id_usuario {{{dispositivo_request_id_usuario_value}}}
    # @option opts [Integer] :id_aplicacao_mobile {{{dispositivo_request_id_aplicacao_mobile_value}}}
    # @option opts [String] :data_criacao {{{dispositivo_request_data_criacao_value}}}
    # @option opts [String] :data_desativacao {{{dispositivo_request_data_desativacao_value}}}
    # @return [Array<(PageDispositivoResponse, Fixnum, Hash)>] PageDispositivoResponse data, response status code and response headers
    def listar_using_get20_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdispositivoApi.listar_using_get20 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/dispositivos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'token'] = opts[:'token'] if opts[:'token']
      query_params[:'idUsuario'] = opts[:'id_usuario'] if opts[:'id_usuario']
      query_params[:'idAplicacaoMobile'] = opts[:'id_aplicacao_mobile'] if opts[:'id_aplicacao_mobile']
      query_params[:'dataCriacao'] = opts[:'data_criacao'] if opts[:'data_criacao']
      query_params[:'dataDesativacao'] = opts[:'data_desativacao'] if opts[:'data_desativacao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageDispositivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdispositivoApi#listar_using_get20\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{dispositivo_resource_salvar}}}
    # {{{dispositivo_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [DispositivoResponse]
    def salvar_using_post10(persist, opts = {})
      data, _status_code, _headers = salvar_using_post10_with_http_info(persist, opts)
      return data
    end

    # {{{dispositivo_resource_salvar}}}
    # {{{dispositivo_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(DispositivoResponse, Fixnum, Hash)>] DispositivoResponse data, response status code and response headers
    def salvar_using_post10_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdispositivoApi.salvar_using_post10 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagdispositivoApi.salvar_using_post10" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/dispositivos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DispositivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdispositivoApi#salvar_using_post10\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
