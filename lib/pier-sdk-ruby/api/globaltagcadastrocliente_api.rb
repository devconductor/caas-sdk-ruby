=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagcadastroclienteApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{adicional_resource_alterar}}}
    # {{{adicional_resource_alterar_notes}}}
    # @param id {{{adicional_resource_alterar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_alterar_param_id_pessoa}}}
    # @param adicional_update adicionalUpdate
    # @param [Hash] opts the optional parameters
    # @return [AdicionalDetalheResponse]
    def alterar_using_put(id, id_pessoa, adicional_update, opts = {})
      data, _status_code, _headers = alterar_using_put_with_http_info(id, id_pessoa, adicional_update, opts)
      return data
    end

    # {{{adicional_resource_alterar}}}
    # {{{adicional_resource_alterar_notes}}}
    # @param id {{{adicional_resource_alterar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_alterar_param_id_pessoa}}}
    # @param adicional_update adicionalUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(AdicionalDetalheResponse, Fixnum, Hash)>] AdicionalDetalheResponse data, response status code and response headers
    def alterar_using_put_with_http_info(id, id_pessoa, adicional_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.alterar_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.alterar_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_pessoa' is set
      fail ArgumentError, "Missing the required parameter 'id_pessoa' when calling GlobaltagcadastroclienteApi.alterar_using_put" if id_pessoa.nil?
      
      
      
      
      
      
      # verify the required parameter 'adicional_update' is set
      fail ArgumentError, "Missing the required parameter 'adicional_update' when calling GlobaltagcadastroclienteApi.alterar_using_put" if adicional_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/adicionais/{idPessoa}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'idPessoa' + '}', id_pessoa.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(adicional_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AdicionalDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#alterar_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_detalhe_resource_alterar}}}
    # {{{pessoa_detalhe_resource_alterar_notes}}}
    # @param id {{{pessoa_detalhe_resource_alterar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :nome_mae {{{pessoa_detalhe_update_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_update_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_update_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_update_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_update_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_update_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_update_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_update_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_update_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_update_nome_empresa_value}}}
    # @return [PessoaDetalheResponse]
    def alterar_using_put15(id, opts = {})
      data, _status_code, _headers = alterar_using_put15_with_http_info(id, opts)
      return data
    end

    # {{{pessoa_detalhe_resource_alterar}}}
    # {{{pessoa_detalhe_resource_alterar_notes}}}
    # @param id {{{pessoa_detalhe_resource_alterar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :nome_mae {{{pessoa_detalhe_update_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_update_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_update_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_update_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_update_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_update_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_update_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_update_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_update_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_update_nome_empresa_value}}}
    # @return [Array<(PessoaDetalheResponse, Fixnum, Hash)>] PessoaDetalheResponse data, response status code and response headers
    def alterar_using_put15_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.alterar_using_put15 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.alterar_using_put15" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas-detalhes/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'nomeMae'] = opts[:'nome_mae'] if opts[:'nome_mae']
      query_params[:'idEstadoCivil'] = opts[:'id_estado_civil'] if opts[:'id_estado_civil']
      query_params[:'idProfissao'] = opts[:'id_profissao'] if opts[:'id_profissao']
      query_params[:'idNaturezaOcupacao'] = opts[:'id_natureza_ocupacao'] if opts[:'id_natureza_ocupacao']
      query_params[:'idNacionalidade'] = opts[:'id_nacionalidade'] if opts[:'id_nacionalidade']
      query_params[:'numeroBanco'] = opts[:'numero_banco'] if opts[:'numero_banco']
      query_params[:'numeroAgencia'] = opts[:'numero_agencia'] if opts[:'numero_agencia']
      query_params[:'numeroContaCorrente'] = opts[:'numero_conta_corrente'] if opts[:'numero_conta_corrente']
      query_params[:'email'] = opts[:'email'] if opts[:'email']
      query_params[:'nomeEmpresa'] = opts[:'nome_empresa'] if opts[:'nome_empresa']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#alterar_using_put15\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_resource_alterar}}}
    # {{{pessoa_resource_alterar_notes}}}
    # @param id {{{pessoa_resource_alterar_param_id}}}
    # @param nome {{{pessoa_persist_nome_value}}}
    # @param tipo {{{pessoa_persist_tipo_value}}}
    # @param data_nascimento {{{pessoa_persist_data_nascimento_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cpf {{{pessoa_persist_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_persist_cnpj_value}}}
    # @option opts [String] :sexo {{{pessoa_persist_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_persist_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_persist_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_persist_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_persist_data_emissao_identidade_value}}}
    # @return [PessoaResponse]
    def alterar_using_put16(id, nome, tipo, data_nascimento, opts = {})
      data, _status_code, _headers = alterar_using_put16_with_http_info(id, nome, tipo, data_nascimento, opts)
      return data
    end

    # {{{pessoa_resource_alterar}}}
    # {{{pessoa_resource_alterar_notes}}}
    # @param id {{{pessoa_resource_alterar_param_id}}}
    # @param nome {{{pessoa_persist_nome_value}}}
    # @param tipo {{{pessoa_persist_tipo_value}}}
    # @param data_nascimento {{{pessoa_persist_data_nascimento_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cpf {{{pessoa_persist_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_persist_cnpj_value}}}
    # @option opts [String] :sexo {{{pessoa_persist_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_persist_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_persist_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_persist_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_persist_data_emissao_identidade_value}}}
    # @return [Array<(PessoaResponse, Fixnum, Hash)>] PessoaResponse data, response status code and response headers
    def alterar_using_put16_with_http_info(id, nome, tipo, data_nascimento, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.alterar_using_put16 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.alterar_using_put16" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'nome' is set
      fail ArgumentError, "Missing the required parameter 'nome' when calling GlobaltagcadastroclienteApi.alterar_using_put16" if nome.nil?
      
      
      
      
      
      
      # verify the required parameter 'tipo' is set
      fail ArgumentError, "Missing the required parameter 'tipo' when calling GlobaltagcadastroclienteApi.alterar_using_put16" if tipo.nil?
      
      
      
      
      
      
      # verify the required parameter 'data_nascimento' is set
      fail ArgumentError, "Missing the required parameter 'data_nascimento' when calling GlobaltagcadastroclienteApi.alterar_using_put16" if data_nascimento.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'nome'] = nome
      query_params[:'tipo'] = tipo
      query_params[:'dataNascimento'] = data_nascimento
      query_params[:'cpf'] = opts[:'cpf'] if opts[:'cpf']
      query_params[:'cnpj'] = opts[:'cnpj'] if opts[:'cnpj']
      query_params[:'sexo'] = opts[:'sexo'] if opts[:'sexo']
      query_params[:'numeroIdentidade'] = opts[:'numero_identidade'] if opts[:'numero_identidade']
      query_params[:'orgaoExpedidorIdentidade'] = opts[:'orgao_expedidor_identidade'] if opts[:'orgao_expedidor_identidade']
      query_params[:'unidadeFederativaIdentidade'] = opts[:'unidade_federativa_identidade'] if opts[:'unidade_federativa_identidade']
      query_params[:'dataEmissaoIdentidade'] = opts[:'data_emissao_identidade'] if opts[:'data_emissao_identidade']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#alterar_using_put16\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_resource_alterar}}}
    # {{{telefone_resource_alterar_notes}}}
    # @param id {{{telefone_alterar_persist_id_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_telefone {{{telefone_alterar_persist_id_tipo_telefone_value}}}
    # @option opts [String] :ddd {{{telefone_alterar_persist_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_alterar_persist_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_alterar_persist_ramal_value}}}
    # @return [TelefoneResponse]
    def alterar_using_put18(id, opts = {})
      data, _status_code, _headers = alterar_using_put18_with_http_info(id, opts)
      return data
    end

    # {{{telefone_resource_alterar}}}
    # {{{telefone_resource_alterar_notes}}}
    # @param id {{{telefone_alterar_persist_id_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_telefone {{{telefone_alterar_persist_id_tipo_telefone_value}}}
    # @option opts [String] :ddd {{{telefone_alterar_persist_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_alterar_persist_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_alterar_persist_ramal_value}}}
    # @return [Array<(TelefoneResponse, Fixnum, Hash)>] TelefoneResponse data, response status code and response headers
    def alterar_using_put18_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.alterar_using_put18 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.alterar_using_put18" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'id'] = id
      query_params[:'idTipoTelefone'] = opts[:'id_tipo_telefone'] if opts[:'id_tipo_telefone']
      query_params[:'ddd'] = opts[:'ddd'] if opts[:'ddd']
      query_params[:'telefone'] = opts[:'telefone'] if opts[:'telefone']
      query_params[:'ramal'] = opts[:'ramal'] if opts[:'ramal']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#alterar_using_put18\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{endereco_resource_alterar}}}
    # {{{endereco_resource_alterar_notes}}}
    # @param id id
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_pessoa {{{endereco_persist_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_persist_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_persist_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_persist_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_persist_numero_value}}}
    # @option opts [String] :complemento {{{endereco_persist_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_persist_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_persist_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_persist_cidade_value}}}
    # @option opts [String] :uf {{{endereco_persist_uf_value}}}
    # @option opts [String] :pais {{{endereco_persist_pais_value}}}
    # @return [EnderecoResponse]
    def alterar_using_put5(id, opts = {})
      data, _status_code, _headers = alterar_using_put5_with_http_info(id, opts)
      return data
    end

    # {{{endereco_resource_alterar}}}
    # {{{endereco_resource_alterar_notes}}}
    # @param id id
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_pessoa {{{endereco_persist_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_persist_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_persist_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_persist_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_persist_numero_value}}}
    # @option opts [String] :complemento {{{endereco_persist_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_persist_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_persist_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_persist_cidade_value}}}
    # @option opts [String] :uf {{{endereco_persist_uf_value}}}
    # @option opts [String] :pais {{{endereco_persist_pais_value}}}
    # @return [Array<(EnderecoResponse, Fixnum, Hash)>] EnderecoResponse data, response status code and response headers
    def alterar_using_put5_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.alterar_using_put5 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.alterar_using_put5" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/enderecos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'id'] = id
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'idTipoEndereco'] = opts[:'id_tipo_endereco'] if opts[:'id_tipo_endereco']
      query_params[:'cep'] = opts[:'cep'] if opts[:'cep']
      query_params[:'logradouro'] = opts[:'logradouro'] if opts[:'logradouro']
      query_params[:'numero'] = opts[:'numero'] if opts[:'numero']
      query_params[:'complemento'] = opts[:'complemento'] if opts[:'complemento']
      query_params[:'pontoReferencia'] = opts[:'ponto_referencia'] if opts[:'ponto_referencia']
      query_params[:'bairro'] = opts[:'bairro'] if opts[:'bairro']
      query_params[:'cidade'] = opts[:'cidade'] if opts[:'cidade']
      query_params[:'uf'] = opts[:'uf'] if opts[:'uf']
      query_params[:'pais'] = opts[:'pais'] if opts[:'pais']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EnderecoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#alterar_using_put5\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_pessoa_resource_atribuir_assinatura_cliente}}}
    # {{{conta_pessoa_resource_atribuir_assinatura_cliente_notes}}}
    # @param id {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_id}}}
    # @param body {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_body}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def atribuir_assinatura_cliente_using_post(id, body, opts = {})
      data, _status_code, _headers = atribuir_assinatura_cliente_using_post_with_http_info(id, body, opts)
      return data
    end

    # {{{conta_pessoa_resource_atribuir_assinatura_cliente}}}
    # {{{conta_pessoa_resource_atribuir_assinatura_cliente_notes}}}
    # @param id {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_id}}}
    # @param body {{{conta_pessoa_resource_atribuir_assinatura_cliente_param_body}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def atribuir_assinatura_cliente_using_post_with_http_info(id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.atribuir_assinatura_cliente_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.atribuir_assinatura_cliente_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling GlobaltagcadastroclienteApi.atribuir_assinatura_cliente_using_post" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/atribuir-assinatura-cliente".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#atribuir_assinatura_cliente_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{endereco_resource_atualizar_correspondencia}}}
    # {{{endereco_resource_atualizar_correspondencia_notes}}}
    # @param id {{{endereco_resource_atualizar_correspondencia_param_id}}}
    # @param id_conta {{{endereco_resource_atualizar_correspondencia_param_idConta}}}
    # @param [Hash] opts the optional parameters
    # @return [EnderecoResponse]
    def atualizar_endereco_de_correspondencia_using_put(id, id_conta, opts = {})
      data, _status_code, _headers = atualizar_endereco_de_correspondencia_using_put_with_http_info(id, id_conta, opts)
      return data
    end

    # {{{endereco_resource_atualizar_correspondencia}}}
    # {{{endereco_resource_atualizar_correspondencia_notes}}}
    # @param id {{{endereco_resource_atualizar_correspondencia_param_id}}}
    # @param id_conta {{{endereco_resource_atualizar_correspondencia_param_idConta}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(EnderecoResponse, Fixnum, Hash)>] EnderecoResponse data, response status code and response headers
    def atualizar_endereco_de_correspondencia_using_put_with_http_info(id, id_conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.atualizar_endereco_de_correspondencia_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.atualizar_endereco_de_correspondencia_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_conta' is set
      fail ArgumentError, "Missing the required parameter 'id_conta' when calling GlobaltagcadastroclienteApi.atualizar_endereco_de_correspondencia_using_put" if id_conta.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/enderecos/{id}/alterar-endereco-correspondencia".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'idConta'] = id_conta

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EnderecoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#atualizar_endereco_de_correspondencia_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{integracao_emissor_resource_atualizar}}}
    # {{{integracao_emissor_resource_atualizar_notes}}}
    # @param id {{{integracao_emissor_resource_atualizar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [IntegracaoEmissorPersist] :body {{{integracao_emissor_resource_atualizar_param_body}}}
    # @return [IntegracaoEmissorResponse]
    def atualizar_using_post(id, opts = {})
      data, _status_code, _headers = atualizar_using_post_with_http_info(id, opts)
      return data
    end

    # {{{integracao_emissor_resource_atualizar}}}
    # {{{integracao_emissor_resource_atualizar_notes}}}
    # @param id {{{integracao_emissor_resource_atualizar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [IntegracaoEmissorPersist] :body {{{integracao_emissor_resource_atualizar_param_body}}}
    # @return [Array<(IntegracaoEmissorResponse, Fixnum, Hash)>] IntegracaoEmissorResponse data, response status code and response headers
    def atualizar_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.atualizar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.atualizar_using_post" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/atualizar-registro-integracao".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IntegracaoEmissorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#atualizar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{adicional_resource_cadastrar}}}
    # {{{adicional_resource_cadastrar_notes}}}
    # @param id {{{adicional_resource_cadastrar_param_id_conta}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [AdicionalDetalheResponse]
    def cadastrar_using_post(id, persist, opts = {})
      data, _status_code, _headers = cadastrar_using_post_with_http_info(id, persist, opts)
      return data
    end

    # {{{adicional_resource_cadastrar}}}
    # {{{adicional_resource_cadastrar_notes}}}
    # @param id {{{adicional_resource_cadastrar_param_id_conta}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(AdicionalDetalheResponse, Fixnum, Hash)>] AdicionalDetalheResponse data, response status code and response headers
    def cadastrar_using_post_with_http_info(id, persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.cadastrar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.cadastrar_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagcadastroclienteApi.cadastrar_using_post" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/cadastrar-adicional".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AdicionalDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#cadastrar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{adicional_resource_consultar}}}
    # {{{adicional_resource_consultar_notes}}}
    # @param id {{{adicional_resource_consultar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_consultar_param_id_pessoa}}}
    # @param [Hash] opts the optional parameters
    # @return [AdicionalDetalheResponse]
    def consultar_using_get1(id, id_pessoa, opts = {})
      data, _status_code, _headers = consultar_using_get1_with_http_info(id, id_pessoa, opts)
      return data
    end

    # {{{adicional_resource_consultar}}}
    # {{{adicional_resource_consultar_notes}}}
    # @param id {{{adicional_resource_consultar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_consultar_param_id_pessoa}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(AdicionalDetalheResponse, Fixnum, Hash)>] AdicionalDetalheResponse data, response status code and response headers
    def consultar_using_get1_with_http_info(id, id_pessoa, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.consultar_using_get1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.consultar_using_get1" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_pessoa' is set
      fail ArgumentError, "Missing the required parameter 'id_pessoa' when calling GlobaltagcadastroclienteApi.consultar_using_get1" if id_pessoa.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/adicionais/{idPessoa}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'idPessoa' + '}', id_pessoa.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AdicionalDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#consultar_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{endereco_resource_consultar}}}
    # {{{endereco_resource_consultar_notes}}}
    # @param id {{{endereco_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [EnderecoResponse]
    def consultar_using_get18(id, opts = {})
      data, _status_code, _headers = consultar_using_get18_with_http_info(id, opts)
      return data
    end

    # {{{endereco_resource_consultar}}}
    # {{{endereco_resource_consultar_notes}}}
    # @param id {{{endereco_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(EnderecoResponse, Fixnum, Hash)>] EnderecoResponse data, response status code and response headers
    def consultar_using_get18_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.consultar_using_get18 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.consultar_using_get18" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/enderecos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EnderecoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#consultar_using_get18\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_detalhe_resource_consultar}}}
    # {{{pessoa_detalhe_resource_consultar_notes}}}
    # @param id {{{pessoa_detalhe_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [PessoaDetalheResponse]
    def consultar_using_get29(id, opts = {})
      data, _status_code, _headers = consultar_using_get29_with_http_info(id, opts)
      return data
    end

    # {{{pessoa_detalhe_resource_consultar}}}
    # {{{pessoa_detalhe_resource_consultar_notes}}}
    # @param id {{{pessoa_detalhe_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(PessoaDetalheResponse, Fixnum, Hash)>] PessoaDetalheResponse data, response status code and response headers
    def consultar_using_get29_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.consultar_using_get29 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.consultar_using_get29" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas-detalhes/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#consultar_using_get29\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_resource_consultar}}}
    # {{{pessoa_resource_consultar_notes}}}
    # @param id {{{pessoa_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [PessoaResponse]
    def consultar_using_get30(id, opts = {})
      data, _status_code, _headers = consultar_using_get30_with_http_info(id, opts)
      return data
    end

    # {{{pessoa_resource_consultar}}}
    # {{{pessoa_resource_consultar_notes}}}
    # @param id {{{pessoa_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(PessoaResponse, Fixnum, Hash)>] PessoaResponse data, response status code and response headers
    def consultar_using_get30_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.consultar_using_get30 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.consultar_using_get30" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#consultar_using_get30\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_resource_consultar}}}
    # {{{telefone_resource_consultar_notes}}}
    # @param id {{{telefone_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [TelefoneResponse]
    def consultar_using_get38(id, opts = {})
      data, _status_code, _headers = consultar_using_get38_with_http_info(id, opts)
      return data
    end

    # {{{telefone_resource_consultar}}}
    # {{{telefone_resource_consultar_notes}}}
    # @param id {{{telefone_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TelefoneResponse, Fixnum, Hash)>] TelefoneResponse data, response status code and response headers
    def consultar_using_get38_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.consultar_using_get38 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.consultar_using_get38" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#consultar_using_get38\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{adicional_resource_inativar}}}
    # {{{adicional_resource_inativar_notes}}}
    # @param id {{{adicional_resource_inativar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_inativar_param_id_pessoa}}}
    # @param [Hash] opts the optional parameters
    # @return [String]
    def inativar_using_post(id, id_pessoa, opts = {})
      data, _status_code, _headers = inativar_using_post_with_http_info(id, id_pessoa, opts)
      return data
    end

    # {{{adicional_resource_inativar}}}
    # {{{adicional_resource_inativar_notes}}}
    # @param id {{{adicional_resource_inativar_param_id_conta}}}
    # @param id_pessoa {{{adicional_resource_inativar_param_id_pessoa}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def inativar_using_post_with_http_info(id, id_pessoa, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.inativar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.inativar_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_pessoa' is set
      fail ArgumentError, "Missing the required parameter 'id_pessoa' when calling GlobaltagcadastroclienteApi.inativar_using_post" if id_pessoa.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/adicionais/{idPessoa}/inativar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'idPessoa' + '}', id_pessoa.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#inativar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_pessoa_resource_listar_socios}}}
    # {{{conta_pessoa_resource_listar_socios_notes}}}
    # @param id {{{conta_pessoa_resource_listar_socios_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PagePessoaResponse]
    def listar_socios_using_get(id, opts = {})
      data, _status_code, _headers = listar_socios_using_get_with_http_info(id, opts)
      return data
    end

    # {{{conta_pessoa_resource_listar_socios}}}
    # {{{conta_pessoa_resource_listar_socios_notes}}}
    # @param id {{{conta_pessoa_resource_listar_socios_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PagePessoaResponse, Fixnum, Hash)>] PagePessoaResponse data, response status code and response headers
    def listar_socios_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_socios_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.listar_socios_using_get" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/clientes-pessoas-juridicas/{id}/socios".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PagePessoaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_socios_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{adicional_resource_listar}}}
    # {{{adicional_resource_listar_notes}}}
    # @param id {{{adicional_resource_listar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [AdicionalResponse]
    def listar_using_get1(id, opts = {})
      data, _status_code, _headers = listar_using_get1_with_http_info(id, opts)
      return data
    end

    # {{{adicional_resource_listar}}}
    # {{{adicional_resource_listar_notes}}}
    # @param id {{{adicional_resource_listar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(AdicionalResponse, Fixnum, Hash)>] AdicionalResponse data, response status code and response headers
    def listar_using_get1_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_using_get1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.listar_using_get1" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/adicionais".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AdicionalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{endereco_resource_listar}}}
    # {{{endereco_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{endereco_request_id_value}}}
    # @option opts [Integer] :id_pessoa {{{endereco_request_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_request_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_request_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_request_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_request_numero_value}}}
    # @option opts [String] :complemento {{{endereco_request_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_request_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_request_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_request_cidade_value}}}
    # @option opts [String] :uf {{{endereco_request_uf_value}}}
    # @option opts [String] :pais {{{endereco_request_pais_value}}}
    # @option opts [String] :data_inclusao {{{endereco_request_data_inclusao_value}}}
    # @option opts [String] :data_ultima_atualizacao {{{endereco_request_data_ultima_atualizacao_value}}}
    # @return [PageEnderecoResponse]
    def listar_using_get24(opts = {})
      data, _status_code, _headers = listar_using_get24_with_http_info(opts)
      return data
    end

    # {{{endereco_resource_listar}}}
    # {{{endereco_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{endereco_request_id_value}}}
    # @option opts [Integer] :id_pessoa {{{endereco_request_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_request_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_request_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_request_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_request_numero_value}}}
    # @option opts [String] :complemento {{{endereco_request_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_request_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_request_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_request_cidade_value}}}
    # @option opts [String] :uf {{{endereco_request_uf_value}}}
    # @option opts [String] :pais {{{endereco_request_pais_value}}}
    # @option opts [String] :data_inclusao {{{endereco_request_data_inclusao_value}}}
    # @option opts [String] :data_ultima_atualizacao {{{endereco_request_data_ultima_atualizacao_value}}}
    # @return [Array<(PageEnderecoResponse, Fixnum, Hash)>] PageEnderecoResponse data, response status code and response headers
    def listar_using_get24_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_using_get24 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/enderecos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'idTipoEndereco'] = opts[:'id_tipo_endereco'] if opts[:'id_tipo_endereco']
      query_params[:'cep'] = opts[:'cep'] if opts[:'cep']
      query_params[:'logradouro'] = opts[:'logradouro'] if opts[:'logradouro']
      query_params[:'numero'] = opts[:'numero'] if opts[:'numero']
      query_params[:'complemento'] = opts[:'complemento'] if opts[:'complemento']
      query_params[:'pontoReferencia'] = opts[:'ponto_referencia'] if opts[:'ponto_referencia']
      query_params[:'bairro'] = opts[:'bairro'] if opts[:'bairro']
      query_params[:'cidade'] = opts[:'cidade'] if opts[:'cidade']
      query_params[:'uf'] = opts[:'uf'] if opts[:'uf']
      query_params[:'pais'] = opts[:'pais'] if opts[:'pais']
      query_params[:'dataInclusao'] = opts[:'data_inclusao'] if opts[:'data_inclusao']
      query_params[:'dataUltimaAtualizacao'] = opts[:'data_ultima_atualizacao'] if opts[:'data_ultima_atualizacao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageEnderecoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_using_get24\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_detalhe_resource_listar}}}
    # {{{pessoa_detalhe_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_pessoa {{{pessoa_detalhe_request_id_pessoa_value}}}
    # @option opts [String] :nome_mae {{{pessoa_detalhe_request_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_request_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_request_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_request_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_request_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_request_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_request_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_request_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_request_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_request_nome_empresa_value}}}
    # @return [PagePessoaDetalheResponse]
    def listar_using_get38(opts = {})
      data, _status_code, _headers = listar_using_get38_with_http_info(opts)
      return data
    end

    # {{{pessoa_detalhe_resource_listar}}}
    # {{{pessoa_detalhe_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_pessoa {{{pessoa_detalhe_request_id_pessoa_value}}}
    # @option opts [String] :nome_mae {{{pessoa_detalhe_request_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_request_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_request_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_request_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_request_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_request_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_request_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_request_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_request_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_request_nome_empresa_value}}}
    # @return [Array<(PagePessoaDetalheResponse, Fixnum, Hash)>] PagePessoaDetalheResponse data, response status code and response headers
    def listar_using_get38_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_using_get38 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas-detalhes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'nomeMae'] = opts[:'nome_mae'] if opts[:'nome_mae']
      query_params[:'idEstadoCivil'] = opts[:'id_estado_civil'] if opts[:'id_estado_civil']
      query_params[:'idProfissao'] = opts[:'id_profissao'] if opts[:'id_profissao']
      query_params[:'idNaturezaOcupacao'] = opts[:'id_natureza_ocupacao'] if opts[:'id_natureza_ocupacao']
      query_params[:'idNacionalidade'] = opts[:'id_nacionalidade'] if opts[:'id_nacionalidade']
      query_params[:'numeroBanco'] = opts[:'numero_banco'] if opts[:'numero_banco']
      query_params[:'numeroAgencia'] = opts[:'numero_agencia'] if opts[:'numero_agencia']
      query_params[:'numeroContaCorrente'] = opts[:'numero_conta_corrente'] if opts[:'numero_conta_corrente']
      query_params[:'email'] = opts[:'email'] if opts[:'email']
      query_params[:'nomeEmpresa'] = opts[:'nome_empresa'] if opts[:'nome_empresa']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PagePessoaDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_using_get38\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_resource_listar}}}
    # {{{pessoa_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{pessoa_request_id_value}}}
    # @option opts [String] :nome {{{pessoa_request_nome_value}}}
    # @option opts [String] :tipo {{{pessoa_request_tipo_value}}}
    # @option opts [String] :cpf {{{pessoa_request_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_request_cnpj_value}}}
    # @option opts [String] :data_nascimento {{{pessoa_request_data_nascimento_value}}}
    # @option opts [String] :sexo {{{pessoa_request_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_request_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_request_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_request_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_request_data_emissao_identidade_value}}}
    # @return [PagePessoaResponse]
    def listar_using_get39(opts = {})
      data, _status_code, _headers = listar_using_get39_with_http_info(opts)
      return data
    end

    # {{{pessoa_resource_listar}}}
    # {{{pessoa_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{pessoa_request_id_value}}}
    # @option opts [String] :nome {{{pessoa_request_nome_value}}}
    # @option opts [String] :tipo {{{pessoa_request_tipo_value}}}
    # @option opts [String] :cpf {{{pessoa_request_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_request_cnpj_value}}}
    # @option opts [String] :data_nascimento {{{pessoa_request_data_nascimento_value}}}
    # @option opts [String] :sexo {{{pessoa_request_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_request_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_request_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_request_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_request_data_emissao_identidade_value}}}
    # @return [Array<(PagePessoaResponse, Fixnum, Hash)>] PagePessoaResponse data, response status code and response headers
    def listar_using_get39_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_using_get39 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'tipo'] = opts[:'tipo'] if opts[:'tipo']
      query_params[:'cpf'] = opts[:'cpf'] if opts[:'cpf']
      query_params[:'cnpj'] = opts[:'cnpj'] if opts[:'cnpj']
      query_params[:'dataNascimento'] = opts[:'data_nascimento'] if opts[:'data_nascimento']
      query_params[:'sexo'] = opts[:'sexo'] if opts[:'sexo']
      query_params[:'numeroIdentidade'] = opts[:'numero_identidade'] if opts[:'numero_identidade']
      query_params[:'orgaoExpedidorIdentidade'] = opts[:'orgao_expedidor_identidade'] if opts[:'orgao_expedidor_identidade']
      query_params[:'unidadeFederativaIdentidade'] = opts[:'unidade_federativa_identidade'] if opts[:'unidade_federativa_identidade']
      query_params[:'dataEmissaoIdentidade'] = opts[:'data_emissao_identidade'] if opts[:'data_emissao_identidade']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PagePessoaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_using_get39\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_resource_listar}}}
    # {{{telefone_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{telefone_request_id_value}}}
    # @option opts [Integer] :id_tipo_telefone {{{telefone_request_id_tipo_telefone_value}}}
    # @option opts [Integer] :id_pessoa {{{telefone_request_id_pessoa_value}}}
    # @option opts [String] :ddd {{{telefone_request_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_request_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_request_ramal_value}}}
    # @option opts [Integer] :status {{{telefone_request_status_value}}}
    # @return [PageTelefoneResponse]
    def listar_using_get50(opts = {})
      data, _status_code, _headers = listar_using_get50_with_http_info(opts)
      return data
    end

    # {{{telefone_resource_listar}}}
    # {{{telefone_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{telefone_request_id_value}}}
    # @option opts [Integer] :id_tipo_telefone {{{telefone_request_id_tipo_telefone_value}}}
    # @option opts [Integer] :id_pessoa {{{telefone_request_id_pessoa_value}}}
    # @option opts [String] :ddd {{{telefone_request_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_request_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_request_ramal_value}}}
    # @option opts [Integer] :status {{{telefone_request_status_value}}}
    # @return [Array<(PageTelefoneResponse, Fixnum, Hash)>] PageTelefoneResponse data, response status code and response headers
    def listar_using_get50_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.listar_using_get50 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'idTipoTelefone'] = opts[:'id_tipo_telefone'] if opts[:'id_tipo_telefone']
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'ddd'] = opts[:'ddd'] if opts[:'ddd']
      query_params[:'telefone'] = opts[:'telefone'] if opts[:'telefone']
      query_params[:'ramal'] = opts[:'ramal'] if opts[:'ramal']
      query_params[:'status'] = opts[:'status'] if opts[:'status']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTelefoneResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#listar_using_get50\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada}}}
    # {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada_notes}}}
    # @param pessoa_persist pessoaPersist
    # @param [Hash] opts the optional parameters
    # @return [PessoaFisicaAprovadaResponse]
    def salvar_pessoa_fisica_aprovada_using_post(pessoa_persist, opts = {})
      data, _status_code, _headers = salvar_pessoa_fisica_aprovada_using_post_with_http_info(pessoa_persist, opts)
      return data
    end

    # {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada}}}
    # {{{conta_pessoa_resource_salvar_pessoa_fisica_aprovada_notes}}}
    # @param pessoa_persist pessoaPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(PessoaFisicaAprovadaResponse, Fixnum, Hash)>] PessoaFisicaAprovadaResponse data, response status code and response headers
    def salvar_pessoa_fisica_aprovada_using_post_with_http_info(pessoa_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_pessoa_fisica_aprovada_using_post ..."
      end
      
      
      # verify the required parameter 'pessoa_persist' is set
      fail ArgumentError, "Missing the required parameter 'pessoa_persist' when calling GlobaltagcadastroclienteApi.salvar_pessoa_fisica_aprovada_using_post" if pessoa_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/clientes-pessoas-fisicas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(pessoa_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaFisicaAprovadaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_pessoa_fisica_aprovada_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada}}}
    # {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada_notes}}}
    # @param pessoa_persist pessoaPersist
    # @param [Hash] opts the optional parameters
    # @return [PessoaJuridicaAprovadaResponse]
    def salvar_pessoa_juridica_aprovada_using_post(pessoa_persist, opts = {})
      data, _status_code, _headers = salvar_pessoa_juridica_aprovada_using_post_with_http_info(pessoa_persist, opts)
      return data
    end

    # {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada}}}
    # {{{conta_pessoa_resource_salvar_pessoa_juridica_aprovada_notes}}}
    # @param pessoa_persist pessoaPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(PessoaJuridicaAprovadaResponse, Fixnum, Hash)>] PessoaJuridicaAprovadaResponse data, response status code and response headers
    def salvar_pessoa_juridica_aprovada_using_post_with_http_info(pessoa_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_pessoa_juridica_aprovada_using_post ..."
      end
      
      
      # verify the required parameter 'pessoa_persist' is set
      fail ArgumentError, "Missing the required parameter 'pessoa_persist' when calling GlobaltagcadastroclienteApi.salvar_pessoa_juridica_aprovada_using_post" if pessoa_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/clientes-pessoas-juridicas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(pessoa_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaJuridicaAprovadaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_pessoa_juridica_aprovada_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{endereco_resource_salvar}}}
    # {{{endereco_resource_salvar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_pessoa {{{endereco_persist_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_persist_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_persist_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_persist_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_persist_numero_value}}}
    # @option opts [String] :complemento {{{endereco_persist_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_persist_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_persist_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_persist_cidade_value}}}
    # @option opts [String] :uf {{{endereco_persist_uf_value}}}
    # @option opts [String] :pais {{{endereco_persist_pais_value}}}
    # @return [EnderecoResponse]
    def salvar_using_post13(opts = {})
      data, _status_code, _headers = salvar_using_post13_with_http_info(opts)
      return data
    end

    # {{{endereco_resource_salvar}}}
    # {{{endereco_resource_salvar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_pessoa {{{endereco_persist_id_pessoa_value}}}
    # @option opts [Integer] :id_tipo_endereco {{{endereco_persist_id_tipo_endereco_value}}}
    # @option opts [String] :cep {{{endereco_persist_cep_value}}}
    # @option opts [String] :logradouro {{{endereco_persist_logradouro_value}}}
    # @option opts [Integer] :numero {{{endereco_persist_numero_value}}}
    # @option opts [String] :complemento {{{endereco_persist_complemento_value}}}
    # @option opts [String] :ponto_referencia {{{endereco_persist_ponto_referencia_value}}}
    # @option opts [String] :bairro {{{endereco_persist_bairro_value}}}
    # @option opts [String] :cidade {{{endereco_persist_cidade_value}}}
    # @option opts [String] :uf {{{endereco_persist_uf_value}}}
    # @option opts [String] :pais {{{endereco_persist_pais_value}}}
    # @return [Array<(EnderecoResponse, Fixnum, Hash)>] EnderecoResponse data, response status code and response headers
    def salvar_using_post13_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_using_post13 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/enderecos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'idTipoEndereco'] = opts[:'id_tipo_endereco'] if opts[:'id_tipo_endereco']
      query_params[:'cep'] = opts[:'cep'] if opts[:'cep']
      query_params[:'logradouro'] = opts[:'logradouro'] if opts[:'logradouro']
      query_params[:'numero'] = opts[:'numero'] if opts[:'numero']
      query_params[:'complemento'] = opts[:'complemento'] if opts[:'complemento']
      query_params[:'pontoReferencia'] = opts[:'ponto_referencia'] if opts[:'ponto_referencia']
      query_params[:'bairro'] = opts[:'bairro'] if opts[:'bairro']
      query_params[:'cidade'] = opts[:'cidade'] if opts[:'cidade']
      query_params[:'uf'] = opts[:'uf'] if opts[:'uf']
      query_params[:'pais'] = opts[:'pais'] if opts[:'pais']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EnderecoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_using_post13\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{integracao_emissor_resource_salvar}}}
    # {{{integracao_emissor_resource_salvar_notes}}}
    # @param id {{{integracao_emissor_resource_salvar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [IntegracaoEmissorPersist] :body {{{integracao_emissor_resource_salvar_param_body}}}
    # @return [IntegracaoEmissorResponse]
    def salvar_using_post16(id, opts = {})
      data, _status_code, _headers = salvar_using_post16_with_http_info(id, opts)
      return data
    end

    # {{{integracao_emissor_resource_salvar}}}
    # {{{integracao_emissor_resource_salvar_notes}}}
    # @param id {{{integracao_emissor_resource_salvar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [IntegracaoEmissorPersist] :body {{{integracao_emissor_resource_salvar_param_body}}}
    # @return [Array<(IntegracaoEmissorResponse, Fixnum, Hash)>] IntegracaoEmissorResponse data, response status code and response headers
    def salvar_using_post16_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_using_post16 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagcadastroclienteApi.salvar_using_post16" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/incluir-registro-integracao".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'IntegracaoEmissorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_using_post16\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_detalhe_resource_salvar}}}
    # {{{pessoa_detalhe_resource_salvar_notes}}}
    # @param id_pessoa {{{pessoa_detalhe_persist_id_pessoa_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :nome_mae {{{pessoa_detalhe_persist_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_persist_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_persist_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_persist_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_persist_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_persist_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_persist_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_persist_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_persist_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_persist_nome_empresa_value}}}
    # @return [PessoaDetalheResponse]
    def salvar_using_post24(id_pessoa, opts = {})
      data, _status_code, _headers = salvar_using_post24_with_http_info(id_pessoa, opts)
      return data
    end

    # {{{pessoa_detalhe_resource_salvar}}}
    # {{{pessoa_detalhe_resource_salvar_notes}}}
    # @param id_pessoa {{{pessoa_detalhe_persist_id_pessoa_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :nome_mae {{{pessoa_detalhe_persist_nome_mae_value}}}
    # @option opts [Integer] :id_estado_civil {{{pessoa_detalhe_persist_id_estado_civil_value}}}
    # @option opts [String] :id_profissao {{{pessoa_detalhe_persist_id_profissao_value}}}
    # @option opts [Integer] :id_natureza_ocupacao {{{pessoa_detalhe_persist_id_natureza_ocupacao_value}}}
    # @option opts [Integer] :id_nacionalidade {{{pessoa_detalhe_persist_id_nacionalidade_value}}}
    # @option opts [Integer] :numero_banco {{{pessoa_detalhe_persist_numero_banco_value}}}
    # @option opts [Integer] :numero_agencia {{{pessoa_detalhe_persist_numero_agencia_value}}}
    # @option opts [String] :numero_conta_corrente {{{pessoa_detalhe_persist_numero_conta_corrente_value}}}
    # @option opts [String] :email {{{pessoa_detalhe_persist_email_value}}}
    # @option opts [String] :nome_empresa {{{pessoa_detalhe_persist_nome_empresa_value}}}
    # @return [Array<(PessoaDetalheResponse, Fixnum, Hash)>] PessoaDetalheResponse data, response status code and response headers
    def salvar_using_post24_with_http_info(id_pessoa, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_using_post24 ..."
      end
      
      
      # verify the required parameter 'id_pessoa' is set
      fail ArgumentError, "Missing the required parameter 'id_pessoa' when calling GlobaltagcadastroclienteApi.salvar_using_post24" if id_pessoa.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas-detalhes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idPessoa'] = id_pessoa
      query_params[:'nomeMae'] = opts[:'nome_mae'] if opts[:'nome_mae']
      query_params[:'idEstadoCivil'] = opts[:'id_estado_civil'] if opts[:'id_estado_civil']
      query_params[:'idProfissao'] = opts[:'id_profissao'] if opts[:'id_profissao']
      query_params[:'idNaturezaOcupacao'] = opts[:'id_natureza_ocupacao'] if opts[:'id_natureza_ocupacao']
      query_params[:'idNacionalidade'] = opts[:'id_nacionalidade'] if opts[:'id_nacionalidade']
      query_params[:'numeroBanco'] = opts[:'numero_banco'] if opts[:'numero_banco']
      query_params[:'numeroAgencia'] = opts[:'numero_agencia'] if opts[:'numero_agencia']
      query_params[:'numeroContaCorrente'] = opts[:'numero_conta_corrente'] if opts[:'numero_conta_corrente']
      query_params[:'email'] = opts[:'email'] if opts[:'email']
      query_params[:'nomeEmpresa'] = opts[:'nome_empresa'] if opts[:'nome_empresa']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_using_post24\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{pessoa_resource_salvar}}}
    # {{{pessoa_resource_salvar_notes}}}
    # @param nome {{{pessoa_persist_nome_value}}}
    # @param tipo {{{pessoa_persist_tipo_value}}}
    # @param data_nascimento {{{pessoa_persist_data_nascimento_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cpf {{{pessoa_persist_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_persist_cnpj_value}}}
    # @option opts [String] :sexo {{{pessoa_persist_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_persist_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_persist_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_persist_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_persist_data_emissao_identidade_value}}}
    # @return [PessoaResponse]
    def salvar_using_post25(nome, tipo, data_nascimento, opts = {})
      data, _status_code, _headers = salvar_using_post25_with_http_info(nome, tipo, data_nascimento, opts)
      return data
    end

    # {{{pessoa_resource_salvar}}}
    # {{{pessoa_resource_salvar_notes}}}
    # @param nome {{{pessoa_persist_nome_value}}}
    # @param tipo {{{pessoa_persist_tipo_value}}}
    # @param data_nascimento {{{pessoa_persist_data_nascimento_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cpf {{{pessoa_persist_cpf_value}}}
    # @option opts [String] :cnpj {{{pessoa_persist_cnpj_value}}}
    # @option opts [String] :sexo {{{pessoa_persist_sexo_value}}}
    # @option opts [String] :numero_identidade {{{pessoa_persist_numero_identidade_value}}}
    # @option opts [String] :orgao_expedidor_identidade {{{pessoa_persist_orgao_expedidor_identidade_value}}}
    # @option opts [String] :unidade_federativa_identidade {{{pessoa_persist_unidade_federativa_identidade_value}}}
    # @option opts [String] :data_emissao_identidade {{{pessoa_persist_data_emissao_identidade_value}}}
    # @return [Array<(PessoaResponse, Fixnum, Hash)>] PessoaResponse data, response status code and response headers
    def salvar_using_post25_with_http_info(nome, tipo, data_nascimento, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_using_post25 ..."
      end
      
      
      # verify the required parameter 'nome' is set
      fail ArgumentError, "Missing the required parameter 'nome' when calling GlobaltagcadastroclienteApi.salvar_using_post25" if nome.nil?
      
      
      
      
      
      
      # verify the required parameter 'tipo' is set
      fail ArgumentError, "Missing the required parameter 'tipo' when calling GlobaltagcadastroclienteApi.salvar_using_post25" if tipo.nil?
      
      
      
      
      
      
      # verify the required parameter 'data_nascimento' is set
      fail ArgumentError, "Missing the required parameter 'data_nascimento' when calling GlobaltagcadastroclienteApi.salvar_using_post25" if data_nascimento.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/pessoas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'nome'] = nome
      query_params[:'tipo'] = tipo
      query_params[:'dataNascimento'] = data_nascimento
      query_params[:'cpf'] = opts[:'cpf'] if opts[:'cpf']
      query_params[:'cnpj'] = opts[:'cnpj'] if opts[:'cnpj']
      query_params[:'sexo'] = opts[:'sexo'] if opts[:'sexo']
      query_params[:'numeroIdentidade'] = opts[:'numero_identidade'] if opts[:'numero_identidade']
      query_params[:'orgaoExpedidorIdentidade'] = opts[:'orgao_expedidor_identidade'] if opts[:'orgao_expedidor_identidade']
      query_params[:'unidadeFederativaIdentidade'] = opts[:'unidade_federativa_identidade'] if opts[:'unidade_federativa_identidade']
      query_params[:'dataEmissaoIdentidade'] = opts[:'data_emissao_identidade'] if opts[:'data_emissao_identidade']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PessoaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_using_post25\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_resource_salvar}}}
    # {{{telefone_resource_salvar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_telefone {{{telefone_persist_id_tipo_telefone_value}}}
    # @option opts [Integer] :id_pessoa {{{telefone_persist_id_pessoa_value}}}
    # @option opts [String] :ddd {{{telefone_persist_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_persist_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_persist_ramal_value}}}
    # @return [TelefoneResponse]
    def salvar_using_post28(opts = {})
      data, _status_code, _headers = salvar_using_post28_with_http_info(opts)
      return data
    end

    # {{{telefone_resource_salvar}}}
    # {{{telefone_resource_salvar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_telefone {{{telefone_persist_id_tipo_telefone_value}}}
    # @option opts [Integer] :id_pessoa {{{telefone_persist_id_pessoa_value}}}
    # @option opts [String] :ddd {{{telefone_persist_ddd_value}}}
    # @option opts [String] :telefone {{{telefone_persist_telefone_value}}}
    # @option opts [String] :ramal {{{telefone_persist_ramal_value}}}
    # @return [Array<(TelefoneResponse, Fixnum, Hash)>] TelefoneResponse data, response status code and response headers
    def salvar_using_post28_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcadastroclienteApi.salvar_using_post28 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idTipoTelefone'] = opts[:'id_tipo_telefone'] if opts[:'id_tipo_telefone']
      query_params[:'idPessoa'] = opts[:'id_pessoa'] if opts[:'id_pessoa']
      query_params[:'ddd'] = opts[:'ddd'] if opts[:'ddd']
      query_params[:'telefone'] = opts[:'telefone'] if opts[:'telefone']
      query_params[:'ramal'] = opts[:'ramal'] if opts[:'ramal']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcadastroclienteApi#salvar_using_post28\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
