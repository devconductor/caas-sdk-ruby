=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagavisoviagemApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{aviso_viagem_resource_consultar}}}
    # {{{aviso_viagem_resource_consultar_notes}}}
    # @param id {{{aviso_viagem_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [AvisoViagemResponse]
    def consultar_using_get7(id, opts = {})
      data, _status_code, _headers = consultar_using_get7_with_http_info(id, opts)
      return data
    end

    # {{{aviso_viagem_resource_consultar}}}
    # {{{aviso_viagem_resource_consultar_notes}}}
    # @param id {{{aviso_viagem_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(AvisoViagemResponse, Fixnum, Hash)>] AvisoViagemResponse data, response status code and response headers
    def consultar_using_get7_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagavisoviagemApi.consultar_using_get7 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagavisoviagemApi.consultar_using_get7" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/avisos-viagens/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AvisoViagemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagavisoviagemApi#consultar_using_get7\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{aviso_viagem_resource_desabilitar}}}
    # {{{aviso_viagem_resource_desabilitar_notes}}}
    # @param id {{{aviso_viagem_resource_desabilitar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [AvisoViagemResponse]
    def desabilitar_using_post(id, opts = {})
      data, _status_code, _headers = desabilitar_using_post_with_http_info(id, opts)
      return data
    end

    # {{{aviso_viagem_resource_desabilitar}}}
    # {{{aviso_viagem_resource_desabilitar_notes}}}
    # @param id {{{aviso_viagem_resource_desabilitar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(AvisoViagemResponse, Fixnum, Hash)>] AvisoViagemResponse data, response status code and response headers
    def desabilitar_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagavisoviagemApi.desabilitar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagavisoviagemApi.desabilitar_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/avisos-viagens/{id}/desabilitar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AvisoViagemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagavisoviagemApi#desabilitar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{aviso_viagem_resource_habilitar}}}
    # {{{aviso_viagem_resource_habilitar_notes}}}
    # @param id {{{aviso_viagem_resource_habilitar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [AvisoViagemResponse]
    def habilitar_using_post(id, opts = {})
      data, _status_code, _headers = habilitar_using_post_with_http_info(id, opts)
      return data
    end

    # {{{aviso_viagem_resource_habilitar}}}
    # {{{aviso_viagem_resource_habilitar_notes}}}
    # @param id {{{aviso_viagem_resource_habilitar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(AvisoViagemResponse, Fixnum, Hash)>] AvisoViagemResponse data, response status code and response headers
    def habilitar_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagavisoviagemApi.habilitar_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagavisoviagemApi.habilitar_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/avisos-viagens/{id}/habilitar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AvisoViagemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagavisoviagemApi#habilitar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{aviso_viagem_resource_listar}}}
    # {{{aviso_viagem_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_cartao {{{aviso_viagem_request_id_cartao_value}}}
    # @option opts [String] :codigo_pais {{{aviso_viagem_request_codigo_pais_value}}}
    # @option opts [String] :data_inicio {{{aviso_viagem_request_data_inicio_value}}}
    # @option opts [String] :data_fim {{{aviso_viagem_request_data_fim_value}}}
    # @option opts [Integer] :flag_ativo {{{aviso_viagem_request_flag_ativo_value}}}
    # @return [PageAvisoViagemResponse]
    def listar_using_get8(opts = {})
      data, _status_code, _headers = listar_using_get8_with_http_info(opts)
      return data
    end

    # {{{aviso_viagem_resource_listar}}}
    # {{{aviso_viagem_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_cartao {{{aviso_viagem_request_id_cartao_value}}}
    # @option opts [String] :codigo_pais {{{aviso_viagem_request_codigo_pais_value}}}
    # @option opts [String] :data_inicio {{{aviso_viagem_request_data_inicio_value}}}
    # @option opts [String] :data_fim {{{aviso_viagem_request_data_fim_value}}}
    # @option opts [Integer] :flag_ativo {{{aviso_viagem_request_flag_ativo_value}}}
    # @return [Array<(PageAvisoViagemResponse, Fixnum, Hash)>] PageAvisoViagemResponse data, response status code and response headers
    def listar_using_get8_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagavisoviagemApi.listar_using_get8 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/avisos-viagens".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idCartao'] = opts[:'id_cartao'] if opts[:'id_cartao']
      query_params[:'codigoPais'] = opts[:'codigo_pais'] if opts[:'codigo_pais']
      query_params[:'dataInicio'] = opts[:'data_inicio'] if opts[:'data_inicio']
      query_params[:'dataFim'] = opts[:'data_fim'] if opts[:'data_fim']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageAvisoViagemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagavisoviagemApi#listar_using_get8\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{aviso_viagem_resource_salvar}}}
    # {{{aviso_viagem_resource_salvar_notes}}}
    # @param id_cartao {{{aviso_viagem_persist_id_cartao_value}}}
    # @param codigo_pais {{{aviso_viagem_persist_codigo_pais_value}}}
    # @param data_inicio {{{aviso_viagem_persist_data_inicio_value}}}
    # @param data_fim {{{aviso_viagem_persist_data_fim_value}}}
    # @param [Hash] opts the optional parameters
    # @return [AvisoViagemResponse]
    def salvar_using_post3(id_cartao, codigo_pais, data_inicio, data_fim, opts = {})
      data, _status_code, _headers = salvar_using_post3_with_http_info(id_cartao, codigo_pais, data_inicio, data_fim, opts)
      return data
    end

    # {{{aviso_viagem_resource_salvar}}}
    # {{{aviso_viagem_resource_salvar_notes}}}
    # @param id_cartao {{{aviso_viagem_persist_id_cartao_value}}}
    # @param codigo_pais {{{aviso_viagem_persist_codigo_pais_value}}}
    # @param data_inicio {{{aviso_viagem_persist_data_inicio_value}}}
    # @param data_fim {{{aviso_viagem_persist_data_fim_value}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(AvisoViagemResponse, Fixnum, Hash)>] AvisoViagemResponse data, response status code and response headers
    def salvar_using_post3_with_http_info(id_cartao, codigo_pais, data_inicio, data_fim, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagavisoviagemApi.salvar_using_post3 ..."
      end
      
      
      # verify the required parameter 'id_cartao' is set
      fail ArgumentError, "Missing the required parameter 'id_cartao' when calling GlobaltagavisoviagemApi.salvar_using_post3" if id_cartao.nil?
      
      
      
      
      
      
      # verify the required parameter 'codigo_pais' is set
      fail ArgumentError, "Missing the required parameter 'codigo_pais' when calling GlobaltagavisoviagemApi.salvar_using_post3" if codigo_pais.nil?
      
      
      
      
      
      
      # verify the required parameter 'data_inicio' is set
      fail ArgumentError, "Missing the required parameter 'data_inicio' when calling GlobaltagavisoviagemApi.salvar_using_post3" if data_inicio.nil?
      
      
      
      
      
      
      # verify the required parameter 'data_fim' is set
      fail ArgumentError, "Missing the required parameter 'data_fim' when calling GlobaltagavisoviagemApi.salvar_using_post3" if data_fim.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/avisos-viagens".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idCartao'] = id_cartao
      query_params[:'codigoPais'] = codigo_pais
      query_params[:'dataInicio'] = data_inicio
      query_params[:'dataFim'] = data_fim

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AvisoViagemResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagavisoviagemApi#salvar_using_post3\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
