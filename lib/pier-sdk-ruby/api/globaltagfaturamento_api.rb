=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class GlobaltagfaturamentoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # {{{faturamento_resource_alterar_tipo_faturamento}}}
    # {{{faturamento_resource_alterar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_alterar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param tipo_faturamento_persist tipoFaturamentoPersist
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoResponse]
    def alterar_tipo_faturamento_using_put(id, tipo_faturamento_persist, opts = {})
      data, _status_code, _headers = alterar_tipo_faturamento_using_put_with_http_info(id, tipo_faturamento_persist, opts)
      return data
    end

    # {{{faturamento_resource_alterar_tipo_faturamento}}}
    # {{{faturamento_resource_alterar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_alterar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param tipo_faturamento_persist tipoFaturamentoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoResponse, Fixnum, Hash)>] TipoFaturamentoResponse data, response status code and response headers
    def alterar_tipo_faturamento_using_put_with_http_info(id, tipo_faturamento_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.alterar_tipo_faturamento_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagfaturamentoApi.alterar_tipo_faturamento_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'tipo_faturamento_persist' is set
      fail ArgumentError, "Missing the required parameter 'tipo_faturamento_persist' when calling GlobaltagfaturamentoApi.alterar_tipo_faturamento_using_put" if tipo_faturamento_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tipo_faturamento_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#alterar_tipo_faturamento_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_cadastrar_faturamento_por_conta}}}
    # {{{faturamento_resource_cadastrar_faturamento_por_conta_notes}}}
    # @param tipo_faturamento_por_conta_persist tipoFaturamentoPorContaPersist
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoPorContaResponse]
    def cadastrar_faturamento_por_conta_using_post(tipo_faturamento_por_conta_persist, opts = {})
      data, _status_code, _headers = cadastrar_faturamento_por_conta_using_post_with_http_info(tipo_faturamento_por_conta_persist, opts)
      return data
    end

    # {{{faturamento_resource_cadastrar_faturamento_por_conta}}}
    # {{{faturamento_resource_cadastrar_faturamento_por_conta_notes}}}
    # @param tipo_faturamento_por_conta_persist tipoFaturamentoPorContaPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoPorContaResponse, Fixnum, Hash)>] TipoFaturamentoPorContaResponse data, response status code and response headers
    def cadastrar_faturamento_por_conta_using_post_with_http_info(tipo_faturamento_por_conta_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.cadastrar_faturamento_por_conta_using_post ..."
      end
      
      
      # verify the required parameter 'tipo_faturamento_por_conta_persist' is set
      fail ArgumentError, "Missing the required parameter 'tipo_faturamento_por_conta_persist' when calling GlobaltagfaturamentoApi.cadastrar_faturamento_por_conta_using_post" if tipo_faturamento_por_conta_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento-conta".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tipo_faturamento_por_conta_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoPorContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#cadastrar_faturamento_por_conta_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_cadastrar_tipo_faturamento}}}
    # {{{faturamento_resource_cadastrar_tipo_faturamento_notes}}}
    # @param tipo_faturamento_persist tipoFaturamentoPersist
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoResponse]
    def cadastrar_tipo_faturamento_using_post(tipo_faturamento_persist, opts = {})
      data, _status_code, _headers = cadastrar_tipo_faturamento_using_post_with_http_info(tipo_faturamento_persist, opts)
      return data
    end

    # {{{faturamento_resource_cadastrar_tipo_faturamento}}}
    # {{{faturamento_resource_cadastrar_tipo_faturamento_notes}}}
    # @param tipo_faturamento_persist tipoFaturamentoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoResponse, Fixnum, Hash)>] TipoFaturamentoResponse data, response status code and response headers
    def cadastrar_tipo_faturamento_using_post_with_http_info(tipo_faturamento_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.cadastrar_tipo_faturamento_using_post ..."
      end
      
      
      # verify the required parameter 'tipo_faturamento_persist' is set
      fail ArgumentError, "Missing the required parameter 'tipo_faturamento_persist' when calling GlobaltagfaturamentoApi.cadastrar_tipo_faturamento_using_post" if tipo_faturamento_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(tipo_faturamento_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#cadastrar_tipo_faturamento_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_consultar_tipo_faturamento}}}
    # {{{faturamento_resource_consultar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_consultar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoResponse]
    def consultar_tipo_faturamento_using_get(id, opts = {})
      data, _status_code, _headers = consultar_tipo_faturamento_using_get_with_http_info(id, opts)
      return data
    end

    # {{{faturamento_resource_consultar_tipo_faturamento}}}
    # {{{faturamento_resource_consultar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_consultar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoResponse, Fixnum, Hash)>] TipoFaturamentoResponse data, response status code and response headers
    def consultar_tipo_faturamento_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.consultar_tipo_faturamento_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagfaturamentoApi.consultar_tipo_faturamento_using_get" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#consultar_tipo_faturamento_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_desativar_faturamento_por_conta}}}
    # {{{faturamento_resource_desativar_faturamento_por_conta_notes}}}
    # @param id {{{faturamento_resource_desativar_faturamento_por_conta_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoPorContaResponse]
    def desativar_faturamento_por_conta_using_post(id, opts = {})
      data, _status_code, _headers = desativar_faturamento_por_conta_using_post_with_http_info(id, opts)
      return data
    end

    # {{{faturamento_resource_desativar_faturamento_por_conta}}}
    # {{{faturamento_resource_desativar_faturamento_por_conta_notes}}}
    # @param id {{{faturamento_resource_desativar_faturamento_por_conta_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoPorContaResponse, Fixnum, Hash)>] TipoFaturamentoPorContaResponse data, response status code and response headers
    def desativar_faturamento_por_conta_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.desativar_faturamento_por_conta_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagfaturamentoApi.desativar_faturamento_por_conta_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento-conta/{id}/desativar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoPorContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#desativar_faturamento_por_conta_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_desativar_tipo_faturamento}}}
    # {{{faturamento_resource_desativar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_desativar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param [Hash] opts the optional parameters
    # @return [TipoFaturamentoResponse]
    def desativar_tipo_faturamento_using_post(id, opts = {})
      data, _status_code, _headers = desativar_tipo_faturamento_using_post_with_http_info(id, opts)
      return data
    end

    # {{{faturamento_resource_desativar_tipo_faturamento}}}
    # {{{faturamento_resource_desativar_tipo_faturamento_notes}}}
    # @param id {{{faturamento_resource_desativar_tipo_faturamento_param_id_tipo_faturamento}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoFaturamentoResponse, Fixnum, Hash)>] TipoFaturamentoResponse data, response status code and response headers
    def desativar_tipo_faturamento_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.desativar_tipo_faturamento_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagfaturamentoApi.desativar_tipo_faturamento_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento/{id}/desativar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoFaturamentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#desativar_tipo_faturamento_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_listar_faturamento_por_conta}}}
    # {{{faturamento_resource_listar_faturamento_por_conta_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_tipo_faturamento_por_conta {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_por_conta_value}}}
    # @option opts [BOOLEAN] :ativo {{{tipo_faturamento_por_conta_request_status_value}}}
    # @option opts [Integer] :id_conta {{{tipo_faturamento_por_conta_request_id_conta_value}}}
    # @option opts [Integer] :id_tipo_faturamento {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_value}}}
    # @option opts [String] :data_hora_inclusao {{{tipo_faturamento_por_conta_request_data_hora_inclusao_value}}}
    # @option opts [String] :data_hora_cancelamento {{{tipo_faturamento_por_conta_request_data_hora_cancelamento_value}}}
    # @option opts [String] :modificado_por {{{tipo_faturamento_por_conta_request_modificado_por_value}}}
    # @return [PageTipoFaturamentoPorContaResponse]
    def listar_faturamento_por_conta_using_get(opts = {})
      data, _status_code, _headers = listar_faturamento_por_conta_using_get_with_http_info(opts)
      return data
    end

    # {{{faturamento_resource_listar_faturamento_por_conta}}}
    # {{{faturamento_resource_listar_faturamento_por_conta_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_tipo_faturamento_por_conta {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_por_conta_value}}}
    # @option opts [BOOLEAN] :ativo {{{tipo_faturamento_por_conta_request_status_value}}}
    # @option opts [Integer] :id_conta {{{tipo_faturamento_por_conta_request_id_conta_value}}}
    # @option opts [Integer] :id_tipo_faturamento {{{tipo_faturamento_por_conta_request_id_tipo_faturamento_value}}}
    # @option opts [String] :data_hora_inclusao {{{tipo_faturamento_por_conta_request_data_hora_inclusao_value}}}
    # @option opts [String] :data_hora_cancelamento {{{tipo_faturamento_por_conta_request_data_hora_cancelamento_value}}}
    # @option opts [String] :modificado_por {{{tipo_faturamento_por_conta_request_modificado_por_value}}}
    # @return [Array<(PageTipoFaturamentoPorContaResponse, Fixnum, Hash)>] PageTipoFaturamentoPorContaResponse data, response status code and response headers
    def listar_faturamento_por_conta_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.listar_faturamento_por_conta_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento-conta".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idTipoFaturamentoPorConta'] = opts[:'id_tipo_faturamento_por_conta'] if opts[:'id_tipo_faturamento_por_conta']
      query_params[:'ativo'] = opts[:'ativo'] if opts[:'ativo']
      query_params[:'idConta'] = opts[:'id_conta'] if opts[:'id_conta']
      query_params[:'idTipoFaturamento'] = opts[:'id_tipo_faturamento'] if opts[:'id_tipo_faturamento']
      query_params[:'dataHoraInclusao'] = opts[:'data_hora_inclusao'] if opts[:'data_hora_inclusao']
      query_params[:'dataHoraCancelamento'] = opts[:'data_hora_cancelamento'] if opts[:'data_hora_cancelamento']
      query_params[:'modificadoPor'] = opts[:'modificado_por'] if opts[:'modificado_por']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoFaturamentoPorContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#listar_faturamento_por_conta_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{faturamento_resource_listar_tipo_faturamento}}}
    # {{{faturamento_resource_listar_tipo_faturamento_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_tipo_faturamento {{{tipo_faturamento_request_id_tipo_faturamento_value}}}
    # @option opts [String] :descricao {{{tipo_faturamento_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_apenas_demonstrativo {{{tipo_faturamento_request_flag_apenas_demonstrativo_value}}}
    # @option opts [Integer] :id_convenio {{{tipo_faturamento_request_id_convenio_value}}}
    # @return [PageTipoFaturamentoResponse]
    def listar_tipo_faturamento_using_get(opts = {})
      data, _status_code, _headers = listar_tipo_faturamento_using_get_with_http_info(opts)
      return data
    end

    # {{{faturamento_resource_listar_tipo_faturamento}}}
    # {{{faturamento_resource_listar_tipo_faturamento_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_tipo_faturamento {{{tipo_faturamento_request_id_tipo_faturamento_value}}}
    # @option opts [String] :descricao {{{tipo_faturamento_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_apenas_demonstrativo {{{tipo_faturamento_request_flag_apenas_demonstrativo_value}}}
    # @option opts [Integer] :id_convenio {{{tipo_faturamento_request_id_convenio_value}}}
    # @return [Array<(PageTipoFaturamentoResponse, Fixnum, Hash)>] PageTipoFaturamentoResponse data, response status code and response headers
    def listar_tipo_faturamento_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagfaturamentoApi.listar_tipo_faturamento_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-faturamento".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idTipoFaturamento'] = opts[:'id_tipo_faturamento'] if opts[:'id_tipo_faturamento']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'flagApenasDemonstrativo'] = opts[:'flag_apenas_demonstrativo'] if opts[:'flag_apenas_demonstrativo']
      query_params[:'idConvenio'] = opts[:'id_convenio'] if opts[:'id_convenio']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoFaturamentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagfaturamentoApi#listar_tipo_faturamento_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
