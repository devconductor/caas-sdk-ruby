=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagestabelecimentoApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagestabelecimentoApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagestabelecimentoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagestabelecimentoApi' do
    it 'should create an instact of GlobaltagestabelecimentoApi' do
      @instance.should be_a(Pier::GlobaltagestabelecimentoApi)
    end
  end

  # unit tests for alterar_origem_comercial_using_put
  # {{{origem_comercial_resource_alterar_origem_comercial}}}
  # {{{origem_comercial_resource_alterar_origem_comercial_notes}}}
  # @param id {{{origem_comercial_resource_alterar_origem_comercial_param_id}}}
  # @param origem_comercial_update origemComercialUpdate
  # @param [Hash] opts the optional parameters
  # @return [OrigemComercialResponse]
  describe 'alterar_origem_comercial_using_put test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put10
  # {{{maquineta_resource_alterar}}}
  # {{{maquineta_resource_alterar_notes}}}
  # @param id {{{maquineta_resource_alterar_param_id}}}
  # @param maquineta_update maquinetaUpdate
  # @param [Hash] opts the optional parameters
  # @return [MaquinetaResponse]
  describe 'alterar_using_put10 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put11
  # {{{operacao_credor_resource_alterar}}}
  # {{{operacao_credor_resource_alterar_notes}}}
  # @param id {{{operacao_credor_resource_alterar_param_id}}}
  # @param operacao_credor_update operacaoCredorUpdate
  # @param [Hash] opts the optional parameters
  # @return [OperacaoCredorResponse]
  describe 'alterar_using_put11 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put17
  # {{{telefone_estabelecimento_resource_alterar}}}
  # {{{telefone_estabelecimento_resource_alterar_notes}}}
  # @param id {{{telefone_estabelecimento_resource_alterar_param_id}}}
  # @param telefone_estabelecimento_update telefoneEstabelecimentoUpdate
  # @param [Hash] opts the optional parameters
  # @return [TelefoneEstabelecimentoResponse]
  describe 'alterar_using_put17 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put19
  # {{{terminal_resource_alterar}}}
  # {{{terminal_resource_alterar_notes}}}
  # @param id {{{terminal_resource_alterar_param_id}}}
  # @param terminal_update terminalUpdate
  # @param [Hash] opts the optional parameters
  # @return [TerminalResponse]
  describe 'alterar_using_put19 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put6
  # {{{estabelecimento_resource_alterar}}}
  # {{{estabelecimento_resource_alterar_notes}}}
  # @param id {{{estabelecimento_resource_alterar_param_id_estabelecimento}}}
  # @param update update
  # @param [Hash] opts the optional parameters
  # @return [EstabelecimentoResponse]
  describe 'alterar_using_put6 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_using_put8
  # {{{grupo_economico_resource_alterar}}}
  # {{{grupo_economico_resource_alterar_notes}}}
  # @param id {{{grupo_economico_resource_alterar_param_id}}}
  # @param grupo_economico_dto grupoEconomicoDTO
  # @param [Hash] opts the optional parameters
  # @return [GrupoEconomicoResponse]
  describe 'alterar_using_put8 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for cadastrar_origem_comercial_using_post
  # {{{origem_comercial_resource_cadastrar_origem_comercial}}}
  # {{{origem_comercial_resource_cadastrar_origem_comercial_notes}}}
  # @param origem_comercial_persist origemComercialPersist
  # @param [Hash] opts the optional parameters
  # @return [OrigemComercialResponse]
  describe 'cadastrar_origem_comercial_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for cadastrar_using_post3
  # {{{estabelecimento_resource_cadastrar}}}
  # {{{estabelecimento_resource_cadastrar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [EstabelecimentoResponse]
  describe 'cadastrar_using_post3 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for cadastrar_using_post4
  # {{{grupo_economico_resource_cadastrar}}}
  # {{{grupo_economico_resource_cadastrar_notes}}}
  # @param grupo_economico_dto GrupoEconomicoDTO
  # @param [Hash] opts the optional parameters
  # @return [GrupoEconomicoResponse]
  describe 'cadastrar_using_post4 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consulta_operacao_using_get
  # {{{operacao_resource_consulta_operacao}}}
  # {{{operacao_resource_consulta_operacao_notes}}}
  # @param id {{{operacao_resource_consulta_operacao_param_id_operacao}}}
  # @param [Hash] opts the optional parameters
  # @return [DetalheOperacaoResponse]
  describe 'consulta_operacao_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_origem_comercial_using_get
  # {{{origem_comercial_resource_consultar_origem_comercial}}}
  # {{{origem_comercial_resource_consultar_origem_comercial_notes}}}
  # @param id {{{origem_comercial_resource_consultar_origem_comercial_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [OrigemComercialResponse]
  describe 'consultar_origem_comercial_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get22
  # {{{estabelecimento_resource_consultar}}}
  # {{{estabelecimento_resource_consultar_notes}}}
  # @param id {{{estabelecimento_resource_consultar_param_id_estabelecimento}}}
  # @param [Hash] opts the optional parameters
  # @return [EstabelecimentoResponse]
  describe 'consultar_using_get22 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get24
  # {{{grupo_economico_resource_consultar}}}
  # {{{grupo_economico_resource_consultar_notes}}}
  # @param id {{{grupo_economico_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [GrupoEconomicoResponse]
  describe 'consultar_using_get24 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get26
  # {{{maquineta_resource_consultar}}}
  # {{{maquineta_resource_consultar_notes}}}
  # @param id {{{maquineta_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [MaquinetaResponse]
  describe 'consultar_using_get26 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get27
  # {{{operacao_credor_resource_consultar}}}
  # {{{operacao_credor_resource_consultar_notes}}}
  # @param id {{{operacao_credor_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [OperacaoCredorResponse]
  describe 'consultar_using_get27 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get40
  # {{{telefone_estabelecimento_resource_consultar}}}
  # {{{telefone_estabelecimento_resource_consultar_notes}}}
  # @param id {{{telefone_estabelecimento_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [TelefoneEstabelecimentoResponse]
  describe 'consultar_using_get40 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get42
  # {{{terminal_resource_consultar}}}
  # {{{terminal_resource_consultar_notes}}}
  # @param id {{{terminal_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [TerminalResponse]
  describe 'consultar_using_get42 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get54
  # {{{vinculo_estabelecimento_adquirente_resource_consultar}}}
  # {{{vinculo_estabelecimento_adquirente_resource_consultar_notes}}}
  # @param id {{{vinculo_estabelecimento_adquirente_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [VinculoEstabelecimentoAdquirenteResponse]
  describe 'consultar_using_get54 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for desabilitar_vinculo_using_post
  # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo}}}
  # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_notes}}}
  # @param id {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'desabilitar_vinculo_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for desabilitar_vinculo_using_post1
  # {{{vinculo_operacao_resource_desabilitar_vinculo}}}
  # {{{vinculo_operacao_resource_desabilitar_vinculo_notes}}}
  # @param id {{{vinculo_operacao_resource_desabilitar_vinculo_param_id}}}
  # @param vinculo_operacao_persist vinculoOperacaoPersist
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'desabilitar_vinculo_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for habilitar_vinculo_using_post
  # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo}}}
  # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_notes}}}
  # @param id {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'habilitar_vinculo_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for habilitar_vinculo_using_post1
  # {{{vinculo_operacao_resource_habilitar_vinculo}}}
  # {{{vinculo_operacao_resource_habilitar_vinculo_notes}}}
  # @param id {{{vinculo_operacao_resource_habilitar_vinculo_param_id}}}
  # @param vinculo_operacao_persist vinculoOperacaoPersist
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'habilitar_vinculo_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for lista_operacao_using_get
  # {{{operacao_resource_lista_operacao}}}
  # {{{operacao_resource_lista_operacao_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_operacao {{{operacao_request_id_operacao_value}}}
  # @option opts [String] :codigo_processamento {{{operacao_request_codigo_processamento_value}}}
  # @return [PageOperacaoResponse]
  describe 'lista_operacao_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_mcc_using_get
  # {{{m_c_c_resource_listar_m_c_c}}}
  # {{{m_c_c_resource_listar_m_c_c_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageMCCResponse]
  describe 'listar_mcc_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_origens_comerciais_using_get
  # {{{origem_comercial_resource_listar_origens_comerciais}}}
  # {{{origem_comercial_resource_listar_origens_comerciais_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id {{{origem_comercial_request_id_value}}}
  # @option opts [String] :nome {{{origem_comercial_request_nome_value}}}
  # @option opts [Integer] :status {{{origem_comercial_request_status_value}}}
  # @option opts [Integer] :id_estabelecimento {{{origem_comercial_request_id_estabelecimento_value}}}
  # @option opts [Integer] :id_produto {{{origem_comercial_request_id_produto_value}}}
  # @option opts [String] :descricao {{{origem_comercial_request_descricao_value}}}
  # @option opts [Integer] :id_tipo_origem_comercial {{{origem_comercial_request_id_tipo_origem_comercial_value}}}
  # @option opts [Integer] :id_grupo_origem_comercial {{{origem_comercial_request_id_grupo_origem_comercial_value}}}
  # @option opts [BOOLEAN] :flag_pre_aprovado {{{origem_comercial_request_flag_pre_aprovado_value}}}
  # @option opts [BOOLEAN] :flag_aprovacao_imediata {{{origem_comercial_request_flag_aprovacao_imediata_value}}}
  # @option opts [String] :nome_fantasia_plastico {{{origem_comercial_request_nome_fantasia_plastico_value}}}
  # @option opts [BOOLEAN] :flag_cartao_provisorio {{{origem_comercial_request_flag_cartao_provisorio_value}}}
  # @option opts [BOOLEAN] :flag_cartao_definitivo {{{origem_comercial_request_flag_cartao_definitivo_value}}}
  # @option opts [String] :usuario {{{origem_comercial_request_usuario_value}}}
  # @option opts [String] :senha {{{origem_comercial_request_senha_value}}}
  # @option opts [BOOLEAN] :flag_origem_externa {{{origem_comercial_request_flag_origem_externa_value}}}
  # @option opts [BOOLEAN] :flag_modificado {{{origem_comercial_request_flag_modificado_value}}}
  # @option opts [BOOLEAN] :flag_envia_fatura_usuario {{{origem_comercial_request_flag_envia_fatura_usuario_value}}}
  # @option opts [BOOLEAN] :flag_credito_faturamento {{{origem_comercial_request_flag_credito_faturamento_value}}}
  # @option opts [BOOLEAN] :flag_concede_limite_provisorio {{{origem_comercial_request_flag_concede_limite_provisorio_value}}}
  # @option opts [BOOLEAN] :flag_digitalizar_doc {{{origem_comercial_request_flag_digitalizar_doc_value}}}
  # @option opts [BOOLEAN] :flag_embossing_loja {{{origem_comercial_request_flag_embossing_loja_value}}}
  # @option opts [BOOLEAN] :flag_consulta_previa {{{origem_comercial_request_flag_consulta_previa_value}}}
  # @option opts [String] :tipo_pessoa {{{origem_comercial_request_tipo_pessoa_value}}}
  # @return [PageOrigemComercialResponse]
  describe 'listar_origens_comerciais_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_tipos_adquirentes_using_get
  # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes}}}
  # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageEntidadeResponse]
  describe 'listar_tipos_adquirentes_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_tipos_estabelecimentos_using_get
  # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos}}}
  # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :descricao {{{tipo_estabelecimento_request_descricao_value}}}
  # @return [PageTipoEstabelecimentoResponse]
  describe 'listar_tipos_estabelecimentos_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_tipos_maquinetas_using_get
  # {{{maquineta_resource_listar_tipos_maquinetas}}}
  # {{{maquineta_resource_listar_tipos_maquinetas_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageCampoCodificadoDescricaoResponse]
  describe 'listar_tipos_maquinetas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_tipos_origens_comerciais_using_get
  # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais}}}
  # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :nome {{{tipo_origem_comercial_request_nome_value}}}
  # @return [PageTipoOrigemComercialResponse]
  describe 'listar_tipos_origens_comerciais_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_tipos_terminais_using_get1
  # {{{terminal_resource_listar_tipos_terminais}}}
  # {{{terminal_resource_listar_tipos_terminais_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageTipoTerminalResponse]
  describe 'listar_tipos_terminais_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get26
  # {{{estabelecimento_resource_listar}}}
  # {{{estabelecimento_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id {{{estabelecimento_request_id_value}}}
  # @option opts [Integer] :id_grupo_economico {{{estabelecimento_request_id_grupo_economico_value}}}
  # @option opts [String] :numero_receita_federal {{{estabelecimento_request_numero_receita_federal_value}}}
  # @option opts [String] :nome {{{estabelecimento_request_nome_value}}}
  # @option opts [String] :descricao {{{estabelecimento_request_descricao_value}}}
  # @option opts [String] :nome_fantasia {{{estabelecimento_request_nome_fantasia_value}}}
  # @option opts [String] :cep {{{estabelecimento_request_cep_value}}}
  # @option opts [String] :nome_logradouro {{{estabelecimento_request_nome_logradouro_value}}}
  # @option opts [Integer] :numero_endereco {{{estabelecimento_request_numero_endereco_value}}}
  # @option opts [String] :complemento {{{estabelecimento_request_complemento_value}}}
  # @option opts [String] :bairro {{{estabelecimento_request_bairro_value}}}
  # @option opts [String] :cidade {{{estabelecimento_request_cidade_value}}}
  # @option opts [String] :uf {{{estabelecimento_request_uf_value}}}
  # @option opts [String] :pais {{{estabelecimento_request_pais_value}}}
  # @option opts [String] :data_cadastramento {{{estabelecimento_request_data_cadastramento_value}}}
  # @option opts [String] :contato {{{estabelecimento_request_contato_value}}}
  # @option opts [String] :email {{{estabelecimento_request_email_value}}}
  # @option opts [Integer] :flag_arquivo_secr_fazenda {{{estabelecimento_request_flag_arquivo_secr_fazenda_value}}}
  # @option opts [Integer] :flag_cartao_digitado {{{estabelecimento_request_flag_cartao_digitado_value}}}
  # @option opts [Integer] :inativo {{{estabelecimento_request_inativo_value}}}
  # @option opts [Integer] :id_pais {{{estabelecimento_request_id_pais_value}}}
  # @option opts [Integer] :mcc {{{estabelecimento_request_mcc_value}}}
  # @option opts [Integer] :id_tipo_estabelecimento {{{estabelecimento_request_id_tipo_estabelecimento_value}}}
  # @option opts [Integer] :correspondencia {{{estabelecimento_request_correspondencia_value}}}
  # @option opts [Integer] :id_moeda {{{estabelecimento_request_id_moeda_value}}}
  # @option opts [String] :tipo_pagamento {{{estabelecimento_request_tipo_pagamento_value}}}
  # @option opts [String] :numero_estabelecimento {{{estabelecimento_request_numero_estabelecimento_value}}}
  # @option opts [String] :cep2 {{{estabelecimento_request_cep2_value}}}
  # @option opts [String] :nome_logradouro2 {{{estabelecimento_request_nome_logradouro2_value}}}
  # @option opts [Integer] :numero_endereco2 {{{estabelecimento_request_numero_endereco2_value}}}
  # @option opts [String] :complemento2 {{{estabelecimento_request_complemento2_value}}}
  # @option opts [String] :bairro2 {{{estabelecimento_request_bairro2_value}}}
  # @option opts [String] :cidade2 {{{estabelecimento_request_cidade2_value}}}
  # @option opts [String] :uf2 {{{estabelecimento_request_uf2_value}}}
  # @option opts [Integer] :flag_matriz {{{estabelecimento_request_flag_matriz_value}}}
  # @return [PageEstabelecimentoResponse]
  describe 'listar_using_get26 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get29
  # {{{grupo_economico_resource_listar}}}
  # {{{grupo_economico_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :razao_social {{{grupo_economico_request_razao_social_value}}}
  # @option opts [String] :nome_credor {{{grupo_economico_request_nome_credor_value}}}
  # @option opts [String] :numero_receita_federal {{{grupo_economico_request_numero_receita_federal_value}}}
  # @option opts [String] :inscricao_estadual {{{grupo_economico_request_inscricao_estadual_value}}}
  # @option opts [String] :contato {{{grupo_economico_request_contato_value}}}
  # @option opts [Integer] :banco {{{grupo_economico_request_banco_value}}}
  # @option opts [Integer] :agencia {{{grupo_economico_request_agencia_value}}}
  # @option opts [String] :digito_agencia {{{grupo_economico_request_digito_agencia_value}}}
  # @option opts [String] :conta_corrente {{{grupo_economico_request_conta_corrente_value}}}
  # @option opts [String] :digito_conta_corrente {{{grupo_economico_request_digito_conta_corrente_value}}}
  # @option opts [String] :periodicidade {{{grupo_economico_request_periodicidade_value}}}
  # @option opts [String] :pagamento_semanal {{{grupo_economico_request_pagamento_semanal_value}}}
  # @option opts [Integer] :pagamento_mensal {{{grupo_economico_request_pagamento_mensal_value}}}
  # @option opts [Integer] :pagamento_decendial_primeiro {{{grupo_economico_request_pagamento_decendial_primeiro_value}}}
  # @option opts [Integer] :pagamento_decendial_segundo {{{grupo_economico_request_pagamento_decendial_segundo_value}}}
  # @option opts [Integer] :pagamento_decendial_terceiro {{{grupo_economico_request_pagamento_decendial_terceiro_value}}}
  # @option opts [Integer] :pagamento_quinzenal_primeiro {{{grupo_economico_request_pagamento_quinzenal_primeiro_value}}}
  # @option opts [Integer] :pagamento_quinzenal_segundo {{{grupo_economico_request_pagamento_quinzenal_segundo_value}}}
  # @option opts [Float] :percentual_rav {{{grupo_economico_request_percentual_r_a_v_value}}}
  # @option opts [String] :recebe_rav {{{grupo_economico_request_recebe_r_a_v_value}}}
  # @option opts [Float] :percentual_multiplica {{{grupo_economico_request_percentual_multiplica_value}}}
  # @option opts [Float] :taxa_adm {{{grupo_economico_request_taxa_adm_value}}}
  # @option opts [Float] :taxa_banco {{{grupo_economico_request_taxa_banco_value}}}
  # @option opts [Float] :limite_rav {{{grupo_economico_request_limite_r_a_v_value}}}
  # @option opts [Integer] :id_credor_rav {{{grupo_economico_request_id_credor_r_a_v_value}}}
  # @return [PageGrupoEconomicoResponse]
  describe 'listar_using_get29 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get30
  # {{{grupo_origem_comercial_resource_listar}}}
  # {{{grupo_origem_comercial_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :nome {{{grupo_origem_comercial_request_nome_value}}}
  # @return [PageGrupoOrigemComercialResponse]
  describe 'listar_using_get30 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get33
  # {{{maquineta_resource_listar}}}
  # {{{maquineta_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_estabelecimento {{{maquineta_request_id_estabelecimento_value}}}
  # @return [PageMaquinetaResponse]
  describe 'listar_using_get33 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get34
  # {{{moeda_resource_listar}}}
  # {{{moeda_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :codigo_moeda {{{moeda_request_codigo_moeda_value}}}
  # @option opts [String] :simbolo {{{moeda_request_simbolo_value}}}
  # @option opts [String] :descricao {{{moeda_request_descricao_value}}}
  # @return [PageMoedaResponse]
  describe 'listar_using_get34 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get35
  # {{{operacao_credor_resource_listar}}}
  # {{{operacao_credor_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_operacao {{{operacao_credor_request_id_operacao_value}}}
  # @option opts [Integer] :id_credor {{{operacao_credor_request_id_credor_value}}}
  # @option opts [Integer] :id_produto {{{operacao_credor_request_id_produto_value}}}
  # @return [PageOperacaoCredorResponse]
  describe 'listar_using_get35 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get52
  # {{{telefone_estabelecimento_resource_listar}}}
  # {{{telefone_estabelecimento_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_estabelecimento {{{telefone_estabelecimento_request_id_estabelecimento_value}}}
  # @return [PageTelefoneEstabelecimentoResponse]
  describe 'listar_using_get52 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get54
  # {{{terminal_resource_listar}}}
  # {{{terminal_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id {{{terminal_request_id_value}}}
  # @option opts [String] :terminal {{{terminal_request_terminal_value}}}
  # @option opts [Integer] :numero_estabelecimento {{{terminal_request_numero_estabelecimento_value}}}
  # @option opts [Integer] :id_estabelecimento {{{terminal_request_id_estabelecimento_value}}}
  # @return [PageTerminalResponse]
  describe 'listar_using_get54 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get67
  # {{{vinculo_estabelecimento_adquirente_resource_listar}}}
  # {{{vinculo_estabelecimento_adquirente_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_adquirente {{{vinculo_estabelecimento_adquirente_request_id_adquirente_value}}}
  # @option opts [Integer] :id_estabelecimento {{{vinculo_estabelecimento_adquirente_request_id_estabelecimento_value}}}
  # @option opts [String] :codigo_estabelecimento_adquirente {{{vinculo_estabelecimento_adquirente_request_codigo_estabelecimento_adquirente_value}}}
  # @return [PageVinculoEstabelecimentoAdquirenteResponse]
  describe 'listar_using_get67 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get68
  # {{{vinculo_operacao_resource_listar}}}
  # {{{vinculo_operacao_resource_listar_notes}}}
  # @param id {{{vinculo_operacao_resource_listar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_produto {{{vinculo_operacao_request_id_produto_value}}}
  # @option opts [Integer] :id_operacao {{{vinculo_operacao_request_id_operacao_value}}}
  # @option opts [Integer] :codigo_mcc {{{vinculo_operacao_request_codigo_m_c_c_value}}}
  # @return [PageVinculoOperacaoResponse]
  describe 'listar_using_get68 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post20
  # {{{maquineta_resource_salvar}}}
  # {{{maquineta_resource_salvar_notes}}}
  # @param maquineta_persist maquinetaPersist
  # @param [Hash] opts the optional parameters
  # @return [MaquinetaResponse]
  describe 'salvar_using_post20 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post21
  # {{{operacao_credor_resource_salvar}}}
  # {{{operacao_credor_resource_salvar_notes}}}
  # @param operacao_credor_persist operacaoCredorPersist
  # @param [Hash] opts the optional parameters
  # @return [OperacaoCredorResponse]
  describe 'salvar_using_post21 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post28
  # {{{telefone_estabelecimento_resource_salvar}}}
  # {{{telefone_estabelecimento_resource_salvar_notes}}}
  # @param telefone_estabelecimento_persist telefoneEstabelecimentoPersist
  # @param [Hash] opts the optional parameters
  # @return [TelefoneEstabelecimentoResponse]
  describe 'salvar_using_post28 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post30
  # {{{terminal_resource_salvar}}}
  # {{{terminal_resource_salvar_notes}}}
  # @param terminal_persist terminalPersist
  # @param [Hash] opts the optional parameters
  # @return [TerminalResponse]
  describe 'salvar_using_post30 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post35
  # {{{vinculo_estabelecimento_adquirente_resource_salvar}}}
  # {{{vinculo_estabelecimento_adquirente_resource_salvar_notes}}}
  # @param vinculo_estabelecimento_adquirente_persist vinculoEstabelecimentoAdquirentePersist
  # @param [Hash] opts the optional parameters
  # @return [VinculoEstabelecimentoAdquirenteResponse]
  describe 'salvar_using_post35 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
