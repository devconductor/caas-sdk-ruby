=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class GlobaltagdebitorecorrenteApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # {{{conta_debito_recorrente_resource_aderir}}}
    # {{{conta_debito_recorrente_resource_aderir_notes}}}
    # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
    # @param [Hash] opts the optional parameters
    # @return [ContaDebitoRecorrenteResponse]
    def aderir_debito_recorrente_using_post(conta_debito_recorrente_persist, opts = {})
      data, _status_code, _headers = aderir_debito_recorrente_using_post_with_http_info(conta_debito_recorrente_persist, opts)
      return data
    end

    # {{{conta_debito_recorrente_resource_aderir}}}
    # {{{conta_debito_recorrente_resource_aderir_notes}}}
    # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaDebitoRecorrenteResponse, Fixnum, Hash)>] ContaDebitoRecorrenteResponse data, response status code and response headers
    def aderir_debito_recorrente_using_post_with_http_info(conta_debito_recorrente_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdebitorecorrenteApi.aderir_debito_recorrente_using_post ..."
      end
      
      
      # verify the required parameter 'conta_debito_recorrente_persist' is set
      fail ArgumentError, "Missing the required parameter 'conta_debito_recorrente_persist' when calling GlobaltagdebitorecorrenteApi.aderir_debito_recorrente_using_post" if conta_debito_recorrente_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/debitos-recorrentes".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(conta_debito_recorrente_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdebitorecorrenteApi#aderir_debito_recorrente_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{conta_debito_recorrente_resource_cancelar}}}
    # {{{conta_debito_recorrente_resource_cancelar_notes}}}
    # @param id {{{conta_debito_recorrente_resource_cancelar_param_id_debito_recorrente}}}
    # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
    # @param [Hash] opts the optional parameters
    # @return [ContaDebitoRecorrenteResponse]
    def cancelar_debito_recorrente_using_post(id, conta_debito_recorrente_persist, opts = {})
      data, _status_code, _headers = cancelar_debito_recorrente_using_post_with_http_info(id, conta_debito_recorrente_persist, opts)
      return data
    end

    # {{{conta_debito_recorrente_resource_cancelar}}}
    # {{{conta_debito_recorrente_resource_cancelar_notes}}}
    # @param id {{{conta_debito_recorrente_resource_cancelar_param_id_debito_recorrente}}}
    # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaDebitoRecorrenteResponse, Fixnum, Hash)>] ContaDebitoRecorrenteResponse data, response status code and response headers
    def cancelar_debito_recorrente_using_post_with_http_info(id, conta_debito_recorrente_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdebitorecorrenteApi.cancelar_debito_recorrente_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagdebitorecorrenteApi.cancelar_debito_recorrente_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'conta_debito_recorrente_persist' is set
      fail ArgumentError, "Missing the required parameter 'conta_debito_recorrente_persist' when calling GlobaltagdebitorecorrenteApi.cancelar_debito_recorrente_using_post" if conta_debito_recorrente_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/debitos-recorrentes/{id}/cancelar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(conta_debito_recorrente_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdebitorecorrenteApi#cancelar_debito_recorrente_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{conta_debito_recorrente_resource_listar}}}
    # {{{conta_debito_recorrente_resource_listar_notes}}}
    # @param id_conta {{{conta_debito_recorrente_resource_listar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_debito_recorrente {{{conta_debito_recorrente_resource_listar_param_id_tipo_debito_recorrente}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :data_hora_inicio {{{conta_debito_recorrente_request_data_hora_inicio_value}}}
    # @option opts [String] :data_hora_fim {{{conta_debito_recorrente_request_data_hora_fim_value}}}
    # @option opts [BOOLEAN] :ativo {{{conta_debito_recorrente_request_ativo_value}}}
    # @option opts [String] :data_hora_ultimo_pagamento {{{conta_debito_recorrente_request_data_hora_ultimo_pagamento_value}}}
    # @return [PageContaDebitoRecorrenteResponse]
    def listar_using_get18(id_conta, opts = {})
      data, _status_code, _headers = listar_using_get18_with_http_info(id_conta, opts)
      return data
    end

    # {{{conta_debito_recorrente_resource_listar}}}
    # {{{conta_debito_recorrente_resource_listar_notes}}}
    # @param id_conta {{{conta_debito_recorrente_resource_listar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_debito_recorrente {{{conta_debito_recorrente_resource_listar_param_id_tipo_debito_recorrente}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :data_hora_inicio {{{conta_debito_recorrente_request_data_hora_inicio_value}}}
    # @option opts [String] :data_hora_fim {{{conta_debito_recorrente_request_data_hora_fim_value}}}
    # @option opts [BOOLEAN] :ativo {{{conta_debito_recorrente_request_ativo_value}}}
    # @option opts [String] :data_hora_ultimo_pagamento {{{conta_debito_recorrente_request_data_hora_ultimo_pagamento_value}}}
    # @return [Array<(PageContaDebitoRecorrenteResponse, Fixnum, Hash)>] PageContaDebitoRecorrenteResponse data, response status code and response headers
    def listar_using_get18_with_http_info(id_conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdebitorecorrenteApi.listar_using_get18 ..."
      end
      
      
      # verify the required parameter 'id_conta' is set
      fail ArgumentError, "Missing the required parameter 'id_conta' when calling GlobaltagdebitorecorrenteApi.listar_using_get18" if id_conta.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/debitos-recorrentes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = id_conta
      query_params[:'idTipoDebitoRecorrente'] = opts[:'id_tipo_debito_recorrente'] if opts[:'id_tipo_debito_recorrente']
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'dataHoraInicio'] = opts[:'data_hora_inicio'] if opts[:'data_hora_inicio']
      query_params[:'dataHoraFim'] = opts[:'data_hora_fim'] if opts[:'data_hora_fim']
      query_params[:'ativo'] = opts[:'ativo'] if opts[:'ativo']
      query_params[:'dataHoraUltimoPagamento'] = opts[:'data_hora_ultimo_pagamento'] if opts[:'data_hora_ultimo_pagamento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageContaDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdebitorecorrenteApi#listar_using_get18\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{tipo_debito_recorrente_resource_listar}}}
    # {{{tipo_debito_recorrente_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{tipo_debito_recorrente_request_id_value}}}
    # @option opts [String] :descricao {{{tipo_debito_recorrente_request_descricao_value}}}
    # @option opts [Float] :valor {{{tipo_debito_recorrente_request_valor_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_debito_recorrente_request_flag_ativo_value}}}
    # @return [PageTipoDebitoRecorrenteResponse]
    def listar_using_get56(opts = {})
      data, _status_code, _headers = listar_using_get56_with_http_info(opts)
      return data
    end

    # {{{tipo_debito_recorrente_resource_listar}}}
    # {{{tipo_debito_recorrente_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{tipo_debito_recorrente_request_id_value}}}
    # @option opts [String] :descricao {{{tipo_debito_recorrente_request_descricao_value}}}
    # @option opts [Float] :valor {{{tipo_debito_recorrente_request_valor_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_debito_recorrente_request_flag_ativo_value}}}
    # @return [Array<(PageTipoDebitoRecorrenteResponse, Fixnum, Hash)>] PageTipoDebitoRecorrenteResponse data, response status code and response headers
    def listar_using_get56_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagdebitorecorrenteApi.listar_using_get56 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-debitos-recorrentes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'valor'] = opts[:'valor'] if opts[:'valor']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagdebitorecorrenteApi#listar_using_get56\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
