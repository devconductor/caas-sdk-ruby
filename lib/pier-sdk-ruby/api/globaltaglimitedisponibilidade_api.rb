=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltaglimitedisponibilidadeApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{limite_disponibilidade_resource_alterar}}}
    # {{{limite_disponibilidade_resource_alterar_notes}}}
    # @param id_conta {{{limite_disponibilidade_update_id_conta_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :limite_global {{{limite_disponibilidade_persist_limite_global_value}}}
    # @option opts [Float] :limite_compra {{{limite_disponibilidade_persist_limite_compra_value}}}
    # @option opts [Float] :limite_parcelado {{{limite_disponibilidade_persist_limite_parcelado_value}}}
    # @option opts [Float] :limite_parcelas {{{limite_disponibilidade_persist_limite_parcelas_value}}}
    # @option opts [Float] :limite_saque_global {{{limite_disponibilidade_persist_limite_saque_global_value}}}
    # @option opts [Float] :limite_saque_periodo {{{limite_disponibilidade_persist_limite_saque_periodo_value}}}
    # @option opts [Float] :limite_consignado {{{limite_disponibilidade_persist_limite_consignado_value}}}
    # @option opts [Float] :limite_internacional_compra {{{limite_disponibilidade_persist_limite_internacional_compra_value}}}
    # @option opts [Float] :limite_internacional_parcelado {{{limite_disponibilidade_persist_limite_internacional_parcelado_value}}}
    # @option opts [Float] :limite_internacional_parcelas {{{limite_disponibilidade_persist_limite_internacional_parcelas_value}}}
    # @option opts [Float] :limite_internacional_saque_global {{{limite_disponibilidade_persist_limite_internacional_saque_global_value}}}
    # @option opts [Float] :limite_internacional_saque_periodo {{{limite_disponibilidade_persist_limite_internacional_saque_periodo_value}}}
    # @option opts [Float] :limite_maximo {{{limite_disponibilidade_persist_limite_maximo_value}}}
    # @return [LimiteDisponibilidadeResponse]
    def alterar_using_put9(id_conta, opts = {})
      data, _status_code, _headers = alterar_using_put9_with_http_info(id_conta, opts)
      return data
    end

    # {{{limite_disponibilidade_resource_alterar}}}
    # {{{limite_disponibilidade_resource_alterar_notes}}}
    # @param id_conta {{{limite_disponibilidade_update_id_conta_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Float] :limite_global {{{limite_disponibilidade_persist_limite_global_value}}}
    # @option opts [Float] :limite_compra {{{limite_disponibilidade_persist_limite_compra_value}}}
    # @option opts [Float] :limite_parcelado {{{limite_disponibilidade_persist_limite_parcelado_value}}}
    # @option opts [Float] :limite_parcelas {{{limite_disponibilidade_persist_limite_parcelas_value}}}
    # @option opts [Float] :limite_saque_global {{{limite_disponibilidade_persist_limite_saque_global_value}}}
    # @option opts [Float] :limite_saque_periodo {{{limite_disponibilidade_persist_limite_saque_periodo_value}}}
    # @option opts [Float] :limite_consignado {{{limite_disponibilidade_persist_limite_consignado_value}}}
    # @option opts [Float] :limite_internacional_compra {{{limite_disponibilidade_persist_limite_internacional_compra_value}}}
    # @option opts [Float] :limite_internacional_parcelado {{{limite_disponibilidade_persist_limite_internacional_parcelado_value}}}
    # @option opts [Float] :limite_internacional_parcelas {{{limite_disponibilidade_persist_limite_internacional_parcelas_value}}}
    # @option opts [Float] :limite_internacional_saque_global {{{limite_disponibilidade_persist_limite_internacional_saque_global_value}}}
    # @option opts [Float] :limite_internacional_saque_periodo {{{limite_disponibilidade_persist_limite_internacional_saque_periodo_value}}}
    # @option opts [Float] :limite_maximo {{{limite_disponibilidade_persist_limite_maximo_value}}}
    # @return [Array<(LimiteDisponibilidadeResponse, Fixnum, Hash)>] LimiteDisponibilidadeResponse data, response status code and response headers
    def alterar_using_put9_with_http_info(id_conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltaglimitedisponibilidadeApi.alterar_using_put9 ..."
      end
      
      
      # verify the required parameter 'id_conta' is set
      fail ArgumentError, "Missing the required parameter 'id_conta' when calling GlobaltaglimitedisponibilidadeApi.alterar_using_put9" if id_conta.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/limites-disponibilidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = id_conta
      query_params[:'limiteGlobal'] = opts[:'limite_global'] if opts[:'limite_global']
      query_params[:'limiteCompra'] = opts[:'limite_compra'] if opts[:'limite_compra']
      query_params[:'limiteParcelado'] = opts[:'limite_parcelado'] if opts[:'limite_parcelado']
      query_params[:'limiteParcelas'] = opts[:'limite_parcelas'] if opts[:'limite_parcelas']
      query_params[:'limiteSaqueGlobal'] = opts[:'limite_saque_global'] if opts[:'limite_saque_global']
      query_params[:'limiteSaquePeriodo'] = opts[:'limite_saque_periodo'] if opts[:'limite_saque_periodo']
      query_params[:'limiteConsignado'] = opts[:'limite_consignado'] if opts[:'limite_consignado']
      query_params[:'limiteInternacionalCompra'] = opts[:'limite_internacional_compra'] if opts[:'limite_internacional_compra']
      query_params[:'limiteInternacionalParcelado'] = opts[:'limite_internacional_parcelado'] if opts[:'limite_internacional_parcelado']
      query_params[:'limiteInternacionalParcelas'] = opts[:'limite_internacional_parcelas'] if opts[:'limite_internacional_parcelas']
      query_params[:'limiteInternacionalSaqueGlobal'] = opts[:'limite_internacional_saque_global'] if opts[:'limite_internacional_saque_global']
      query_params[:'limiteInternacionalSaquePeriodo'] = opts[:'limite_internacional_saque_periodo'] if opts[:'limite_internacional_saque_periodo']
      query_params[:'limiteMaximo'] = opts[:'limite_maximo'] if opts[:'limite_maximo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LimiteDisponibilidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltaglimitedisponibilidadeApi#alterar_using_put9\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{limite_disponibilidade_resource_consultar}}}
    # {{{limite_disponibilidade_resource_consultar_notes}}}
    # @param id_conta {{{limite_disponibilidade_resource_consultar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @return [LimiteDisponibilidadeResponse]
    def consultar_using_get23(id_conta, opts = {})
      data, _status_code, _headers = consultar_using_get23_with_http_info(id_conta, opts)
      return data
    end

    # {{{limite_disponibilidade_resource_consultar}}}
    # {{{limite_disponibilidade_resource_consultar_notes}}}
    # @param id_conta {{{limite_disponibilidade_resource_consultar_param_id_conta}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(LimiteDisponibilidadeResponse, Fixnum, Hash)>] LimiteDisponibilidadeResponse data, response status code and response headers
    def consultar_using_get23_with_http_info(id_conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltaglimitedisponibilidadeApi.consultar_using_get23 ..."
      end
      
      
      # verify the required parameter 'id_conta' is set
      fail ArgumentError, "Missing the required parameter 'id_conta' when calling GlobaltaglimitedisponibilidadeApi.consultar_using_get23" if id_conta.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/limites-disponibilidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = id_conta

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'LimiteDisponibilidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltaglimitedisponibilidadeApi#consultar_using_get23\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
