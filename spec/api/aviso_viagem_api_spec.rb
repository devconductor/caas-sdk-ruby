=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::AvisoViagemApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AvisoViagemApi' do
  before do
    # run before each test
    @instance = Pier::AvisoViagemApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AvisoViagemApi' do
    it 'should create an instact of AvisoViagemApi' do
      @instance.should be_a(Pier::AvisoViagemApi)
    end
  end

  # unit tests for consultar_using_get5
  # Consultar um aviso viagem de acordo com o id passado
  # Este m\u00E9todo permite que seja consultado um aviso viagen existente na base do emissor.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o do Aviso Viagem (id).
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'consultar_using_get5 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for desabilitar_using_post
  # Desabilitar um aviso viagem de acordo com o id passado
  # Este m\u00E9todo permite que seja desabilitado um aviso viagen existente na base do emissor.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o do Aviso Viagem (id).
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'desabilitar_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for habilitar_using_post
  # Habilitar um aviso viagem de acordo com o id passado
  # Este m\u00E9todo permite que seja habilitado um aviso viagen existente na base do emissor.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o do Aviso Viagem (id).
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'habilitar_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get7
  # Lista os avisos viagens gerados pelo Emissor
  # Este m\u00E9todo permite que sejam listados os avisos viagens existentes na base do emissor.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [Integer] :id_cartao C\u00F3digo Identificador do cart\u00E3o na base (id)
  # @option opts [String] :codigo_pais Codigo identificador do pa\u00EDs na base (id)
  # @option opts [String] :data_inicio Data inicio do aviso viagem
  # @option opts [String] :data_fim Data fim do aviso viagem
  # @option opts [Integer] :flag_ativo Identifica se o aviso viagem esta ativo ou n\u00E3o
  # @return [PageAvisoViagemResponse]
  describe 'listar_using_get7 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for salvar_using_post3
  # Realiza o cadastro de um novo Aviso Viagem
  # Este m\u00E9todo permite que seja cadastrado um novo Aviso Viagem na base de dados do Emissor.
  # @param id_cartao C\u00F3digo Identificador do cart\u00E3o na base (id)
  # @param codigo_pais Codigo identificador do pa\u00EDs na base (id)
  # @param data_inicio Data inicio do aviso viagem
  # @param data_fim Data fim do aviso viagem
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'salvar_using_post3 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
