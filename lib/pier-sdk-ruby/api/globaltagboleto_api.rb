=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagboletoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{boleto_resource_consultar}}}
    # {{{boleto_resource_consultar_notes}}}
    # @param id {{{boleto_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [BoletoResponse]
    def consultar_using_get34(id, opts = {})
      data, _status_code, _headers = consultar_using_get34_with_http_info(id, opts)
      return data
    end

    # {{{boleto_resource_consultar}}}
    # {{{boleto_resource_consultar_notes}}}
    # @param id {{{boleto_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(BoletoResponse, Fixnum, Hash)>] BoletoResponse data, response status code and response headers
    def consultar_using_get34_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.consultar_using_get34 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagboletoApi.consultar_using_get34" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BoletoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#consultar_using_get34\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{boleto_resource_enviar_boleto_email}}}
    # {{{boleto_resource_enviar_boleto_email_notes}}}
    # @param id {{{boleto_resource_enviar_boleto_param_id}}}
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def enviar_boleto_email_using_post(id, request, opts = {})
      data, _status_code, _headers = enviar_boleto_email_using_post_with_http_info(id, request, opts)
      return data
    end

    # {{{boleto_resource_enviar_boleto_email}}}
    # {{{boleto_resource_enviar_boleto_email_notes}}}
    # @param id {{{boleto_resource_enviar_boleto_param_id}}}
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def enviar_boleto_email_using_post_with_http_info(id, request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.enviar_boleto_email_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagboletoApi.enviar_boleto_email_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'request' is set
      fail ArgumentError, "Missing the required parameter 'request' when calling GlobaltagboletoApi.enviar_boleto_email_using_post" if request.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos/{id}/enviar-email".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#enviar_boleto_email_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{boleto_resource_gerar_boleto}}}
    # {{{boleto_resource_gerar_boleto_notes}}}
    # @param boleto_request boletoRequest
    # @param [Hash] opts the optional parameters
    # @return [BoletoResponse]
    def gerar_boleto_using_post(boleto_request, opts = {})
      data, _status_code, _headers = gerar_boleto_using_post_with_http_info(boleto_request, opts)
      return data
    end

    # {{{boleto_resource_gerar_boleto}}}
    # {{{boleto_resource_gerar_boleto_notes}}}
    # @param boleto_request boletoRequest
    # @param [Hash] opts the optional parameters
    # @return [Array<(BoletoResponse, Fixnum, Hash)>] BoletoResponse data, response status code and response headers
    def gerar_boleto_using_post_with_http_info(boleto_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.gerar_boleto_using_post ..."
      end
      
      
      # verify the required parameter 'boleto_request' is set
      fail ArgumentError, "Missing the required parameter 'boleto_request' when calling GlobaltagboletoApi.gerar_boleto_using_post" if boleto_request.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(boleto_request)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BoletoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#gerar_boleto_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{boleto_resource_listar}}}
    # {{{boleto_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_conta {{{boleto_listar_request_id_conta_value}}}
    # @option opts [String] :data_vencimento {{{boleto_listar_request_data_vencimento_value}}}
    # @option opts [Float] :valor_boleto {{{boleto_listar_request_valor_value}}}
    # @option opts [Integer] :id_tipo_boleto {{{boleto_listar_request_id_tipo_boleto_value}}}
    # @return [PageBoletoListarResponse]
    def listar_using_get45(opts = {})
      data, _status_code, _headers = listar_using_get45_with_http_info(opts)
      return data
    end

    # {{{boleto_resource_listar}}}
    # {{{boleto_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_conta {{{boleto_listar_request_id_conta_value}}}
    # @option opts [String] :data_vencimento {{{boleto_listar_request_data_vencimento_value}}}
    # @option opts [Float] :valor_boleto {{{boleto_listar_request_valor_value}}}
    # @option opts [Integer] :id_tipo_boleto {{{boleto_listar_request_id_tipo_boleto_value}}}
    # @return [Array<(PageBoletoListarResponse, Fixnum, Hash)>] PageBoletoListarResponse data, response status code and response headers
    def listar_using_get45_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.listar_using_get45 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idConta'] = opts[:'id_conta'] if opts[:'id_conta']
      query_params[:'dataVencimento'] = opts[:'data_vencimento'] if opts[:'data_vencimento']
      query_params[:'valorBoleto'] = opts[:'valor_boleto'] if opts[:'valor_boleto']
      query_params[:'idTipoBoleto'] = opts[:'id_tipo_boleto'] if opts[:'id_tipo_boleto']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageBoletoListarResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#listar_using_get45\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{registro_cobranca_resource_registrar_boleto}}}
    # {{{registro_cobranca_resource_registrar_boleto_notes}}}
    # @param id {{{registro_cobranca_resource_registrar_boleto_param_id_boleto}}}
    # @param [Hash] opts the optional parameters
    # @return [BoletoResponse]
    def registrar_boleto_using_post(id, opts = {})
      data, _status_code, _headers = registrar_boleto_using_post_with_http_info(id, opts)
      return data
    end

    # {{{registro_cobranca_resource_registrar_boleto}}}
    # {{{registro_cobranca_resource_registrar_boleto_notes}}}
    # @param id {{{registro_cobranca_resource_registrar_boleto_param_id_boleto}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(BoletoResponse, Fixnum, Hash)>] BoletoResponse data, response status code and response headers
    def registrar_boleto_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.registrar_boleto_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagboletoApi.registrar_boleto_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos/{id}/registrar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BoletoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#registrar_boleto_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{boleto_resource_visualizar_boleto}}}
    # {{{boleto_resource_visualizar_boleto_notes}}}
    # @param id {{{boleto_resource_visualizar_boleto_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def visualizar_boleto_using_get(id, opts = {})
      data, _status_code, _headers = visualizar_boleto_using_get_with_http_info(id, opts)
      return data
    end

    # {{{boleto_resource_visualizar_boleto}}}
    # {{{boleto_resource_visualizar_boleto_notes}}}
    # @param id {{{boleto_resource_visualizar_boleto_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def visualizar_boleto_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagboletoApi.visualizar_boleto_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagboletoApi.visualizar_boleto_using_get" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/boletos/{id}/arquivo.pdf".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/pdf']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagboletoApi#visualizar_boleto_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
