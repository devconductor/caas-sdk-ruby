=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagdebitorecorrenteApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagdebitorecorrenteApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagdebitorecorrenteApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagdebitorecorrenteApi' do
    it 'should create an instact of GlobaltagdebitorecorrenteApi' do
      @instance.should be_a(Pier::GlobaltagdebitorecorrenteApi)
    end
  end

  # unit tests for aderir_debito_recorrente_using_post
  # {{{conta_debito_recorrente_resource_aderir}}}
  # {{{conta_debito_recorrente_resource_aderir_notes}}}
  # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
  # @param [Hash] opts the optional parameters
  # @return [ContaDebitoRecorrenteResponse]
  describe 'aderir_debito_recorrente_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for cancelar_debito_recorrente_using_post
  # {{{conta_debito_recorrente_resource_cancelar}}}
  # {{{conta_debito_recorrente_resource_cancelar_notes}}}
  # @param id {{{conta_debito_recorrente_resource_cancelar_param_id_debito_recorrente}}}
  # @param conta_debito_recorrente_persist contaDebitoRecorrentePersist
  # @param [Hash] opts the optional parameters
  # @return [ContaDebitoRecorrenteResponse]
  describe 'cancelar_debito_recorrente_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get18
  # {{{conta_debito_recorrente_resource_listar}}}
  # {{{conta_debito_recorrente_resource_listar_notes}}}
  # @param id_conta {{{conta_debito_recorrente_resource_listar_param_id_conta}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_tipo_debito_recorrente {{{conta_debito_recorrente_resource_listar_param_id_tipo_debito_recorrente}}}
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :data_hora_inicio {{{conta_debito_recorrente_request_data_hora_inicio_value}}}
  # @option opts [String] :data_hora_fim {{{conta_debito_recorrente_request_data_hora_fim_value}}}
  # @option opts [BOOLEAN] :ativo {{{conta_debito_recorrente_request_ativo_value}}}
  # @option opts [String] :data_hora_ultimo_pagamento {{{conta_debito_recorrente_request_data_hora_ultimo_pagamento_value}}}
  # @return [PageContaDebitoRecorrenteResponse]
  describe 'listar_using_get18 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get56
  # {{{tipo_debito_recorrente_resource_listar}}}
  # {{{tipo_debito_recorrente_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id {{{tipo_debito_recorrente_request_id_value}}}
  # @option opts [String] :descricao {{{tipo_debito_recorrente_request_descricao_value}}}
  # @option opts [Float] :valor {{{tipo_debito_recorrente_request_valor_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{tipo_debito_recorrente_request_flag_ativo_value}}}
  # @return [PageTipoDebitoRecorrenteResponse]
  describe 'listar_using_get56 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
