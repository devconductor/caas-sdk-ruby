=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagavisoviagemApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagavisoviagemApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagavisoviagemApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagavisoviagemApi' do
    it 'should create an instact of GlobaltagavisoviagemApi' do
      @instance.should be_a(Pier::GlobaltagavisoviagemApi)
    end
  end


  # unit tests for consultar_using_get6
  # {{{aviso_viagem_resource_consultar}}}
  # {{{aviso_viagem_resource_consultar_notes}}}
  # @param id {{{aviso_viagem_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'consultar_using_get6 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for desabilitar_using_post
  # {{{aviso_viagem_resource_desabilitar}}}
  # {{{aviso_viagem_resource_desabilitar_notes}}}
  # @param id {{{aviso_viagem_resource_desabilitar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'desabilitar_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for habilitar_using_post
  # {{{aviso_viagem_resource_habilitar}}}
  # {{{aviso_viagem_resource_habilitar_notes}}}
  # @param id {{{aviso_viagem_resource_habilitar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'habilitar_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get8
  # {{{aviso_viagem_resource_listar}}}
  # {{{aviso_viagem_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_cartao {{{aviso_viagem_request_id_cartao_value}}}
  # @option opts [String] :codigo_pais {{{aviso_viagem_request_codigo_pais_value}}}
  # @option opts [String] :data_inicio {{{aviso_viagem_request_data_inicio_value}}}
  # @option opts [String] :data_fim {{{aviso_viagem_request_data_fim_value}}}
  # @option opts [Integer] :flag_ativo {{{aviso_viagem_request_flag_ativo_value}}}
  # @return [PageAvisoViagemResponse]
  describe 'listar_using_get8 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post3
  # {{{aviso_viagem_resource_salvar}}}
  # {{{aviso_viagem_resource_salvar_notes}}}
  # @param id_cartao {{{aviso_viagem_persist_id_cartao_value}}}
  # @param codigo_pais {{{aviso_viagem_persist_codigo_pais_value}}}
  # @param data_inicio {{{aviso_viagem_persist_data_inicio_value}}}
  # @param data_fim {{{aviso_viagem_persist_data_fim_value}}}
  # @param [Hash] opts the optional parameters
  # @return [AvisoViagemResponse]
  describe 'salvar_using_post3 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


end

