=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagdocumentoApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagdocumentoApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagdocumentoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagdocumentoApi' do
    it 'should create an instact of GlobaltagdocumentoApi' do
      @instance.should be_a(Pier::GlobaltagdocumentoApi)
    end
  end


  # unit tests for alterar_using_put21
  # {{{tipo_template_resource_alterar}}}
  # {{{tipo_template_resource_alterar_notes}}}
  # @param id {{{tipo_template_resource_alterar_param_id}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [TipoTemplateResponse]
  describe 'alterar_using_put21 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for atualizar_using_put3
  # {{{documento_template_resource_atualizar}}}
  # {{{documento_template_resource_atualizar_notes}}}
  # @param id {{{documento_template_resource_atualizar_param_id}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [DocumentoTemplateResponse]
  describe 'atualizar_using_put3 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get16
  # {{{documento_resource_consultar}}}
  # {{{documento_resource_consultar_notes}}}
  # @param id {{{documento_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [DocumentoDetalhadoResponse]
  describe 'consultar_using_get16 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get17
  # {{{documento_template_resource_consultar}}}
  # {{{documento_template_resource_consultar_notes}}}
  # @param id {{{documento_template_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [DocumentoTemplateResponse]
  describe 'consultar_using_get17 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get46
  # {{{tipo_template_resource_consultar}}}
  # {{{tipo_template_resource_consultar_notes}}}
  # @param id {{{tipo_template_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [TipoTemplateResponse]
  describe 'consultar_using_get46 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for integrar_using_post1
  # {{{documento_resource_integrar}}}
  # {{{documento_resource_integrar_notes}}}
  # @param integrar_documento_request integrarDocumentoRequest
  # @param [Hash] opts the optional parameters
  # @return [DocumentoIntegracaoResponse]
  describe 'integrar_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get21
  # {{{documento_resource_listar}}}
  # {{{documento_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_template_documento {{{documento_request_id_template_documento_value}}}
  # @option opts [String] :nome {{{documento_request_nome_value}}}
  # @option opts [String] :extensao {{{documento_request_extensao_value}}}
  # @return [PageDocumentoResponse]
  describe 'listar_using_get21 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get22
  # {{{documento_template_resource_listar}}}
  # {{{documento_template_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_tipo_template {{{documento_template_request_id_tipo_template_value}}}
  # @return [PageDocumentoTemplateResponse]
  describe 'listar_using_get22 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get57
  # {{{tipo_template_resource_listar}}}
  # {{{tipo_template_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageTipoTemplateResponse]
  describe 'listar_using_get57 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post11
  # {{{documento_resource_salvar}}}
  # {{{documento_resource_salvar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [DocumentoDetalhadoResponse]
  describe 'salvar_using_post11 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post12
  # {{{documento_template_resource_salvar}}}
  # {{{documento_template_resource_salvar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [DocumentoTemplateResponse]
  describe 'salvar_using_post12 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post31
  # {{{tipo_template_resource_salvar}}}
  # {{{tipo_template_resource_salvar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [TipoTemplateResponse]
  describe 'salvar_using_post31 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


end

