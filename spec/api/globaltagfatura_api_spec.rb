=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagfaturaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagfaturaApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagfaturaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagfaturaApi' do
    it 'should create an instact of GlobaltagfaturaApi' do
      @instance.should be_a(Pier::GlobaltagfaturaApi)
    end
  end

  # unit tests for consultar_fatura_using_get1
  # {{{fatura_resource_consultar_fatura}}}
  # {{{fatura_resource_consultar_fatura_notes}}}
  # @param data_vencimento {{{fatura_resource_consultar_fatura_param_data_vencimento}}}
  # @param id_conta {{{fatura_resource_consultar_fatura_param_id_conta}}}
  # @param [Hash] opts the optional parameters
  # @return [FaturaDetalheResponse]
  describe 'consultar_fatura_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_lancamentos_futuros_fatura_using_get1
  # {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura}}}
  # {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura_notes}}}
  # @param id {{{fatura_conta_resource_consultar_lancamentos_futuros_fatura_param_id_conta}}}
  # @param data_vencimento_padrao {{{plano_parcelamento_request_data_vencimento_padrao_value}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PagePlanoParcelamentoResponse]
  describe 'consultar_lancamentos_futuros_fatura_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for enviar_fatura_email_using_post
  # {{{fatura_conta_resource_enviar_fatura_email}}}
  # {{{fatura_conta_resource_enviar_fatura_email_notes}}}
  # @param id {{{fatura_conta_resource_enviar_fatura_email_param_id_conta}}}
  # @param data_vencimento {{{fatura_conta_resource_enviar_fatura_email_param_data_vencimento}}}
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email {{{fatura_conta_resource_enviar_fatura_email_param_email}}}
  # @return [Object]
  describe 'enviar_fatura_email_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_faturas_using_get1
  # {{{fatura_resource_listar_faturas}}}
  # {{{fatura_resource_listar_faturas_notes}}}
  # @param id_conta {{{fatura_resource_listar_faturas_param_id_conta}}}
  # @param [Hash] opts the optional parameters
  # @option opts [String] :situacao_processamento {{{fatura_resource_listar_faturas_param_situacao_processamento}}}
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @return [PageFaturaResponse]
  describe 'listar_faturas_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for visualizar_documento_using_get
  # {{{fatura_conta_resource_visualizar_documento}}}
  # {{{fatura_conta_resource_visualizar_documento_notes}}}
  # @param id {{{fatura_conta_resource_visualizar_documento_param_id_conta}}}
  # @param data_vencimento {{{fatura_conta_resource_visualizar_documento_param_data_vencimento}}}
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :flag_apenas_demostrativo {{{fatura_conta_resource_enviar_fatura_email_param_flag_apenas_demostrativo}}}
  # @option opts [BOOLEAN] :flag_registra_boleto {{{fatura_conta_resource_enviar_fatura_email_param_flag_registra_boleto}}}
  # @return [Object]
  describe 'visualizar_documento_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
