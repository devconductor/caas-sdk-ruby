=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::FaturaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FaturaApi' do
  before do
    # run before each test
    @instance = Pier::FaturaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FaturaApi' do
    it 'should create an instact of FaturaApi' do
      @instance.should be_a(Pier::FaturaApi)
    end
  end

  # unit tests for consultar_fatura_using_get1
  # Consulta fatura de um cliente
  # Consulta fatura de um cliente pela data de vencimento.
  # @param data_vencimento Data Vencimento
  # @param id_conta C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [FaturaDetalheResponse]
  describe 'consultar_fatura_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_lancamentos_futuros_fatura_using_get1
  # Listar planos de parcelamento
  # Lista os planos de parcelamento da fatura de uma conta.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param data_vencimento_padrao Indica a data de vencimento padr\u00E3o das faturas
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PagePlanoParcelamentoResponse]
  describe 'consultar_lancamentos_futuros_fatura_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for enviar_fatura_email_using_post
  # Envia 2\u00AA via de fatura por E-mail
  # Envia a segunda via da fatura para o e-mail informado/cadastrado.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param data_vencimento Data de Vencimento da fatura (yyyy-MM-dd).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :email E-mail para envio da 2\u00AA via da fatura, caso n\u00E3o seja informado ser\u00E1 usado o e-mail cadastrado.
  # @return [Object]
  describe 'enviar_fatura_email_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_faturas_using_get1
  # Listar faturas de um cliente.
  # Lista faturas de um cliente.
  # @param id_conta C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :situacao_processamento Status do processamento das faturas. Valores possiveis [ABERTA, FECHADA, TODAS].
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageFaturaResponse]
  describe 'listar_faturas_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for visualizar_documento_using_get
  # Permite visualizar o extrato da fatura em formato PDF
  # Esta opera\u00E7\u00E3o permite visualizar o extrato da fatura de uma determinada conta, em formato PDF. Quando ela for a fatura ativa, ou seja, a do m\u00EAs corrente, o pdf ser\u00E1 composto pelo extrato de lan\u00E7amentos e pela ficha de compensa\u00E7\u00E3o banc\u00E1ria. Quando for de uma fatura do hist\u00F3rico do cliente, o PDF ser\u00E1 composto apenas pelo extrato de transa\u00E7\u00F5es.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param data_vencimento Data de Vencimento da fatura.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'visualizar_documento_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
