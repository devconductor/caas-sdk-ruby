=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagoportunidadeApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{tipo_oportunidade_resource_alterar_status}}}
    # {{{tipo_oportunidade_resource_alterar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_alterar_status_param_id}}}
    # @param id_status {{{tipo_oportunidade_resource_alterar_status_param_id_status}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [StatusOportunidadeResponse]
    def alterar_status_using_put(id, id_status, persist, opts = {})
      data, _status_code, _headers = alterar_status_using_put_with_http_info(id, id_status, persist, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_alterar_status}}}
    # {{{tipo_oportunidade_resource_alterar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_alterar_status_param_id}}}
    # @param id_status {{{tipo_oportunidade_resource_alterar_status_param_id_status}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(StatusOportunidadeResponse, Fixnum, Hash)>] StatusOportunidadeResponse data, response status code and response headers
    def alterar_status_using_put_with_http_info(id, id_status, persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.alterar_status_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.alterar_status_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_status' is set
      fail ArgumentError, "Missing the required parameter 'id_status' when calling GlobaltagoportunidadeApi.alterar_status_using_put" if id_status.nil?
      
      
      
      
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagoportunidadeApi.alterar_status_using_put" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}/status/{idStatus}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'idStatus' + '}', id_status.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StatusOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#alterar_status_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{oportunidade_resource_alterar}}}
    # {{{oportunidade_resource_alterar_notes}}}
    # @param id {{{oportunidade_resource_alterar_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [OportunidadeResponse]
    def alterar_using_put12(id, update, opts = {})
      data, _status_code, _headers = alterar_using_put12_with_http_info(id, update, opts)
      return data
    end

    # {{{oportunidade_resource_alterar}}}
    # {{{oportunidade_resource_alterar_notes}}}
    # @param id {{{oportunidade_resource_alterar_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [Array<(OportunidadeResponse, Fixnum, Hash)>] OportunidadeResponse data, response status code and response headers
    def alterar_using_put12_with_http_info(id, update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.alterar_using_put12 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.alterar_using_put12" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'update' is set
      fail ArgumentError, "Missing the required parameter 'update' when calling GlobaltagoportunidadeApi.alterar_using_put12" if update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/oportunidades/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#alterar_using_put12\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_alterar}}}
    # {{{tipo_oportunidade_resource_alterar_notes}}}
    # @param id {{{tipo_oportunidade_resource_alterar_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [TipoOportunidadeResponse]
    def alterar_using_put20(id, persist, opts = {})
      data, _status_code, _headers = alterar_using_put20_with_http_info(id, persist, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_alterar}}}
    # {{{tipo_oportunidade_resource_alterar_notes}}}
    # @param id {{{tipo_oportunidade_resource_alterar_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoOportunidadeResponse, Fixnum, Hash)>] TipoOportunidadeResponse data, response status code and response headers
    def alterar_using_put20_with_http_info(id, persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.alterar_using_put20 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.alterar_using_put20" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagoportunidadeApi.alterar_using_put20" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#alterar_using_put20\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_consultar_status}}}
    # {{{tipo_oportunidade_resource_consultar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_consultar_status_param_id}}}
    # @param id_status {{{tipo_oportunidade_resource_consultar_status_param_id_status}}}
    # @param [Hash] opts the optional parameters
    # @return [StatusOportunidadeResponse]
    def consultar_status_using_get(id, id_status, opts = {})
      data, _status_code, _headers = consultar_status_using_get_with_http_info(id, id_status, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_consultar_status}}}
    # {{{tipo_oportunidade_resource_consultar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_consultar_status_param_id}}}
    # @param id_status {{{tipo_oportunidade_resource_consultar_status_param_id_status}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(StatusOportunidadeResponse, Fixnum, Hash)>] StatusOportunidadeResponse data, response status code and response headers
    def consultar_status_using_get_with_http_info(id, id_status, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.consultar_status_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.consultar_status_using_get" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_status' is set
      fail ArgumentError, "Missing the required parameter 'id_status' when calling GlobaltagoportunidadeApi.consultar_status_using_get" if id_status.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}/status/{idStatus}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'idStatus' + '}', id_status.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StatusOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#consultar_status_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{oportunidade_resource_consultar}}}
    # {{{oportunidade_resource_consultar_notes}}}
    # @param id {{{oportunidade_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [OportunidadeResponse]
    def consultar_using_get25(id, opts = {})
      data, _status_code, _headers = consultar_using_get25_with_http_info(id, opts)
      return data
    end

    # {{{oportunidade_resource_consultar}}}
    # {{{oportunidade_resource_consultar_notes}}}
    # @param id {{{oportunidade_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(OportunidadeResponse, Fixnum, Hash)>] OportunidadeResponse data, response status code and response headers
    def consultar_using_get25_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.consultar_using_get25 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.consultar_using_get25" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/oportunidades/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#consultar_using_get25\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_consultar}}}
    # {{{tipo_oportunidade_resource_consultar_notes}}}
    # @param id {{{tipo_oportunidade_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [TipoOportunidadeResponse]
    def consultar_using_get44(id, opts = {})
      data, _status_code, _headers = consultar_using_get44_with_http_info(id, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_consultar}}}
    # {{{tipo_oportunidade_resource_consultar_notes}}}
    # @param id {{{tipo_oportunidade_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoOportunidadeResponse, Fixnum, Hash)>] TipoOportunidadeResponse data, response status code and response headers
    def consultar_using_get44_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.consultar_using_get44 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.consultar_using_get44" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#consultar_using_get44\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_listar_auditorias_status}}}
    # {{{tipo_oportunidade_resource_listar_auditorias_status_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :rev_type {{{status_oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_date {{{status_oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [Integer] :id {{{status_oportunidade_a_u_d_request_id_value}}}
    # @option opts [Integer] :id_tipo_oportunidade {{{status_oportunidade_a_u_d_request_id_tipo_oportunidade_value}}}
    # @option opts [String] :nome {{{status_oportunidade_a_u_d_request_nome_value}}}
    # @option opts [String] :descricao {{{status_oportunidade_a_u_d_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_user {{{status_oportunidade_a_u_d_request_rev_user_value}}}
    # @return [PageStatusOportunidadeAUDResponse]
    def listar_auditorias_status_using_get(opts = {})
      data, _status_code, _headers = listar_auditorias_status_using_get_with_http_info(opts)
      return data
    end

    # {{{tipo_oportunidade_resource_listar_auditorias_status}}}
    # {{{tipo_oportunidade_resource_listar_auditorias_status_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :rev_type {{{status_oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_date {{{status_oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [Integer] :id {{{status_oportunidade_a_u_d_request_id_value}}}
    # @option opts [Integer] :id_tipo_oportunidade {{{status_oportunidade_a_u_d_request_id_tipo_oportunidade_value}}}
    # @option opts [String] :nome {{{status_oportunidade_a_u_d_request_nome_value}}}
    # @option opts [String] :descricao {{{status_oportunidade_a_u_d_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_user {{{status_oportunidade_a_u_d_request_rev_user_value}}}
    # @return [Array<(PageStatusOportunidadeAUDResponse, Fixnum, Hash)>] PageStatusOportunidadeAUDResponse data, response status code and response headers
    def listar_auditorias_status_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_auditorias_status_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/auditorias-status-oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'revType'] = opts[:'rev_type'] if opts[:'rev_type']
      query_params[:'revDate'] = opts[:'rev_date'] if opts[:'rev_date']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'idTipoOportunidade'] = opts[:'id_tipo_oportunidade'] if opts[:'id_tipo_oportunidade']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']
      query_params[:'revUser'] = opts[:'rev_user'] if opts[:'rev_user']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageStatusOportunidadeAUDResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_auditorias_status_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{oportunidade_resource_listar_auditorias}}}
    # {{{oportunidade_resource_listar_auditorias_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_status_oportunidade {{{oportunidade_a_u_d_request_id_status_oportunidade_value}}}
    # @option opts [String] :data_cadastro {{{oportunidade_a_u_d_request_data_cadastro_value}}}
    # @option opts [String] :data_atualizacao {{{oportunidade_a_u_d_request_data_atualizacao_value}}}
    # @option opts [String] :numero_receita_federal {{{oportunidade_a_u_d_request_numero_receita_federal_value}}}
    # @option opts [String] :data_inicio_vigencia {{{oportunidade_a_u_d_request_data_inicio_vigencia_value}}}
    # @option opts [String] :datat_fim_vigencia {{{oportunidade_a_u_d_request_datat_fim_vigencia_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_date {{{oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [String] :rev_type {{{oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_user {{{oportunidade_a_u_d_request_rev_user_value}}}
    # @return [PageOportunidadeAUDResponse]
    def listar_auditorias_using_get(opts = {})
      data, _status_code, _headers = listar_auditorias_using_get_with_http_info(opts)
      return data
    end

    # {{{oportunidade_resource_listar_auditorias}}}
    # {{{oportunidade_resource_listar_auditorias_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_status_oportunidade {{{oportunidade_a_u_d_request_id_status_oportunidade_value}}}
    # @option opts [String] :data_cadastro {{{oportunidade_a_u_d_request_data_cadastro_value}}}
    # @option opts [String] :data_atualizacao {{{oportunidade_a_u_d_request_data_atualizacao_value}}}
    # @option opts [String] :numero_receita_federal {{{oportunidade_a_u_d_request_numero_receita_federal_value}}}
    # @option opts [String] :data_inicio_vigencia {{{oportunidade_a_u_d_request_data_inicio_vigencia_value}}}
    # @option opts [String] :datat_fim_vigencia {{{oportunidade_a_u_d_request_datat_fim_vigencia_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_date {{{oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [String] :rev_type {{{oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_user {{{oportunidade_a_u_d_request_rev_user_value}}}
    # @return [Array<(PageOportunidadeAUDResponse, Fixnum, Hash)>] PageOportunidadeAUDResponse data, response status code and response headers
    def listar_auditorias_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_auditorias_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/auditorias-oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idStatusOportunidade'] = opts[:'id_status_oportunidade'] if opts[:'id_status_oportunidade']
      query_params[:'dataCadastro'] = opts[:'data_cadastro'] if opts[:'data_cadastro']
      query_params[:'dataAtualizacao'] = opts[:'data_atualizacao'] if opts[:'data_atualizacao']
      query_params[:'numeroReceitaFederal'] = opts[:'numero_receita_federal'] if opts[:'numero_receita_federal']
      query_params[:'dataInicioVigencia'] = opts[:'data_inicio_vigencia'] if opts[:'data_inicio_vigencia']
      query_params[:'datatFimVigencia'] = opts[:'datat_fim_vigencia'] if opts[:'datat_fim_vigencia']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']
      query_params[:'revDate'] = opts[:'rev_date'] if opts[:'rev_date']
      query_params[:'revType'] = opts[:'rev_type'] if opts[:'rev_type']
      query_params[:'revUser'] = opts[:'rev_user'] if opts[:'rev_user']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOportunidadeAUDResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_auditorias_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_listar_auditorias}}}
    # {{{tipo_oportunidade_resource_listar_auditorias_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :rev_type {{{tipo_oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_date {{{tipo_oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [Integer] :id {{{tipo_oportunidade_a_u_d_request_id_value}}}
    # @option opts [String] :descricao {{{tipo_oportunidade_a_u_d_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_user {{{tipo_oportunidade_a_u_d_request_rev_user_value}}}
    # @return [PageTipoOportunidadeAUDResponse]
    def listar_auditorias_using_get1(opts = {})
      data, _status_code, _headers = listar_auditorias_using_get1_with_http_info(opts)
      return data
    end

    # {{{tipo_oportunidade_resource_listar_auditorias}}}
    # {{{tipo_oportunidade_resource_listar_auditorias_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :rev_type {{{tipo_oportunidade_a_u_d_request_rev_type_value}}}
    # @option opts [String] :rev_date {{{tipo_oportunidade_a_u_d_request_rev_date_value}}}
    # @option opts [Integer] :id {{{tipo_oportunidade_a_u_d_request_id_value}}}
    # @option opts [String] :descricao {{{tipo_oportunidade_a_u_d_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_a_u_d_request_flag_ativo_value}}}
    # @option opts [String] :rev_user {{{tipo_oportunidade_a_u_d_request_rev_user_value}}}
    # @return [Array<(PageTipoOportunidadeAUDResponse, Fixnum, Hash)>] PageTipoOportunidadeAUDResponse data, response status code and response headers
    def listar_auditorias_using_get1_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_auditorias_using_get1 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/auditorias-tipos-oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'revType'] = opts[:'rev_type'] if opts[:'rev_type']
      query_params[:'revDate'] = opts[:'rev_date'] if opts[:'rev_date']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']
      query_params[:'revUser'] = opts[:'rev_user'] if opts[:'rev_user']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoOportunidadeAUDResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_auditorias_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_listar_status}}}
    # {{{tipo_oportunidade_resource_listar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_listar_status_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{status_oportunidade_request_nome_value}}}
    # @option opts [String] :descricao {{{status_oportunidade_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_request_flag_ativo_value}}}
    # @return [PageStatusOportunidadeResponse]
    def listar_status_using_get(id, opts = {})
      data, _status_code, _headers = listar_status_using_get_with_http_info(id, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_listar_status}}}
    # {{{tipo_oportunidade_resource_listar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_listar_status_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{status_oportunidade_request_nome_value}}}
    # @option opts [String] :descricao {{{status_oportunidade_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_request_flag_ativo_value}}}
    # @return [Array<(PageStatusOportunidadeResponse, Fixnum, Hash)>] PageStatusOportunidadeResponse data, response status code and response headers
    def listar_status_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_status_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.listar_status_using_get" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}/status".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageStatusOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_status_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{oportunidade_resource_listar}}}
    # {{{oportunidade_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_status_oportunidade {{{oportunidade_request_id_status_oportunidade_value}}}
    # @option opts [String] :data_cadastro {{{oportunidade_request_data_cadastro_value}}}
    # @option opts [String] :data_atualizacao {{{oportunidade_request_data_atualizacao_value}}}
    # @option opts [String] :numero_receita_federal {{{oportunidade_request_numero_receita_federal_value}}}
    # @option opts [String] :data_inicio_vigencia {{{oportunidade_request_data_inicio_vigencia_value}}}
    # @option opts [String] :data_fim_vigencia {{{oportunidade_request_data_fim_vigencia_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_request_flag_ativo_value}}}
    # @return [PageOportunidadeResponse]
    def listar_using_get35(opts = {})
      data, _status_code, _headers = listar_using_get35_with_http_info(opts)
      return data
    end

    # {{{oportunidade_resource_listar}}}
    # {{{oportunidade_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_status_oportunidade {{{oportunidade_request_id_status_oportunidade_value}}}
    # @option opts [String] :data_cadastro {{{oportunidade_request_data_cadastro_value}}}
    # @option opts [String] :data_atualizacao {{{oportunidade_request_data_atualizacao_value}}}
    # @option opts [String] :numero_receita_federal {{{oportunidade_request_numero_receita_federal_value}}}
    # @option opts [String] :data_inicio_vigencia {{{oportunidade_request_data_inicio_vigencia_value}}}
    # @option opts [String] :data_fim_vigencia {{{oportunidade_request_data_fim_vigencia_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_request_flag_ativo_value}}}
    # @return [Array<(PageOportunidadeResponse, Fixnum, Hash)>] PageOportunidadeResponse data, response status code and response headers
    def listar_using_get35_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_using_get35 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idStatusOportunidade'] = opts[:'id_status_oportunidade'] if opts[:'id_status_oportunidade']
      query_params[:'dataCadastro'] = opts[:'data_cadastro'] if opts[:'data_cadastro']
      query_params[:'dataAtualizacao'] = opts[:'data_atualizacao'] if opts[:'data_atualizacao']
      query_params[:'numeroReceitaFederal'] = opts[:'numero_receita_federal'] if opts[:'numero_receita_federal']
      query_params[:'dataInicioVigencia'] = opts[:'data_inicio_vigencia'] if opts[:'data_inicio_vigencia']
      query_params[:'dataFimVigencia'] = opts[:'data_fim_vigencia'] if opts[:'data_fim_vigencia']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_using_get35\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_listar}}}
    # {{{tipo_oportunidade_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :descricao {{{tipo_oportunidade_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_request_flag_ativo_value}}}
    # @return [PageTipoOportunidadeResponse]
    def listar_using_get55(opts = {})
      data, _status_code, _headers = listar_using_get55_with_http_info(opts)
      return data
    end

    # {{{tipo_oportunidade_resource_listar}}}
    # {{{tipo_oportunidade_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :descricao {{{tipo_oportunidade_request_descricao_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_request_flag_ativo_value}}}
    # @return [Array<(PageTipoOportunidadeResponse, Fixnum, Hash)>] PageTipoOportunidadeResponse data, response status code and response headers
    def listar_using_get55_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.listar_using_get55 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#listar_using_get55\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_salvar_status}}}
    # {{{tipo_oportunidade_resource_salvar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_salvar_status_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [StatusOportunidadeResponse]
    def salvar_status_using_post(id, persist, opts = {})
      data, _status_code, _headers = salvar_status_using_post_with_http_info(id, persist, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_salvar_status}}}
    # {{{tipo_oportunidade_resource_salvar_status_notes}}}
    # @param id {{{tipo_oportunidade_resource_salvar_status_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(StatusOportunidadeResponse, Fixnum, Hash)>] StatusOportunidadeResponse data, response status code and response headers
    def salvar_status_using_post_with_http_info(id, persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.salvar_status_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagoportunidadeApi.salvar_status_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagoportunidadeApi.salvar_status_using_post" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades/{id}/status".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'StatusOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#salvar_status_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{oportunidade_resource_salvar}}}
    # {{{oportunidade_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [OportunidadeResponse]
    def salvar_using_post21(persist, opts = {})
      data, _status_code, _headers = salvar_using_post21_with_http_info(persist, opts)
      return data
    end

    # {{{oportunidade_resource_salvar}}}
    # {{{oportunidade_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(OportunidadeResponse, Fixnum, Hash)>] OportunidadeResponse data, response status code and response headers
    def salvar_using_post21_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.salvar_using_post21 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagoportunidadeApi.salvar_using_post21" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#salvar_using_post21\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_oportunidade_resource_salvar}}}
    # {{{tipo_oportunidade_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [TipoOportunidadeResponse]
    def salvar_using_post30(persist, opts = {})
      data, _status_code, _headers = salvar_using_post30_with_http_info(persist, opts)
      return data
    end

    # {{{tipo_oportunidade_resource_salvar}}}
    # {{{tipo_oportunidade_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TipoOportunidadeResponse, Fixnum, Hash)>] TipoOportunidadeResponse data, response status code and response headers
    def salvar_using_post30_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagoportunidadeApi.salvar_using_post30 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagoportunidadeApi.salvar_using_post30" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-oportunidades".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TipoOportunidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagoportunidadeApi#salvar_using_post30\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
