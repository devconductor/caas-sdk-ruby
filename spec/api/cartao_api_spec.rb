=begin
CaaS - Conductor as a Service

Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o

OpenAPI spec version: 0.0.1
Contact: contato@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://dev.conductor.com.br/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::CartaoApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CartaoApi' do
  before do
    # run before each test
    @instance = Pier::CartaoApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CartaoApi' do
    it 'should create an instact of CartaoApi' do
      @instance.should be_a(Pier::CartaoApi)
    end
  end

  # unit tests for cancelar_cartao_using_post
  # /contas/{idConta}/cartoes/{idCartao}/cancelar
  # Cancelar um determinado cart\u00C3\u00A3o
  # @param id_conta ID da Conta
  # @param id_cartao ID do Cart\u00C3\u00A3o que deseja cancelar
  # @param motivo Motivo do cancelamento
  # @param observacao Alguma observa\u00C3\u00A7\u00C3\u00A3o para o cancelamento
  # @param [Hash] opts the optional parameters
  # @return [CancelarCartaoResponse]
  describe 'cancelar_cartao_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_cartao_using_get
  # /contas/{idConta}/cartoes/{idCartao}
  # Consultar as informa\u00C3\u00A7\u00C3\u00B5es de um determinado cart\u00C3\u00A3o de uma conta
  # @param id_conta ID da Conta que pertence o cart\u00C3\u00A3o
  # @param id_cartao ID do Cart\u00C3\u00A3o que deseja consultar
  # @param [Hash] opts the optional parameters
  # @option opts [String] :numero_cartao N\u00C3\u00BAmero do Cart\u00C3\u00A3o que deseja consultar (opcional)
  # @return [ConsultarCartaoResponse]
  describe 'consultar_cartao_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_cartoes_using_get
  # /contas/{idConta}/cartoes
  # Consultar todos os cart\u00C3\u00B5es de uma determinada conta
  # @param id_conta ID da Conta
  # @param [Hash] opts the optional parameters
  # @return [ConsultarCartaoResponse]
  describe 'consultar_cartoes_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_extrato_faturas_using_get
  # /contas/{idConta}/cartoes/{idCartao}/faturas
  # Consulte os extratos/faturas do cart\u00C3\u00A3o de uma determinada conta
  # @param id_conta ID da Conta
  # @param id_cartao ID do Cart\u00C3\u00A3o que deseja consultar o extrato
  # @param data_vencimento Data limite para o vencimento das transa\u00C3\u00A7\u00C3\u00B5es
  # @param [Hash] opts the optional parameters
  # @return [ConsultarExtratoContaResponse]
  describe 'consultar_extrato_faturas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_saldos_limites_using_get
  # /contas/{idConta}/cartoes/{idCartao}/limites
  # Consulte os limites de um determinado cart\u00C3\u00A3o
  # @param id_conta ID da Conta
  # @param id_cartao ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite
  # @param [Hash] opts the optional parameters
  # @return [ConsultarSaldoLimitesResponse]
  describe 'consultar_saldos_limites_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for desbloquear_cartao_using_post
  # /contas/{idConta}/cartoes/{idCartao}/desbloquear
  # Desbloquear cart\u00C3\u00A3o de uma determinada conta
  # @param id_conta ID da Conta
  # @param id_cartao ID do Cart\u00C3\u00A3o que deseja consultar o saldo/limite
  # @param codigo_segurancao C\u00C3\u00B3digo seguran\u00C3\u00A7a do cart\u00C3\u00A3o
  # @param [Hash] opts the optional parameters
  # @return [DesbloquearCartaoResponse]
  describe 'desbloquear_cartao_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
