=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagestabelecimentoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{origem_comercial_resource_alterar_origem_comercial}}}
    # {{{origem_comercial_resource_alterar_origem_comercial_notes}}}
    # @param id {{{origem_comercial_resource_alterar_origem_comercial_param_id}}}
    # @param origem_comercial_update origemComercialUpdate
    # @param [Hash] opts the optional parameters
    # @return [OrigemComercialResponse]
    def alterar_origem_comercial_using_put(id, origem_comercial_update, opts = {})
      data, _status_code, _headers = alterar_origem_comercial_using_put_with_http_info(id, origem_comercial_update, opts)
      return data
    end

    # {{{origem_comercial_resource_alterar_origem_comercial}}}
    # {{{origem_comercial_resource_alterar_origem_comercial_notes}}}
    # @param id {{{origem_comercial_resource_alterar_origem_comercial_param_id}}}
    # @param origem_comercial_update origemComercialUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(OrigemComercialResponse, Fixnum, Hash)>] OrigemComercialResponse data, response status code and response headers
    def alterar_origem_comercial_using_put_with_http_info(id, origem_comercial_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_origem_comercial_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_origem_comercial_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'origem_comercial_update' is set
      fail ArgumentError, "Missing the required parameter 'origem_comercial_update' when calling GlobaltagestabelecimentoApi.alterar_origem_comercial_using_put" if origem_comercial_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/origens-comerciais/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(origem_comercial_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_origem_comercial_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{maquineta_resource_alterar}}}
    # {{{maquineta_resource_alterar_notes}}}
    # @param id {{{maquineta_resource_alterar_param_id}}}
    # @param maquineta_update maquinetaUpdate
    # @param [Hash] opts the optional parameters
    # @return [MaquinetaResponse]
    def alterar_using_put10(id, maquineta_update, opts = {})
      data, _status_code, _headers = alterar_using_put10_with_http_info(id, maquineta_update, opts)
      return data
    end

    # {{{maquineta_resource_alterar}}}
    # {{{maquineta_resource_alterar_notes}}}
    # @param id {{{maquineta_resource_alterar_param_id}}}
    # @param maquineta_update maquinetaUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(MaquinetaResponse, Fixnum, Hash)>] MaquinetaResponse data, response status code and response headers
    def alterar_using_put10_with_http_info(id, maquineta_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put10 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put10" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'maquineta_update' is set
      fail ArgumentError, "Missing the required parameter 'maquineta_update' when calling GlobaltagestabelecimentoApi.alterar_using_put10" if maquineta_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/maquinetas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(maquineta_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'MaquinetaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put10\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_credor_resource_alterar}}}
    # {{{operacao_credor_resource_alterar_notes}}}
    # @param id {{{operacao_credor_resource_alterar_param_id}}}
    # @param operacao_credor_update operacaoCredorUpdate
    # @param [Hash] opts the optional parameters
    # @return [OperacaoCredorResponse]
    def alterar_using_put11(id, operacao_credor_update, opts = {})
      data, _status_code, _headers = alterar_using_put11_with_http_info(id, operacao_credor_update, opts)
      return data
    end

    # {{{operacao_credor_resource_alterar}}}
    # {{{operacao_credor_resource_alterar_notes}}}
    # @param id {{{operacao_credor_resource_alterar_param_id}}}
    # @param operacao_credor_update operacaoCredorUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(OperacaoCredorResponse, Fixnum, Hash)>] OperacaoCredorResponse data, response status code and response headers
    def alterar_using_put11_with_http_info(id, operacao_credor_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put11 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put11" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'operacao_credor_update' is set
      fail ArgumentError, "Missing the required parameter 'operacao_credor_update' when calling GlobaltagestabelecimentoApi.alterar_using_put11" if operacao_credor_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/regras-operacoes-estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(operacao_credor_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OperacaoCredorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put11\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_estabelecimento_resource_alterar}}}
    # {{{telefone_estabelecimento_resource_alterar_notes}}}
    # @param id {{{telefone_estabelecimento_resource_alterar_param_id}}}
    # @param telefone_estabelecimento_update telefoneEstabelecimentoUpdate
    # @param [Hash] opts the optional parameters
    # @return [TelefoneEstabelecimentoResponse]
    def alterar_using_put17(id, telefone_estabelecimento_update, opts = {})
      data, _status_code, _headers = alterar_using_put17_with_http_info(id, telefone_estabelecimento_update, opts)
      return data
    end

    # {{{telefone_estabelecimento_resource_alterar}}}
    # {{{telefone_estabelecimento_resource_alterar_notes}}}
    # @param id {{{telefone_estabelecimento_resource_alterar_param_id}}}
    # @param telefone_estabelecimento_update telefoneEstabelecimentoUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(TelefoneEstabelecimentoResponse, Fixnum, Hash)>] TelefoneEstabelecimentoResponse data, response status code and response headers
    def alterar_using_put17_with_http_info(id, telefone_estabelecimento_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put17 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put17" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'telefone_estabelecimento_update' is set
      fail ArgumentError, "Missing the required parameter 'telefone_estabelecimento_update' when calling GlobaltagestabelecimentoApi.alterar_using_put17" if telefone_estabelecimento_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones-estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(telefone_estabelecimento_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put17\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{terminal_resource_alterar}}}
    # {{{terminal_resource_alterar_notes}}}
    # @param id {{{terminal_resource_alterar_param_id}}}
    # @param terminal_update terminalUpdate
    # @param [Hash] opts the optional parameters
    # @return [TerminalResponse]
    def alterar_using_put19(id, terminal_update, opts = {})
      data, _status_code, _headers = alterar_using_put19_with_http_info(id, terminal_update, opts)
      return data
    end

    # {{{terminal_resource_alterar}}}
    # {{{terminal_resource_alterar_notes}}}
    # @param id {{{terminal_resource_alterar_param_id}}}
    # @param terminal_update terminalUpdate
    # @param [Hash] opts the optional parameters
    # @return [Array<(TerminalResponse, Fixnum, Hash)>] TerminalResponse data, response status code and response headers
    def alterar_using_put19_with_http_info(id, terminal_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put19 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put19" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'terminal_update' is set
      fail ArgumentError, "Missing the required parameter 'terminal_update' when calling GlobaltagestabelecimentoApi.alterar_using_put19" if terminal_update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/terminais/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(terminal_update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TerminalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put19\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{estabelecimento_resource_alterar}}}
    # {{{estabelecimento_resource_alterar_notes}}}
    # @param id {{{estabelecimento_resource_alterar_param_id_estabelecimento}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [EstabelecimentoResponse]
    def alterar_using_put6(id, update, opts = {})
      data, _status_code, _headers = alterar_using_put6_with_http_info(id, update, opts)
      return data
    end

    # {{{estabelecimento_resource_alterar}}}
    # {{{estabelecimento_resource_alterar_notes}}}
    # @param id {{{estabelecimento_resource_alterar_param_id_estabelecimento}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [Array<(EstabelecimentoResponse, Fixnum, Hash)>] EstabelecimentoResponse data, response status code and response headers
    def alterar_using_put6_with_http_info(id, update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put6 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put6" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'update' is set
      fail ArgumentError, "Missing the required parameter 'update' when calling GlobaltagestabelecimentoApi.alterar_using_put6" if update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put6\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{grupo_economico_resource_alterar}}}
    # {{{grupo_economico_resource_alterar_notes}}}
    # @param id {{{grupo_economico_resource_alterar_param_id}}}
    # @param grupo_economico_dto grupoEconomicoDTO
    # @param [Hash] opts the optional parameters
    # @return [GrupoEconomicoResponse]
    def alterar_using_put8(id, grupo_economico_dto, opts = {})
      data, _status_code, _headers = alterar_using_put8_with_http_info(id, grupo_economico_dto, opts)
      return data
    end

    # {{{grupo_economico_resource_alterar}}}
    # {{{grupo_economico_resource_alterar_notes}}}
    # @param id {{{grupo_economico_resource_alterar_param_id}}}
    # @param grupo_economico_dto grupoEconomicoDTO
    # @param [Hash] opts the optional parameters
    # @return [Array<(GrupoEconomicoResponse, Fixnum, Hash)>] GrupoEconomicoResponse data, response status code and response headers
    def alterar_using_put8_with_http_info(id, grupo_economico_dto, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.alterar_using_put8 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.alterar_using_put8" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'grupo_economico_dto' is set
      fail ArgumentError, "Missing the required parameter 'grupo_economico_dto' when calling GlobaltagestabelecimentoApi.alterar_using_put8" if grupo_economico_dto.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/grupos-economicos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(grupo_economico_dto)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GrupoEconomicoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#alterar_using_put8\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{origem_comercial_resource_cadastrar_origem_comercial}}}
    # {{{origem_comercial_resource_cadastrar_origem_comercial_notes}}}
    # @param origem_comercial_persist origemComercialPersist
    # @param [Hash] opts the optional parameters
    # @return [OrigemComercialResponse]
    def cadastrar_origem_comercial_using_post(origem_comercial_persist, opts = {})
      data, _status_code, _headers = cadastrar_origem_comercial_using_post_with_http_info(origem_comercial_persist, opts)
      return data
    end

    # {{{origem_comercial_resource_cadastrar_origem_comercial}}}
    # {{{origem_comercial_resource_cadastrar_origem_comercial_notes}}}
    # @param origem_comercial_persist origemComercialPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(OrigemComercialResponse, Fixnum, Hash)>] OrigemComercialResponse data, response status code and response headers
    def cadastrar_origem_comercial_using_post_with_http_info(origem_comercial_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.cadastrar_origem_comercial_using_post ..."
      end
      
      
      # verify the required parameter 'origem_comercial_persist' is set
      fail ArgumentError, "Missing the required parameter 'origem_comercial_persist' when calling GlobaltagestabelecimentoApi.cadastrar_origem_comercial_using_post" if origem_comercial_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/origens-comerciais".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(origem_comercial_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#cadastrar_origem_comercial_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{estabelecimento_resource_cadastrar}}}
    # {{{estabelecimento_resource_cadastrar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [EstabelecimentoResponse]
    def cadastrar_using_post2(persist, opts = {})
      data, _status_code, _headers = cadastrar_using_post2_with_http_info(persist, opts)
      return data
    end

    # {{{estabelecimento_resource_cadastrar}}}
    # {{{estabelecimento_resource_cadastrar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(EstabelecimentoResponse, Fixnum, Hash)>] EstabelecimentoResponse data, response status code and response headers
    def cadastrar_using_post2_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.cadastrar_using_post2 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagestabelecimentoApi.cadastrar_using_post2" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#cadastrar_using_post2\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{grupo_economico_resource_cadastrar}}}
    # {{{grupo_economico_resource_cadastrar_notes}}}
    # @param grupo_economico_dto GrupoEconomicoDTO
    # @param [Hash] opts the optional parameters
    # @return [GrupoEconomicoResponse]
    def cadastrar_using_post3(grupo_economico_dto, opts = {})
      data, _status_code, _headers = cadastrar_using_post3_with_http_info(grupo_economico_dto, opts)
      return data
    end

    # {{{grupo_economico_resource_cadastrar}}}
    # {{{grupo_economico_resource_cadastrar_notes}}}
    # @param grupo_economico_dto GrupoEconomicoDTO
    # @param [Hash] opts the optional parameters
    # @return [Array<(GrupoEconomicoResponse, Fixnum, Hash)>] GrupoEconomicoResponse data, response status code and response headers
    def cadastrar_using_post3_with_http_info(grupo_economico_dto, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.cadastrar_using_post3 ..."
      end
      
      
      # verify the required parameter 'grupo_economico_dto' is set
      fail ArgumentError, "Missing the required parameter 'grupo_economico_dto' when calling GlobaltagestabelecimentoApi.cadastrar_using_post3" if grupo_economico_dto.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/grupos-economicos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(grupo_economico_dto)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GrupoEconomicoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#cadastrar_using_post3\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_resource_consulta_operacao}}}
    # {{{operacao_resource_consulta_operacao_notes}}}
    # @param id {{{operacao_resource_consulta_operacao_param_id_operacao}}}
    # @param [Hash] opts the optional parameters
    # @return [DetalheOperacaoResponse]
    def consulta_operacao_using_get(id, opts = {})
      data, _status_code, _headers = consulta_operacao_using_get_with_http_info(id, opts)
      return data
    end

    # {{{operacao_resource_consulta_operacao}}}
    # {{{operacao_resource_consulta_operacao_notes}}}
    # @param id {{{operacao_resource_consulta_operacao_param_id_operacao}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(DetalheOperacaoResponse, Fixnum, Hash)>] DetalheOperacaoResponse data, response status code and response headers
    def consulta_operacao_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consulta_operacao_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consulta_operacao_using_get" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-operacoes-estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DetalheOperacaoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consulta_operacao_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{origem_comercial_resource_consultar_origem_comercial}}}
    # {{{origem_comercial_resource_consultar_origem_comercial_notes}}}
    # @param id {{{origem_comercial_resource_consultar_origem_comercial_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [OrigemComercialResponse]
    def consultar_origem_comercial_using_get(id, opts = {})
      data, _status_code, _headers = consultar_origem_comercial_using_get_with_http_info(id, opts)
      return data
    end

    # {{{origem_comercial_resource_consultar_origem_comercial}}}
    # {{{origem_comercial_resource_consultar_origem_comercial_notes}}}
    # @param id {{{origem_comercial_resource_consultar_origem_comercial_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(OrigemComercialResponse, Fixnum, Hash)>] OrigemComercialResponse data, response status code and response headers
    def consultar_origem_comercial_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_origem_comercial_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_origem_comercial_using_get" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/origens-comerciais/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_origem_comercial_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{estabelecimento_resource_consultar}}}
    # {{{estabelecimento_resource_consultar_notes}}}
    # @param id {{{estabelecimento_resource_consultar_param_id_estabelecimento}}}
    # @param [Hash] opts the optional parameters
    # @return [EstabelecimentoResponse]
    def consultar_using_get19(id, opts = {})
      data, _status_code, _headers = consultar_using_get19_with_http_info(id, opts)
      return data
    end

    # {{{estabelecimento_resource_consultar}}}
    # {{{estabelecimento_resource_consultar_notes}}}
    # @param id {{{estabelecimento_resource_consultar_param_id_estabelecimento}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(EstabelecimentoResponse, Fixnum, Hash)>] EstabelecimentoResponse data, response status code and response headers
    def consultar_using_get19_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get19 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get19" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'EstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get19\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{grupo_economico_resource_consultar}}}
    # {{{grupo_economico_resource_consultar_notes}}}
    # @param id {{{grupo_economico_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [GrupoEconomicoResponse]
    def consultar_using_get21(id, opts = {})
      data, _status_code, _headers = consultar_using_get21_with_http_info(id, opts)
      return data
    end

    # {{{grupo_economico_resource_consultar}}}
    # {{{grupo_economico_resource_consultar_notes}}}
    # @param id {{{grupo_economico_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(GrupoEconomicoResponse, Fixnum, Hash)>] GrupoEconomicoResponse data, response status code and response headers
    def consultar_using_get21_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get21 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get21" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/grupos-economicos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GrupoEconomicoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get21\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{maquineta_resource_consultar}}}
    # {{{maquineta_resource_consultar_notes}}}
    # @param id {{{maquineta_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [MaquinetaResponse]
    def consultar_using_get23(id, opts = {})
      data, _status_code, _headers = consultar_using_get23_with_http_info(id, opts)
      return data
    end

    # {{{maquineta_resource_consultar}}}
    # {{{maquineta_resource_consultar_notes}}}
    # @param id {{{maquineta_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(MaquinetaResponse, Fixnum, Hash)>] MaquinetaResponse data, response status code and response headers
    def consultar_using_get23_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get23 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get23" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/maquinetas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'MaquinetaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get23\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_credor_resource_consultar}}}
    # {{{operacao_credor_resource_consultar_notes}}}
    # @param id {{{operacao_credor_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [OperacaoCredorResponse]
    def consultar_using_get24(id, opts = {})
      data, _status_code, _headers = consultar_using_get24_with_http_info(id, opts)
      return data
    end

    # {{{operacao_credor_resource_consultar}}}
    # {{{operacao_credor_resource_consultar_notes}}}
    # @param id {{{operacao_credor_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(OperacaoCredorResponse, Fixnum, Hash)>] OperacaoCredorResponse data, response status code and response headers
    def consultar_using_get24_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get24 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get24" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/regras-operacoes-estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OperacaoCredorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get24\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_estabelecimento_resource_consultar}}}
    # {{{telefone_estabelecimento_resource_consultar_notes}}}
    # @param id {{{telefone_estabelecimento_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [TelefoneEstabelecimentoResponse]
    def consultar_using_get37(id, opts = {})
      data, _status_code, _headers = consultar_using_get37_with_http_info(id, opts)
      return data
    end

    # {{{telefone_estabelecimento_resource_consultar}}}
    # {{{telefone_estabelecimento_resource_consultar_notes}}}
    # @param id {{{telefone_estabelecimento_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TelefoneEstabelecimentoResponse, Fixnum, Hash)>] TelefoneEstabelecimentoResponse data, response status code and response headers
    def consultar_using_get37_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get37 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get37" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones-estabelecimentos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get37\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{terminal_resource_consultar}}}
    # {{{terminal_resource_consultar_notes}}}
    # @param id {{{terminal_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [TerminalResponse]
    def consultar_using_get39(id, opts = {})
      data, _status_code, _headers = consultar_using_get39_with_http_info(id, opts)
      return data
    end

    # {{{terminal_resource_consultar}}}
    # {{{terminal_resource_consultar_notes}}}
    # @param id {{{terminal_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TerminalResponse, Fixnum, Hash)>] TerminalResponse data, response status code and response headers
    def consultar_using_get39_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get39 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get39" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/terminais/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TerminalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get39\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_consultar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_consultar_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [VinculoEstabelecimentoAdquirenteResponse]
    def consultar_using_get51(id, opts = {})
      data, _status_code, _headers = consultar_using_get51_with_http_info(id, opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_consultar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_consultar_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(VinculoEstabelecimentoAdquirenteResponse, Fixnum, Hash)>] VinculoEstabelecimentoAdquirenteResponse data, response status code and response headers
    def consultar_using_get51_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.consultar_using_get51 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.consultar_using_get51" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/adquirentes-estabelecimento/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VinculoEstabelecimentoAdquirenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#consultar_using_get51\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo}}}
    # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def desabilitar_vinculo_using_post(id, opts = {})
      data, _status_code, _headers = desabilitar_vinculo_using_post_with_http_info(id, opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo}}}
    # {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_desabilitar_vinculo_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def desabilitar_vinculo_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.desabilitar_vinculo_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.desabilitar_vinculo_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/adquirentes-estabelecimento/{id}/desabilitar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#desabilitar_vinculo_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_operacao_resource_desabilitar_vinculo}}}
    # {{{vinculo_operacao_resource_desabilitar_vinculo_notes}}}
    # @param id {{{vinculo_operacao_resource_desabilitar_vinculo_param_id}}}
    # @param vinculo_operacao_persist vinculoOperacaoPersist
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def desabilitar_vinculo_using_post1(id, vinculo_operacao_persist, opts = {})
      data, _status_code, _headers = desabilitar_vinculo_using_post1_with_http_info(id, vinculo_operacao_persist, opts)
      return data
    end

    # {{{vinculo_operacao_resource_desabilitar_vinculo}}}
    # {{{vinculo_operacao_resource_desabilitar_vinculo_notes}}}
    # @param id {{{vinculo_operacao_resource_desabilitar_vinculo_param_id}}}
    # @param vinculo_operacao_persist vinculoOperacaoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def desabilitar_vinculo_using_post1_with_http_info(id, vinculo_operacao_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.desabilitar_vinculo_using_post1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.desabilitar_vinculo_using_post1" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'vinculo_operacao_persist' is set
      fail ArgumentError, "Missing the required parameter 'vinculo_operacao_persist' when calling GlobaltagestabelecimentoApi.desabilitar_vinculo_using_post1" if vinculo_operacao_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos/{id}/desabilitar-operacao".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(vinculo_operacao_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#desabilitar_vinculo_using_post1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo}}}
    # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def habilitar_vinculo_using_post(id, opts = {})
      data, _status_code, _headers = habilitar_vinculo_using_post_with_http_info(id, opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo}}}
    # {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_notes}}}
    # @param id {{{vinculo_estabelecimento_adquirente_resource_habilitar_vinculo_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def habilitar_vinculo_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.habilitar_vinculo_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.habilitar_vinculo_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/adquirentes-estabelecimento/{id}/habilitar".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#habilitar_vinculo_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_operacao_resource_habilitar_vinculo}}}
    # {{{vinculo_operacao_resource_habilitar_vinculo_notes}}}
    # @param id {{{vinculo_operacao_resource_habilitar_vinculo_param_id}}}
    # @param vinculo_operacao_persist vinculoOperacaoPersist
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def habilitar_vinculo_using_post1(id, vinculo_operacao_persist, opts = {})
      data, _status_code, _headers = habilitar_vinculo_using_post1_with_http_info(id, vinculo_operacao_persist, opts)
      return data
    end

    # {{{vinculo_operacao_resource_habilitar_vinculo}}}
    # {{{vinculo_operacao_resource_habilitar_vinculo_notes}}}
    # @param id {{{vinculo_operacao_resource_habilitar_vinculo_param_id}}}
    # @param vinculo_operacao_persist vinculoOperacaoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def habilitar_vinculo_using_post1_with_http_info(id, vinculo_operacao_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.habilitar_vinculo_using_post1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.habilitar_vinculo_using_post1" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'vinculo_operacao_persist' is set
      fail ArgumentError, "Missing the required parameter 'vinculo_operacao_persist' when calling GlobaltagestabelecimentoApi.habilitar_vinculo_using_post1" if vinculo_operacao_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos/{id}/habilitar-operacao".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(vinculo_operacao_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#habilitar_vinculo_using_post1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_resource_lista_operacao}}}
    # {{{operacao_resource_lista_operacao_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_operacao {{{operacao_request_id_operacao_value}}}
    # @option opts [String] :codigo_processamento {{{operacao_request_codigo_processamento_value}}}
    # @return [PageOperacaoResponse]
    def lista_operacao_using_get(opts = {})
      data, _status_code, _headers = lista_operacao_using_get_with_http_info(opts)
      return data
    end

    # {{{operacao_resource_lista_operacao}}}
    # {{{operacao_resource_lista_operacao_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_operacao {{{operacao_request_id_operacao_value}}}
    # @option opts [String] :codigo_processamento {{{operacao_request_codigo_processamento_value}}}
    # @return [Array<(PageOperacaoResponse, Fixnum, Hash)>] PageOperacaoResponse data, response status code and response headers
    def lista_operacao_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.lista_operacao_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-operacoes-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idOperacao'] = opts[:'id_operacao'] if opts[:'id_operacao']
      query_params[:'codigoProcessamento'] = opts[:'codigo_processamento'] if opts[:'codigo_processamento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOperacaoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#lista_operacao_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{m_c_c_resource_listar_m_c_c}}}
    # {{{m_c_c_resource_listar_m_c_c_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageMCCResponse]
    def listar_mcc_using_get(opts = {})
      data, _status_code, _headers = listar_mcc_using_get_with_http_info(opts)
      return data
    end

    # {{{m_c_c_resource_listar_m_c_c}}}
    # {{{m_c_c_resource_listar_m_c_c_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageMCCResponse, Fixnum, Hash)>] PageMCCResponse data, response status code and response headers
    def listar_mcc_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_mcc_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/mcc-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageMCCResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_mcc_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{origem_comercial_resource_listar_origens_comerciais}}}
    # {{{origem_comercial_resource_listar_origens_comerciais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{origem_comercial_request_id_value}}}
    # @option opts [String] :nome {{{origem_comercial_request_nome_value}}}
    # @option opts [Integer] :status {{{origem_comercial_request_status_value}}}
    # @option opts [Integer] :id_estabelecimento {{{origem_comercial_request_id_estabelecimento_value}}}
    # @option opts [Integer] :id_produto {{{origem_comercial_request_id_produto_value}}}
    # @option opts [String] :descricao {{{origem_comercial_request_descricao_value}}}
    # @option opts [Integer] :id_tipo_origem_comercial {{{origem_comercial_request_id_tipo_origem_comercial_value}}}
    # @option opts [Integer] :id_grupo_origem_comercial {{{origem_comercial_request_id_grupo_origem_comercial_value}}}
    # @option opts [BOOLEAN] :flag_pre_aprovado {{{origem_comercial_request_flag_pre_aprovado_value}}}
    # @option opts [BOOLEAN] :flag_aprovacao_imediata {{{origem_comercial_request_flag_aprovacao_imediata_value}}}
    # @option opts [String] :nome_fantasia_plastico {{{origem_comercial_request_nome_fantasia_plastico_value}}}
    # @option opts [BOOLEAN] :flag_cartao_provisorio {{{origem_comercial_request_flag_cartao_provisorio_value}}}
    # @option opts [BOOLEAN] :flag_cartao_definitivo {{{origem_comercial_request_flag_cartao_definitivo_value}}}
    # @option opts [String] :usuario {{{origem_comercial_request_usuario_value}}}
    # @option opts [String] :senha {{{origem_comercial_request_senha_value}}}
    # @option opts [BOOLEAN] :flag_origem_externa {{{origem_comercial_request_flag_origem_externa_value}}}
    # @option opts [BOOLEAN] :flag_modificado {{{origem_comercial_request_flag_modificado_value}}}
    # @option opts [BOOLEAN] :flag_envia_fatura_usuario {{{origem_comercial_request_flag_envia_fatura_usuario_value}}}
    # @option opts [BOOLEAN] :flag_credito_faturamento {{{origem_comercial_request_flag_credito_faturamento_value}}}
    # @option opts [BOOLEAN] :flag_concede_limite_provisorio {{{origem_comercial_request_flag_concede_limite_provisorio_value}}}
    # @option opts [BOOLEAN] :flag_digitalizar_doc {{{origem_comercial_request_flag_digitalizar_doc_value}}}
    # @option opts [BOOLEAN] :flag_embossing_loja {{{origem_comercial_request_flag_embossing_loja_value}}}
    # @option opts [BOOLEAN] :flag_consulta_previa {{{origem_comercial_request_flag_consulta_previa_value}}}
    # @option opts [String] :tipo_pessoa {{{origem_comercial_request_tipo_pessoa_value}}}
    # @return [PageOrigemComercialResponse]
    def listar_origens_comerciais_using_get(opts = {})
      data, _status_code, _headers = listar_origens_comerciais_using_get_with_http_info(opts)
      return data
    end

    # {{{origem_comercial_resource_listar_origens_comerciais}}}
    # {{{origem_comercial_resource_listar_origens_comerciais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{origem_comercial_request_id_value}}}
    # @option opts [String] :nome {{{origem_comercial_request_nome_value}}}
    # @option opts [Integer] :status {{{origem_comercial_request_status_value}}}
    # @option opts [Integer] :id_estabelecimento {{{origem_comercial_request_id_estabelecimento_value}}}
    # @option opts [Integer] :id_produto {{{origem_comercial_request_id_produto_value}}}
    # @option opts [String] :descricao {{{origem_comercial_request_descricao_value}}}
    # @option opts [Integer] :id_tipo_origem_comercial {{{origem_comercial_request_id_tipo_origem_comercial_value}}}
    # @option opts [Integer] :id_grupo_origem_comercial {{{origem_comercial_request_id_grupo_origem_comercial_value}}}
    # @option opts [BOOLEAN] :flag_pre_aprovado {{{origem_comercial_request_flag_pre_aprovado_value}}}
    # @option opts [BOOLEAN] :flag_aprovacao_imediata {{{origem_comercial_request_flag_aprovacao_imediata_value}}}
    # @option opts [String] :nome_fantasia_plastico {{{origem_comercial_request_nome_fantasia_plastico_value}}}
    # @option opts [BOOLEAN] :flag_cartao_provisorio {{{origem_comercial_request_flag_cartao_provisorio_value}}}
    # @option opts [BOOLEAN] :flag_cartao_definitivo {{{origem_comercial_request_flag_cartao_definitivo_value}}}
    # @option opts [String] :usuario {{{origem_comercial_request_usuario_value}}}
    # @option opts [String] :senha {{{origem_comercial_request_senha_value}}}
    # @option opts [BOOLEAN] :flag_origem_externa {{{origem_comercial_request_flag_origem_externa_value}}}
    # @option opts [BOOLEAN] :flag_modificado {{{origem_comercial_request_flag_modificado_value}}}
    # @option opts [BOOLEAN] :flag_envia_fatura_usuario {{{origem_comercial_request_flag_envia_fatura_usuario_value}}}
    # @option opts [BOOLEAN] :flag_credito_faturamento {{{origem_comercial_request_flag_credito_faturamento_value}}}
    # @option opts [BOOLEAN] :flag_concede_limite_provisorio {{{origem_comercial_request_flag_concede_limite_provisorio_value}}}
    # @option opts [BOOLEAN] :flag_digitalizar_doc {{{origem_comercial_request_flag_digitalizar_doc_value}}}
    # @option opts [BOOLEAN] :flag_embossing_loja {{{origem_comercial_request_flag_embossing_loja_value}}}
    # @option opts [BOOLEAN] :flag_consulta_previa {{{origem_comercial_request_flag_consulta_previa_value}}}
    # @option opts [String] :tipo_pessoa {{{origem_comercial_request_tipo_pessoa_value}}}
    # @return [Array<(PageOrigemComercialResponse, Fixnum, Hash)>] PageOrigemComercialResponse data, response status code and response headers
    def listar_origens_comerciais_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_origens_comerciais_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      if opts[:'tipo_pessoa'] && !['PESSOA_FISICA', 'PESSOA_JURIDICA'].include?(opts[:'tipo_pessoa'])
        fail ArgumentError, 'invalid value for "tipo_pessoa", must be one of PESSOA_FISICA, PESSOA_JURIDICA'
      end
      
      
      
      
      # resource path
      local_var_path = "/api/origens-comerciais".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'status'] = opts[:'status'] if opts[:'status']
      query_params[:'idEstabelecimento'] = opts[:'id_estabelecimento'] if opts[:'id_estabelecimento']
      query_params[:'idProduto'] = opts[:'id_produto'] if opts[:'id_produto']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'idTipoOrigemComercial'] = opts[:'id_tipo_origem_comercial'] if opts[:'id_tipo_origem_comercial']
      query_params[:'idGrupoOrigemComercial'] = opts[:'id_grupo_origem_comercial'] if opts[:'id_grupo_origem_comercial']
      query_params[:'flagPreAprovado'] = opts[:'flag_pre_aprovado'] if opts[:'flag_pre_aprovado']
      query_params[:'flagAprovacaoImediata'] = opts[:'flag_aprovacao_imediata'] if opts[:'flag_aprovacao_imediata']
      query_params[:'nomeFantasiaPlastico'] = opts[:'nome_fantasia_plastico'] if opts[:'nome_fantasia_plastico']
      query_params[:'flagCartaoProvisorio'] = opts[:'flag_cartao_provisorio'] if opts[:'flag_cartao_provisorio']
      query_params[:'flagCartaoDefinitivo'] = opts[:'flag_cartao_definitivo'] if opts[:'flag_cartao_definitivo']
      query_params[:'usuario'] = opts[:'usuario'] if opts[:'usuario']
      query_params[:'senha'] = opts[:'senha'] if opts[:'senha']
      query_params[:'flagOrigemExterna'] = opts[:'flag_origem_externa'] if opts[:'flag_origem_externa']
      query_params[:'flagModificado'] = opts[:'flag_modificado'] if opts[:'flag_modificado']
      query_params[:'flagEnviaFaturaUsuario'] = opts[:'flag_envia_fatura_usuario'] if opts[:'flag_envia_fatura_usuario']
      query_params[:'flagCreditoFaturamento'] = opts[:'flag_credito_faturamento'] if opts[:'flag_credito_faturamento']
      query_params[:'flagConcedeLimiteProvisorio'] = opts[:'flag_concede_limite_provisorio'] if opts[:'flag_concede_limite_provisorio']
      query_params[:'flagDigitalizarDoc'] = opts[:'flag_digitalizar_doc'] if opts[:'flag_digitalizar_doc']
      query_params[:'flagEmbossingLoja'] = opts[:'flag_embossing_loja'] if opts[:'flag_embossing_loja']
      query_params[:'flagConsultaPrevia'] = opts[:'flag_consulta_previa'] if opts[:'flag_consulta_previa']
      query_params[:'tipoPessoa'] = opts[:'tipo_pessoa'] if opts[:'tipo_pessoa']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_origens_comerciais_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes}}}
    # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageEntidadeResponse]
    def listar_tipos_adquirentes_using_get(opts = {})
      data, _status_code, _headers = listar_tipos_adquirentes_using_get_with_http_info(opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes}}}
    # {{{vinculo_estabelecimento_adquirente_resource_listar_tipos_adquirentes_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageEntidadeResponse, Fixnum, Hash)>] PageEntidadeResponse data, response status code and response headers
    def listar_tipos_adquirentes_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_tipos_adquirentes_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-adquirentes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageEntidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_tipos_adquirentes_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos}}}
    # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :descricao {{{tipo_estabelecimento_request_descricao_value}}}
    # @return [PageTipoEstabelecimentoResponse]
    def listar_tipos_estabelecimentos_using_get(opts = {})
      data, _status_code, _headers = listar_tipos_estabelecimentos_using_get_with_http_info(opts)
      return data
    end

    # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos}}}
    # {{{tipo_estabelecimento_resource_listar_tipos_estabelecimentos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :descricao {{{tipo_estabelecimento_request_descricao_value}}}
    # @return [Array<(PageTipoEstabelecimentoResponse, Fixnum, Hash)>] PageTipoEstabelecimentoResponse data, response status code and response headers
    def listar_tipos_estabelecimentos_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_tipos_estabelecimentos_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_tipos_estabelecimentos_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{maquineta_resource_listar_tipos_maquinetas}}}
    # {{{maquineta_resource_listar_tipos_maquinetas_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageCampoCodificadoDescricaoResponse]
    def listar_tipos_maquinetas_using_get(opts = {})
      data, _status_code, _headers = listar_tipos_maquinetas_using_get_with_http_info(opts)
      return data
    end

    # {{{maquineta_resource_listar_tipos_maquinetas}}}
    # {{{maquineta_resource_listar_tipos_maquinetas_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageCampoCodificadoDescricaoResponse, Fixnum, Hash)>] PageCampoCodificadoDescricaoResponse data, response status code and response headers
    def listar_tipos_maquinetas_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_tipos_maquinetas_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-maquinetas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageCampoCodificadoDescricaoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_tipos_maquinetas_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais}}}
    # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{tipo_origem_comercial_request_nome_value}}}
    # @return [PageTipoOrigemComercialResponse]
    def listar_tipos_origens_comerciais_using_get(opts = {})
      data, _status_code, _headers = listar_tipos_origens_comerciais_using_get_with_http_info(opts)
      return data
    end

    # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais}}}
    # {{{tipo_origem_comercial_resource_listar_tipos_origens_comerciais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{tipo_origem_comercial_request_nome_value}}}
    # @return [Array<(PageTipoOrigemComercialResponse, Fixnum, Hash)>] PageTipoOrigemComercialResponse data, response status code and response headers
    def listar_tipos_origens_comerciais_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_tipos_origens_comerciais_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-origens-comerciais".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoOrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_tipos_origens_comerciais_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{terminal_resource_listar_tipos_terminais}}}
    # {{{terminal_resource_listar_tipos_terminais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageTipoTerminalResponse]
    def listar_tipos_terminais_using_get1(opts = {})
      data, _status_code, _headers = listar_tipos_terminais_using_get1_with_http_info(opts)
      return data
    end

    # {{{terminal_resource_listar_tipos_terminais}}}
    # {{{terminal_resource_listar_tipos_terminais_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageTipoTerminalResponse, Fixnum, Hash)>] PageTipoTerminalResponse data, response status code and response headers
    def listar_tipos_terminais_using_get1_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_tipos_terminais_using_get1 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-terminais-estabelecimento".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoTerminalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_tipos_terminais_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{estabelecimento_resource_listar}}}
    # {{{estabelecimento_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{estabelecimento_request_id_value}}}
    # @option opts [Integer] :id_grupo_economico {{{estabelecimento_request_id_grupo_economico_value}}}
    # @option opts [String] :numero_receita_federal {{{estabelecimento_request_numero_receita_federal_value}}}
    # @option opts [String] :nome {{{estabelecimento_request_nome_value}}}
    # @option opts [String] :descricao {{{estabelecimento_request_descricao_value}}}
    # @option opts [String] :nome_fantasia {{{estabelecimento_request_nome_fantasia_value}}}
    # @option opts [String] :cep {{{estabelecimento_request_cep_value}}}
    # @option opts [String] :nome_logradouro {{{estabelecimento_request_nome_logradouro_value}}}
    # @option opts [Integer] :numero_endereco {{{estabelecimento_request_numero_endereco_value}}}
    # @option opts [String] :complemento {{{estabelecimento_request_complemento_value}}}
    # @option opts [String] :bairro {{{estabelecimento_request_bairro_value}}}
    # @option opts [String] :cidade {{{estabelecimento_request_cidade_value}}}
    # @option opts [String] :uf {{{estabelecimento_request_uf_value}}}
    # @option opts [String] :pais {{{estabelecimento_request_pais_value}}}
    # @option opts [String] :data_cadastramento {{{estabelecimento_request_data_cadastramento_value}}}
    # @option opts [String] :contato {{{estabelecimento_request_contato_value}}}
    # @option opts [String] :email {{{estabelecimento_request_email_value}}}
    # @option opts [Integer] :flag_arquivo_secr_fazenda {{{estabelecimento_request_flag_arquivo_secr_fazenda_value}}}
    # @option opts [Integer] :flag_cartao_digitado {{{estabelecimento_request_flag_cartao_digitado_value}}}
    # @option opts [Integer] :inativo {{{estabelecimento_request_inativo_value}}}
    # @option opts [Integer] :id_pais {{{estabelecimento_request_id_pais_value}}}
    # @option opts [Integer] :mcc {{{estabelecimento_request_mcc_value}}}
    # @option opts [Integer] :id_tipo_estabelecimento {{{estabelecimento_request_id_tipo_estabelecimento_value}}}
    # @option opts [Integer] :correspondencia {{{estabelecimento_request_correspondencia_value}}}
    # @option opts [Integer] :id_moeda {{{estabelecimento_request_id_moeda_value}}}
    # @option opts [String] :tipo_pagamento {{{estabelecimento_request_tipo_pagamento_value}}}
    # @option opts [String] :numero_estabelecimento {{{estabelecimento_request_numero_estabelecimento_value}}}
    # @option opts [String] :cep2 {{{estabelecimento_request_cep2_value}}}
    # @option opts [String] :nome_logradouro2 {{{estabelecimento_request_nome_logradouro2_value}}}
    # @option opts [Integer] :numero_endereco2 {{{estabelecimento_request_numero_endereco2_value}}}
    # @option opts [String] :complemento2 {{{estabelecimento_request_complemento2_value}}}
    # @option opts [String] :bairro2 {{{estabelecimento_request_bairro2_value}}}
    # @option opts [String] :cidade2 {{{estabelecimento_request_cidade2_value}}}
    # @option opts [String] :uf2 {{{estabelecimento_request_uf2_value}}}
    # @option opts [Integer] :flag_matriz {{{estabelecimento_request_flag_matriz_value}}}
    # @return [PageEstabelecimentoResponse]
    def listar_using_get25(opts = {})
      data, _status_code, _headers = listar_using_get25_with_http_info(opts)
      return data
    end

    # {{{estabelecimento_resource_listar}}}
    # {{{estabelecimento_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{estabelecimento_request_id_value}}}
    # @option opts [Integer] :id_grupo_economico {{{estabelecimento_request_id_grupo_economico_value}}}
    # @option opts [String] :numero_receita_federal {{{estabelecimento_request_numero_receita_federal_value}}}
    # @option opts [String] :nome {{{estabelecimento_request_nome_value}}}
    # @option opts [String] :descricao {{{estabelecimento_request_descricao_value}}}
    # @option opts [String] :nome_fantasia {{{estabelecimento_request_nome_fantasia_value}}}
    # @option opts [String] :cep {{{estabelecimento_request_cep_value}}}
    # @option opts [String] :nome_logradouro {{{estabelecimento_request_nome_logradouro_value}}}
    # @option opts [Integer] :numero_endereco {{{estabelecimento_request_numero_endereco_value}}}
    # @option opts [String] :complemento {{{estabelecimento_request_complemento_value}}}
    # @option opts [String] :bairro {{{estabelecimento_request_bairro_value}}}
    # @option opts [String] :cidade {{{estabelecimento_request_cidade_value}}}
    # @option opts [String] :uf {{{estabelecimento_request_uf_value}}}
    # @option opts [String] :pais {{{estabelecimento_request_pais_value}}}
    # @option opts [String] :data_cadastramento {{{estabelecimento_request_data_cadastramento_value}}}
    # @option opts [String] :contato {{{estabelecimento_request_contato_value}}}
    # @option opts [String] :email {{{estabelecimento_request_email_value}}}
    # @option opts [Integer] :flag_arquivo_secr_fazenda {{{estabelecimento_request_flag_arquivo_secr_fazenda_value}}}
    # @option opts [Integer] :flag_cartao_digitado {{{estabelecimento_request_flag_cartao_digitado_value}}}
    # @option opts [Integer] :inativo {{{estabelecimento_request_inativo_value}}}
    # @option opts [Integer] :id_pais {{{estabelecimento_request_id_pais_value}}}
    # @option opts [Integer] :mcc {{{estabelecimento_request_mcc_value}}}
    # @option opts [Integer] :id_tipo_estabelecimento {{{estabelecimento_request_id_tipo_estabelecimento_value}}}
    # @option opts [Integer] :correspondencia {{{estabelecimento_request_correspondencia_value}}}
    # @option opts [Integer] :id_moeda {{{estabelecimento_request_id_moeda_value}}}
    # @option opts [String] :tipo_pagamento {{{estabelecimento_request_tipo_pagamento_value}}}
    # @option opts [String] :numero_estabelecimento {{{estabelecimento_request_numero_estabelecimento_value}}}
    # @option opts [String] :cep2 {{{estabelecimento_request_cep2_value}}}
    # @option opts [String] :nome_logradouro2 {{{estabelecimento_request_nome_logradouro2_value}}}
    # @option opts [Integer] :numero_endereco2 {{{estabelecimento_request_numero_endereco2_value}}}
    # @option opts [String] :complemento2 {{{estabelecimento_request_complemento2_value}}}
    # @option opts [String] :bairro2 {{{estabelecimento_request_bairro2_value}}}
    # @option opts [String] :cidade2 {{{estabelecimento_request_cidade2_value}}}
    # @option opts [String] :uf2 {{{estabelecimento_request_uf2_value}}}
    # @option opts [Integer] :flag_matriz {{{estabelecimento_request_flag_matriz_value}}}
    # @return [Array<(PageEstabelecimentoResponse, Fixnum, Hash)>] PageEstabelecimentoResponse data, response status code and response headers
    def listar_using_get25_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get25 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      if opts[:'tipo_pagamento'] && !['CENTRALIZADO', 'PV'].include?(opts[:'tipo_pagamento'])
        fail ArgumentError, 'invalid value for "tipo_pagamento", must be one of CENTRALIZADO, PV'
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'idGrupoEconomico'] = opts[:'id_grupo_economico'] if opts[:'id_grupo_economico']
      query_params[:'numeroReceitaFederal'] = opts[:'numero_receita_federal'] if opts[:'numero_receita_federal']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'nomeFantasia'] = opts[:'nome_fantasia'] if opts[:'nome_fantasia']
      query_params[:'cep'] = opts[:'cep'] if opts[:'cep']
      query_params[:'nomeLogradouro'] = opts[:'nome_logradouro'] if opts[:'nome_logradouro']
      query_params[:'numeroEndereco'] = opts[:'numero_endereco'] if opts[:'numero_endereco']
      query_params[:'complemento'] = opts[:'complemento'] if opts[:'complemento']
      query_params[:'bairro'] = opts[:'bairro'] if opts[:'bairro']
      query_params[:'cidade'] = opts[:'cidade'] if opts[:'cidade']
      query_params[:'uf'] = opts[:'uf'] if opts[:'uf']
      query_params[:'pais'] = opts[:'pais'] if opts[:'pais']
      query_params[:'dataCadastramento'] = opts[:'data_cadastramento'] if opts[:'data_cadastramento']
      query_params[:'contato'] = opts[:'contato'] if opts[:'contato']
      query_params[:'email'] = opts[:'email'] if opts[:'email']
      query_params[:'flagArquivoSecrFazenda'] = opts[:'flag_arquivo_secr_fazenda'] if opts[:'flag_arquivo_secr_fazenda']
      query_params[:'flagCartaoDigitado'] = opts[:'flag_cartao_digitado'] if opts[:'flag_cartao_digitado']
      query_params[:'inativo'] = opts[:'inativo'] if opts[:'inativo']
      query_params[:'idPais'] = opts[:'id_pais'] if opts[:'id_pais']
      query_params[:'mcc'] = opts[:'mcc'] if opts[:'mcc']
      query_params[:'idTipoEstabelecimento'] = opts[:'id_tipo_estabelecimento'] if opts[:'id_tipo_estabelecimento']
      query_params[:'correspondencia'] = opts[:'correspondencia'] if opts[:'correspondencia']
      query_params[:'idMoeda'] = opts[:'id_moeda'] if opts[:'id_moeda']
      query_params[:'tipoPagamento'] = opts[:'tipo_pagamento'] if opts[:'tipo_pagamento']
      query_params[:'numeroEstabelecimento'] = opts[:'numero_estabelecimento'] if opts[:'numero_estabelecimento']
      query_params[:'cep2'] = opts[:'cep2'] if opts[:'cep2']
      query_params[:'nomeLogradouro2'] = opts[:'nome_logradouro2'] if opts[:'nome_logradouro2']
      query_params[:'numeroEndereco2'] = opts[:'numero_endereco2'] if opts[:'numero_endereco2']
      query_params[:'complemento2'] = opts[:'complemento2'] if opts[:'complemento2']
      query_params[:'bairro2'] = opts[:'bairro2'] if opts[:'bairro2']
      query_params[:'cidade2'] = opts[:'cidade2'] if opts[:'cidade2']
      query_params[:'uf2'] = opts[:'uf2'] if opts[:'uf2']
      query_params[:'flagMatriz'] = opts[:'flag_matriz'] if opts[:'flag_matriz']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get25\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{grupo_economico_resource_listar}}}
    # {{{grupo_economico_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :razao_social {{{grupo_economico_request_razao_social_value}}}
    # @option opts [String] :nome_credor {{{grupo_economico_request_nome_credor_value}}}
    # @option opts [String] :numero_receita_federal {{{grupo_economico_request_numero_receita_federal_value}}}
    # @option opts [String] :inscricao_estadual {{{grupo_economico_request_inscricao_estadual_value}}}
    # @option opts [String] :contato {{{grupo_economico_request_contato_value}}}
    # @option opts [Integer] :banco {{{grupo_economico_request_banco_value}}}
    # @option opts [Integer] :agencia {{{grupo_economico_request_agencia_value}}}
    # @option opts [String] :digito_agencia {{{grupo_economico_request_digito_agencia_value}}}
    # @option opts [String] :conta_corrente {{{grupo_economico_request_conta_corrente_value}}}
    # @option opts [String] :digito_conta_corrente {{{grupo_economico_request_digito_conta_corrente_value}}}
    # @option opts [String] :periodicidade {{{grupo_economico_request_periodicidade_value}}}
    # @option opts [String] :pagamento_semanal {{{grupo_economico_request_pagamento_semanal_value}}}
    # @option opts [Integer] :pagamento_mensal {{{grupo_economico_request_pagamento_mensal_value}}}
    # @option opts [Integer] :pagamento_decendial_primeiro {{{grupo_economico_request_pagamento_decendial_primeiro_value}}}
    # @option opts [Integer] :pagamento_decendial_segundo {{{grupo_economico_request_pagamento_decendial_segundo_value}}}
    # @option opts [Integer] :pagamento_decendial_terceiro {{{grupo_economico_request_pagamento_decendial_terceiro_value}}}
    # @option opts [Integer] :pagamento_quinzenal_primeiro {{{grupo_economico_request_pagamento_quinzenal_primeiro_value}}}
    # @option opts [Integer] :pagamento_quinzenal_segundo {{{grupo_economico_request_pagamento_quinzenal_segundo_value}}}
    # @option opts [Float] :percentual_rav {{{grupo_economico_request_percentual_r_a_v_value}}}
    # @option opts [String] :recebe_rav {{{grupo_economico_request_recebe_r_a_v_value}}}
    # @option opts [Float] :percentual_multiplica {{{grupo_economico_request_percentual_multiplica_value}}}
    # @option opts [Float] :taxa_adm {{{grupo_economico_request_taxa_adm_value}}}
    # @option opts [Float] :taxa_banco {{{grupo_economico_request_taxa_banco_value}}}
    # @option opts [Float] :limite_rav {{{grupo_economico_request_limite_r_a_v_value}}}
    # @option opts [Integer] :id_credor_rav {{{grupo_economico_request_id_credor_r_a_v_value}}}
    # @return [PageGrupoEconomicoResponse]
    def listar_using_get28(opts = {})
      data, _status_code, _headers = listar_using_get28_with_http_info(opts)
      return data
    end

    # {{{grupo_economico_resource_listar}}}
    # {{{grupo_economico_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :razao_social {{{grupo_economico_request_razao_social_value}}}
    # @option opts [String] :nome_credor {{{grupo_economico_request_nome_credor_value}}}
    # @option opts [String] :numero_receita_federal {{{grupo_economico_request_numero_receita_federal_value}}}
    # @option opts [String] :inscricao_estadual {{{grupo_economico_request_inscricao_estadual_value}}}
    # @option opts [String] :contato {{{grupo_economico_request_contato_value}}}
    # @option opts [Integer] :banco {{{grupo_economico_request_banco_value}}}
    # @option opts [Integer] :agencia {{{grupo_economico_request_agencia_value}}}
    # @option opts [String] :digito_agencia {{{grupo_economico_request_digito_agencia_value}}}
    # @option opts [String] :conta_corrente {{{grupo_economico_request_conta_corrente_value}}}
    # @option opts [String] :digito_conta_corrente {{{grupo_economico_request_digito_conta_corrente_value}}}
    # @option opts [String] :periodicidade {{{grupo_economico_request_periodicidade_value}}}
    # @option opts [String] :pagamento_semanal {{{grupo_economico_request_pagamento_semanal_value}}}
    # @option opts [Integer] :pagamento_mensal {{{grupo_economico_request_pagamento_mensal_value}}}
    # @option opts [Integer] :pagamento_decendial_primeiro {{{grupo_economico_request_pagamento_decendial_primeiro_value}}}
    # @option opts [Integer] :pagamento_decendial_segundo {{{grupo_economico_request_pagamento_decendial_segundo_value}}}
    # @option opts [Integer] :pagamento_decendial_terceiro {{{grupo_economico_request_pagamento_decendial_terceiro_value}}}
    # @option opts [Integer] :pagamento_quinzenal_primeiro {{{grupo_economico_request_pagamento_quinzenal_primeiro_value}}}
    # @option opts [Integer] :pagamento_quinzenal_segundo {{{grupo_economico_request_pagamento_quinzenal_segundo_value}}}
    # @option opts [Float] :percentual_rav {{{grupo_economico_request_percentual_r_a_v_value}}}
    # @option opts [String] :recebe_rav {{{grupo_economico_request_recebe_r_a_v_value}}}
    # @option opts [Float] :percentual_multiplica {{{grupo_economico_request_percentual_multiplica_value}}}
    # @option opts [Float] :taxa_adm {{{grupo_economico_request_taxa_adm_value}}}
    # @option opts [Float] :taxa_banco {{{grupo_economico_request_taxa_banco_value}}}
    # @option opts [Float] :limite_rav {{{grupo_economico_request_limite_r_a_v_value}}}
    # @option opts [Integer] :id_credor_rav {{{grupo_economico_request_id_credor_r_a_v_value}}}
    # @return [Array<(PageGrupoEconomicoResponse, Fixnum, Hash)>] PageGrupoEconomicoResponse data, response status code and response headers
    def listar_using_get28_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get28 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      if opts[:'periodicidade'] && !['DIARIO', 'SEMANAL', 'MENSAL', 'DECENDIAL', 'QUINZENAL'].include?(opts[:'periodicidade'])
        fail ArgumentError, 'invalid value for "periodicidade", must be one of DIARIO, SEMANAL, MENSAL, DECENDIAL, QUINZENAL'
      end
      
      
      
      
      
      
      
      if opts[:'pagamento_semanal'] && !['SEGUNDA', 'TERCA', 'QUARTA', 'QUINTA', 'SEXTA', 'SABADO', 'DOMINGO'].include?(opts[:'pagamento_semanal'])
        fail ArgumentError, 'invalid value for "pagamento_semanal", must be one of SEGUNDA, TERCA, QUARTA, QUINTA, SEXTA, SABADO, DOMINGO'
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      if opts[:'recebe_rav'] && !['NAO_TEM_PERMISSAO_RAV', 'CREDITO_RAV', 'DEBITO_RAV'].include?(opts[:'recebe_rav'])
        fail ArgumentError, 'invalid value for "recebe_rav", must be one of NAO_TEM_PERMISSAO_RAV, CREDITO_RAV, DEBITO_RAV'
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/grupos-economicos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'razaoSocial'] = opts[:'razao_social'] if opts[:'razao_social']
      query_params[:'nomeCredor'] = opts[:'nome_credor'] if opts[:'nome_credor']
      query_params[:'numeroReceitaFederal'] = opts[:'numero_receita_federal'] if opts[:'numero_receita_federal']
      query_params[:'inscricaoEstadual'] = opts[:'inscricao_estadual'] if opts[:'inscricao_estadual']
      query_params[:'contato'] = opts[:'contato'] if opts[:'contato']
      query_params[:'banco'] = opts[:'banco'] if opts[:'banco']
      query_params[:'agencia'] = opts[:'agencia'] if opts[:'agencia']
      query_params[:'digitoAgencia'] = opts[:'digito_agencia'] if opts[:'digito_agencia']
      query_params[:'contaCorrente'] = opts[:'conta_corrente'] if opts[:'conta_corrente']
      query_params[:'digitoContaCorrente'] = opts[:'digito_conta_corrente'] if opts[:'digito_conta_corrente']
      query_params[:'periodicidade'] = opts[:'periodicidade'] if opts[:'periodicidade']
      query_params[:'pagamentoSemanal'] = opts[:'pagamento_semanal'] if opts[:'pagamento_semanal']
      query_params[:'pagamentoMensal'] = opts[:'pagamento_mensal'] if opts[:'pagamento_mensal']
      query_params[:'pagamentoDecendialPrimeiro'] = opts[:'pagamento_decendial_primeiro'] if opts[:'pagamento_decendial_primeiro']
      query_params[:'pagamentoDecendialSegundo'] = opts[:'pagamento_decendial_segundo'] if opts[:'pagamento_decendial_segundo']
      query_params[:'pagamentoDecendialTerceiro'] = opts[:'pagamento_decendial_terceiro'] if opts[:'pagamento_decendial_terceiro']
      query_params[:'pagamentoQuinzenalPrimeiro'] = opts[:'pagamento_quinzenal_primeiro'] if opts[:'pagamento_quinzenal_primeiro']
      query_params[:'pagamentoQuinzenalSegundo'] = opts[:'pagamento_quinzenal_segundo'] if opts[:'pagamento_quinzenal_segundo']
      query_params[:'percentualRAV'] = opts[:'percentual_rav'] if opts[:'percentual_rav']
      query_params[:'recebeRAV'] = opts[:'recebe_rav'] if opts[:'recebe_rav']
      query_params[:'percentualMultiplica'] = opts[:'percentual_multiplica'] if opts[:'percentual_multiplica']
      query_params[:'taxaAdm'] = opts[:'taxa_adm'] if opts[:'taxa_adm']
      query_params[:'taxaBanco'] = opts[:'taxa_banco'] if opts[:'taxa_banco']
      query_params[:'limiteRAV'] = opts[:'limite_rav'] if opts[:'limite_rav']
      query_params[:'idCredorRAV'] = opts[:'id_credor_rav'] if opts[:'id_credor_rav']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageGrupoEconomicoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get28\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{grupo_origem_comercial_resource_listar}}}
    # {{{grupo_origem_comercial_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{grupo_origem_comercial_request_nome_value}}}
    # @return [PageGrupoOrigemComercialResponse]
    def listar_using_get29(opts = {})
      data, _status_code, _headers = listar_using_get29_with_http_info(opts)
      return data
    end

    # {{{grupo_origem_comercial_resource_listar}}}
    # {{{grupo_origem_comercial_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{grupo_origem_comercial_request_nome_value}}}
    # @return [Array<(PageGrupoOrigemComercialResponse, Fixnum, Hash)>] PageGrupoOrigemComercialResponse data, response status code and response headers
    def listar_using_get29_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get29 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/grupos-origens-comerciais".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageGrupoOrigemComercialResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get29\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{maquineta_resource_listar}}}
    # {{{maquineta_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_estabelecimento {{{maquineta_request_id_estabelecimento_value}}}
    # @return [PageMaquinetaResponse]
    def listar_using_get32(opts = {})
      data, _status_code, _headers = listar_using_get32_with_http_info(opts)
      return data
    end

    # {{{maquineta_resource_listar}}}
    # {{{maquineta_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_estabelecimento {{{maquineta_request_id_estabelecimento_value}}}
    # @return [Array<(PageMaquinetaResponse, Fixnum, Hash)>] PageMaquinetaResponse data, response status code and response headers
    def listar_using_get32_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get32 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/maquinetas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idEstabelecimento'] = opts[:'id_estabelecimento'] if opts[:'id_estabelecimento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageMaquinetaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get32\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{moeda_resource_listar}}}
    # {{{moeda_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :codigo_moeda {{{moeda_request_codigo_moeda_value}}}
    # @option opts [String] :simbolo {{{moeda_request_simbolo_value}}}
    # @option opts [String] :descricao {{{moeda_request_descricao_value}}}
    # @return [PageMoedaResponse]
    def listar_using_get33(opts = {})
      data, _status_code, _headers = listar_using_get33_with_http_info(opts)
      return data
    end

    # {{{moeda_resource_listar}}}
    # {{{moeda_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :codigo_moeda {{{moeda_request_codigo_moeda_value}}}
    # @option opts [String] :simbolo {{{moeda_request_simbolo_value}}}
    # @option opts [String] :descricao {{{moeda_request_descricao_value}}}
    # @return [Array<(PageMoedaResponse, Fixnum, Hash)>] PageMoedaResponse data, response status code and response headers
    def listar_using_get33_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get33 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-moedas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'codigoMoeda'] = opts[:'codigo_moeda'] if opts[:'codigo_moeda']
      query_params[:'simbolo'] = opts[:'simbolo'] if opts[:'simbolo']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageMoedaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get33\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_credor_resource_listar}}}
    # {{{operacao_credor_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_operacao {{{operacao_credor_request_id_operacao_value}}}
    # @option opts [Integer] :id_credor {{{operacao_credor_request_id_credor_value}}}
    # @option opts [Integer] :id_produto {{{operacao_credor_request_id_produto_value}}}
    # @return [PageOperacaoCredorResponse]
    def listar_using_get34(opts = {})
      data, _status_code, _headers = listar_using_get34_with_http_info(opts)
      return data
    end

    # {{{operacao_credor_resource_listar}}}
    # {{{operacao_credor_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_operacao {{{operacao_credor_request_id_operacao_value}}}
    # @option opts [Integer] :id_credor {{{operacao_credor_request_id_credor_value}}}
    # @option opts [Integer] :id_produto {{{operacao_credor_request_id_produto_value}}}
    # @return [Array<(PageOperacaoCredorResponse, Fixnum, Hash)>] PageOperacaoCredorResponse data, response status code and response headers
    def listar_using_get34_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get34 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/regras-operacoes-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idOperacao'] = opts[:'id_operacao'] if opts[:'id_operacao']
      query_params[:'idCredor'] = opts[:'id_credor'] if opts[:'id_credor']
      query_params[:'idProduto'] = opts[:'id_produto'] if opts[:'id_produto']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOperacaoCredorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get34\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_estabelecimento_resource_listar}}}
    # {{{telefone_estabelecimento_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_estabelecimento {{{telefone_estabelecimento_request_id_estabelecimento_value}}}
    # @return [PageTelefoneEstabelecimentoResponse]
    def listar_using_get49(opts = {})
      data, _status_code, _headers = listar_using_get49_with_http_info(opts)
      return data
    end

    # {{{telefone_estabelecimento_resource_listar}}}
    # {{{telefone_estabelecimento_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_estabelecimento {{{telefone_estabelecimento_request_id_estabelecimento_value}}}
    # @return [Array<(PageTelefoneEstabelecimentoResponse, Fixnum, Hash)>] PageTelefoneEstabelecimentoResponse data, response status code and response headers
    def listar_using_get49_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get49 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idEstabelecimento'] = opts[:'id_estabelecimento'] if opts[:'id_estabelecimento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTelefoneEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get49\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{terminal_resource_listar}}}
    # {{{terminal_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{terminal_request_id_value}}}
    # @option opts [String] :terminal {{{terminal_request_terminal_value}}}
    # @option opts [Integer] :numero_estabelecimento {{{terminal_request_numero_estabelecimento_value}}}
    # @option opts [Integer] :id_estabelecimento {{{terminal_request_id_estabelecimento_value}}}
    # @return [PageTerminalResponse]
    def listar_using_get51(opts = {})
      data, _status_code, _headers = listar_using_get51_with_http_info(opts)
      return data
    end

    # {{{terminal_resource_listar}}}
    # {{{terminal_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id {{{terminal_request_id_value}}}
    # @option opts [String] :terminal {{{terminal_request_terminal_value}}}
    # @option opts [Integer] :numero_estabelecimento {{{terminal_request_numero_estabelecimento_value}}}
    # @option opts [Integer] :id_estabelecimento {{{terminal_request_id_estabelecimento_value}}}
    # @return [Array<(PageTerminalResponse, Fixnum, Hash)>] PageTerminalResponse data, response status code and response headers
    def listar_using_get51_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get51 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/terminais".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'terminal'] = opts[:'terminal'] if opts[:'terminal']
      query_params[:'numeroEstabelecimento'] = opts[:'numero_estabelecimento'] if opts[:'numero_estabelecimento']
      query_params[:'idEstabelecimento'] = opts[:'id_estabelecimento'] if opts[:'id_estabelecimento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTerminalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get51\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_listar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_adquirente {{{vinculo_estabelecimento_adquirente_request_id_adquirente_value}}}
    # @option opts [Integer] :id_estabelecimento {{{vinculo_estabelecimento_adquirente_request_id_estabelecimento_value}}}
    # @option opts [String] :codigo_estabelecimento_adquirente {{{vinculo_estabelecimento_adquirente_request_codigo_estabelecimento_adquirente_value}}}
    # @return [PageVinculoEstabelecimentoAdquirenteResponse]
    def listar_using_get64(opts = {})
      data, _status_code, _headers = listar_using_get64_with_http_info(opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_listar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_adquirente {{{vinculo_estabelecimento_adquirente_request_id_adquirente_value}}}
    # @option opts [Integer] :id_estabelecimento {{{vinculo_estabelecimento_adquirente_request_id_estabelecimento_value}}}
    # @option opts [String] :codigo_estabelecimento_adquirente {{{vinculo_estabelecimento_adquirente_request_codigo_estabelecimento_adquirente_value}}}
    # @return [Array<(PageVinculoEstabelecimentoAdquirenteResponse, Fixnum, Hash)>] PageVinculoEstabelecimentoAdquirenteResponse data, response status code and response headers
    def listar_using_get64_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get64 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/adquirentes-estabelecimento".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idAdquirente'] = opts[:'id_adquirente'] if opts[:'id_adquirente']
      query_params[:'idEstabelecimento'] = opts[:'id_estabelecimento'] if opts[:'id_estabelecimento']
      query_params[:'codigoEstabelecimentoAdquirente'] = opts[:'codigo_estabelecimento_adquirente'] if opts[:'codigo_estabelecimento_adquirente']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageVinculoEstabelecimentoAdquirenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get64\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_operacao_resource_listar}}}
    # {{{vinculo_operacao_resource_listar_notes}}}
    # @param id {{{vinculo_operacao_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_produto {{{vinculo_operacao_request_id_produto_value}}}
    # @option opts [Integer] :id_operacao {{{vinculo_operacao_request_id_operacao_value}}}
    # @option opts [Integer] :codigo_mcc {{{vinculo_operacao_request_codigo_m_c_c_value}}}
    # @return [PageVinculoOperacaoResponse]
    def listar_using_get65(id, opts = {})
      data, _status_code, _headers = listar_using_get65_with_http_info(id, opts)
      return data
    end

    # {{{vinculo_operacao_resource_listar}}}
    # {{{vinculo_operacao_resource_listar_notes}}}
    # @param id {{{vinculo_operacao_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_produto {{{vinculo_operacao_request_id_produto_value}}}
    # @option opts [Integer] :id_operacao {{{vinculo_operacao_request_id_operacao_value}}}
    # @option opts [Integer] :codigo_mcc {{{vinculo_operacao_request_codigo_m_c_c_value}}}
    # @return [Array<(PageVinculoOperacaoResponse, Fixnum, Hash)>] PageVinculoOperacaoResponse data, response status code and response headers
    def listar_using_get65_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.listar_using_get65 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagestabelecimentoApi.listar_using_get65" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/estabelecimentos/{id}/operacoes".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idProduto'] = opts[:'id_produto'] if opts[:'id_produto']
      query_params[:'idOperacao'] = opts[:'id_operacao'] if opts[:'id_operacao']
      query_params[:'codigoMCC'] = opts[:'codigo_mcc'] if opts[:'codigo_mcc']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageVinculoOperacaoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#listar_using_get65\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{maquineta_resource_salvar}}}
    # {{{maquineta_resource_salvar_notes}}}
    # @param maquineta_persist maquinetaPersist
    # @param [Hash] opts the optional parameters
    # @return [MaquinetaResponse]
    def salvar_using_post19(maquineta_persist, opts = {})
      data, _status_code, _headers = salvar_using_post19_with_http_info(maquineta_persist, opts)
      return data
    end

    # {{{maquineta_resource_salvar}}}
    # {{{maquineta_resource_salvar_notes}}}
    # @param maquineta_persist maquinetaPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(MaquinetaResponse, Fixnum, Hash)>] MaquinetaResponse data, response status code and response headers
    def salvar_using_post19_with_http_info(maquineta_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.salvar_using_post19 ..."
      end
      
      
      # verify the required parameter 'maquineta_persist' is set
      fail ArgumentError, "Missing the required parameter 'maquineta_persist' when calling GlobaltagestabelecimentoApi.salvar_using_post19" if maquineta_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/maquinetas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(maquineta_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'MaquinetaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#salvar_using_post19\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{operacao_credor_resource_salvar}}}
    # {{{operacao_credor_resource_salvar_notes}}}
    # @param operacao_credor_persist operacaoCredorPersist
    # @param [Hash] opts the optional parameters
    # @return [OperacaoCredorResponse]
    def salvar_using_post20(operacao_credor_persist, opts = {})
      data, _status_code, _headers = salvar_using_post20_with_http_info(operacao_credor_persist, opts)
      return data
    end

    # {{{operacao_credor_resource_salvar}}}
    # {{{operacao_credor_resource_salvar_notes}}}
    # @param operacao_credor_persist operacaoCredorPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(OperacaoCredorResponse, Fixnum, Hash)>] OperacaoCredorResponse data, response status code and response headers
    def salvar_using_post20_with_http_info(operacao_credor_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.salvar_using_post20 ..."
      end
      
      
      # verify the required parameter 'operacao_credor_persist' is set
      fail ArgumentError, "Missing the required parameter 'operacao_credor_persist' when calling GlobaltagestabelecimentoApi.salvar_using_post20" if operacao_credor_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/regras-operacoes-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(operacao_credor_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OperacaoCredorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#salvar_using_post20\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{telefone_estabelecimento_resource_salvar}}}
    # {{{telefone_estabelecimento_resource_salvar_notes}}}
    # @param telefone_estabelecimento_persist telefoneEstabelecimentoPersist
    # @param [Hash] opts the optional parameters
    # @return [TelefoneEstabelecimentoResponse]
    def salvar_using_post27(telefone_estabelecimento_persist, opts = {})
      data, _status_code, _headers = salvar_using_post27_with_http_info(telefone_estabelecimento_persist, opts)
      return data
    end

    # {{{telefone_estabelecimento_resource_salvar}}}
    # {{{telefone_estabelecimento_resource_salvar_notes}}}
    # @param telefone_estabelecimento_persist telefoneEstabelecimentoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TelefoneEstabelecimentoResponse, Fixnum, Hash)>] TelefoneEstabelecimentoResponse data, response status code and response headers
    def salvar_using_post27_with_http_info(telefone_estabelecimento_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.salvar_using_post27 ..."
      end
      
      
      # verify the required parameter 'telefone_estabelecimento_persist' is set
      fail ArgumentError, "Missing the required parameter 'telefone_estabelecimento_persist' when calling GlobaltagestabelecimentoApi.salvar_using_post27" if telefone_estabelecimento_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/telefones-estabelecimentos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(telefone_estabelecimento_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TelefoneEstabelecimentoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#salvar_using_post27\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{terminal_resource_salvar}}}
    # {{{terminal_resource_salvar_notes}}}
    # @param terminal_persist terminalPersist
    # @param [Hash] opts the optional parameters
    # @return [TerminalResponse]
    def salvar_using_post29(terminal_persist, opts = {})
      data, _status_code, _headers = salvar_using_post29_with_http_info(terminal_persist, opts)
      return data
    end

    # {{{terminal_resource_salvar}}}
    # {{{terminal_resource_salvar_notes}}}
    # @param terminal_persist terminalPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TerminalResponse, Fixnum, Hash)>] TerminalResponse data, response status code and response headers
    def salvar_using_post29_with_http_info(terminal_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.salvar_using_post29 ..."
      end
      
      
      # verify the required parameter 'terminal_persist' is set
      fail ArgumentError, "Missing the required parameter 'terminal_persist' when calling GlobaltagestabelecimentoApi.salvar_using_post29" if terminal_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/terminais".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(terminal_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TerminalResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#salvar_using_post29\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{vinculo_estabelecimento_adquirente_resource_salvar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_salvar_notes}}}
    # @param vinculo_estabelecimento_adquirente_persist vinculoEstabelecimentoAdquirentePersist
    # @param [Hash] opts the optional parameters
    # @return [VinculoEstabelecimentoAdquirenteResponse]
    def salvar_using_post34(vinculo_estabelecimento_adquirente_persist, opts = {})
      data, _status_code, _headers = salvar_using_post34_with_http_info(vinculo_estabelecimento_adquirente_persist, opts)
      return data
    end

    # {{{vinculo_estabelecimento_adquirente_resource_salvar}}}
    # {{{vinculo_estabelecimento_adquirente_resource_salvar_notes}}}
    # @param vinculo_estabelecimento_adquirente_persist vinculoEstabelecimentoAdquirentePersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(VinculoEstabelecimentoAdquirenteResponse, Fixnum, Hash)>] VinculoEstabelecimentoAdquirenteResponse data, response status code and response headers
    def salvar_using_post34_with_http_info(vinculo_estabelecimento_adquirente_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagestabelecimentoApi.salvar_using_post34 ..."
      end
      
      
      # verify the required parameter 'vinculo_estabelecimento_adquirente_persist' is set
      fail ArgumentError, "Missing the required parameter 'vinculo_estabelecimento_adquirente_persist' when calling GlobaltagestabelecimentoApi.salvar_using_post34" if vinculo_estabelecimento_adquirente_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/adquirentes-estabelecimento".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(vinculo_estabelecimento_adquirente_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VinculoEstabelecimentoAdquirenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagestabelecimentoApi#salvar_using_post34\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
