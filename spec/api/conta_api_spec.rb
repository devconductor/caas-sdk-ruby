=begin
PIER Labs

Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::ContaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContaApi' do
  before do
    # run before each test
    @instance = Pier::ContaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContaApi' do
    it 'should create an instact of ContaApi' do
      @instance.should be_a(Pier::ContaApi)
    end
  end

  # unit tests for buscar_conta_using_get
  # Buscar contas
  # Consulte contas filtrando pelos campos id do emissor, n\u00C3\u00BAmero do cart\u00C3\u00A3o, nome ou CPF/CNPJ 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :nome Nome
  # @option opts [String] :cpf CPF (opcional caso nao informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou id da conta)
  # @option opts [String] :numero_cartao N\u00C3\u00BAmero do cart\u00C3\u00A3o (opcional caso n\u00C3\u00A3o informa o cpf ou id da conta)
  # @option opts [Integer] :id_conta ID da Conta (opcional caso n\u00C3\u00A3o informe o n\u00C3\u00BAmero do cart\u00C3\u00A3o ou cpf)
  # @return [ConsultarContaResponse]
  describe 'buscar_conta_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_conta_using_get
  # Retorna uma conta
  # Consulte informa\u00C3\u00A7\u00C3\u00B5es de uma determinada conta
  # @param id_conta ID da Conta
  # @param [Hash] opts the optional parameters
  # @return [ContaResponse]
  describe 'consultar_conta_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_extrato_faturas_using_get
  # Retorna os extratos
  # Consulte os extratos de uma determinada conta
  # @param id_conta ID da Conta
  # @param data_vencimento Data limite para o vencimento das transa\u00C3\u00A7\u00C3\u00B5es
  # @param [Hash] opts the optional parameters
  # @return [ConsultarExtratoContaResponse]
  describe 'consultar_extrato_faturas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_saldos_limites_using_get
  # Retorna o limite
  # Consulte os limites de uma determinada conta
  # @param id_conta ID da Conta
  # @param [Hash] opts the optional parameters
  # @return [ConsultarSaldoLimitesResponse]
  describe 'consultar_saldos_limites_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
