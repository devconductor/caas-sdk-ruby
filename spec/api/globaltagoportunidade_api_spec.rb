=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltagoportunidadeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltagoportunidadeApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltagoportunidadeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltagoportunidadeApi' do
    it 'should create an instact of GlobaltagoportunidadeApi' do
      @instance.should be_a(Pier::GlobaltagoportunidadeApi)
    end
  end


  # unit tests for alterar_status_using_put
  # {{{tipo_oportunidade_resource_alterar_status}}}
  # {{{tipo_oportunidade_resource_alterar_status_notes}}}
  # @param id {{{tipo_oportunidade_resource_alterar_status_param_id}}}
  # @param id_status {{{tipo_oportunidade_resource_alterar_status_param_id_status}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [StatusOportunidadeResponse]
  describe 'alterar_status_using_put test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for alterar_using_put12
  # {{{oportunidade_resource_alterar}}}
  # {{{oportunidade_resource_alterar_notes}}}
  # @param id {{{oportunidade_resource_alterar_param_id}}}
  # @param update update
  # @param [Hash] opts the optional parameters
  # @return [OportunidadeResponse]
  describe 'alterar_using_put12 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for alterar_using_put20
  # {{{tipo_oportunidade_resource_alterar}}}
  # {{{tipo_oportunidade_resource_alterar_notes}}}
  # @param id {{{tipo_oportunidade_resource_alterar_param_id}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [TipoOportunidadeResponse]
  describe 'alterar_using_put20 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_status_using_get
  # {{{tipo_oportunidade_resource_consultar_status}}}
  # {{{tipo_oportunidade_resource_consultar_status_notes}}}
  # @param id {{{tipo_oportunidade_resource_consultar_status_param_id}}}
  # @param id_status {{{tipo_oportunidade_resource_consultar_status_param_id_status}}}
  # @param [Hash] opts the optional parameters
  # @return [StatusOportunidadeResponse]
  describe 'consultar_status_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get26
  # {{{oportunidade_resource_consultar}}}
  # {{{oportunidade_resource_consultar_notes}}}
  # @param id {{{oportunidade_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [OportunidadeResponse]
  describe 'consultar_using_get26 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get45
  # {{{tipo_oportunidade_resource_consultar}}}
  # {{{tipo_oportunidade_resource_consultar_notes}}}
  # @param id {{{tipo_oportunidade_resource_consultar_param_id}}}
  # @param [Hash] opts the optional parameters
  # @return [TipoOportunidadeResponse]
  describe 'consultar_using_get45 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_auditorias_status_using_get
  # {{{tipo_oportunidade_resource_listar_auditorias_status}}}
  # {{{tipo_oportunidade_resource_listar_auditorias_status_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :rev_type {{{status_oportunidade_a_u_d_request_rev_type_value}}}
  # @option opts [String] :rev_date {{{status_oportunidade_a_u_d_request_rev_date_value}}}
  # @option opts [Integer] :id {{{status_oportunidade_a_u_d_request_id_value}}}
  # @option opts [Integer] :id_tipo_oportunidade {{{status_oportunidade_a_u_d_request_id_tipo_oportunidade_value}}}
  # @option opts [String] :nome {{{status_oportunidade_a_u_d_request_nome_value}}}
  # @option opts [String] :descricao {{{status_oportunidade_a_u_d_request_descricao_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_a_u_d_request_flag_ativo_value}}}
  # @option opts [String] :rev_user {{{status_oportunidade_a_u_d_request_rev_user_value}}}
  # @return [PageStatusOportunidadeAUDResponse]
  describe 'listar_auditorias_status_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_auditorias_using_get
  # {{{oportunidade_resource_listar_auditorias}}}
  # {{{oportunidade_resource_listar_auditorias_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_status_oportunidade {{{oportunidade_a_u_d_request_id_status_oportunidade_value}}}
  # @option opts [String] :data_cadastro {{{oportunidade_a_u_d_request_data_cadastro_value}}}
  # @option opts [String] :data_atualizacao {{{oportunidade_a_u_d_request_data_atualizacao_value}}}
  # @option opts [String] :numero_receita_federal {{{oportunidade_a_u_d_request_numero_receita_federal_value}}}
  # @option opts [String] :data_inicio_vigencia {{{oportunidade_a_u_d_request_data_inicio_vigencia_value}}}
  # @option opts [String] :datat_fim_vigencia {{{oportunidade_a_u_d_request_datat_fim_vigencia_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_a_u_d_request_flag_ativo_value}}}
  # @option opts [String] :rev_date {{{oportunidade_a_u_d_request_rev_date_value}}}
  # @option opts [String] :rev_type {{{oportunidade_a_u_d_request_rev_type_value}}}
  # @option opts [String] :rev_user {{{oportunidade_a_u_d_request_rev_user_value}}}
  # @return [PageOportunidadeAUDResponse]
  describe 'listar_auditorias_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_auditorias_using_get1
  # {{{tipo_oportunidade_resource_listar_auditorias}}}
  # {{{tipo_oportunidade_resource_listar_auditorias_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :rev_type {{{tipo_oportunidade_a_u_d_request_rev_type_value}}}
  # @option opts [String] :rev_date {{{tipo_oportunidade_a_u_d_request_rev_date_value}}}
  # @option opts [Integer] :id {{{tipo_oportunidade_a_u_d_request_id_value}}}
  # @option opts [String] :descricao {{{tipo_oportunidade_a_u_d_request_descricao_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_a_u_d_request_flag_ativo_value}}}
  # @option opts [String] :rev_user {{{tipo_oportunidade_a_u_d_request_rev_user_value}}}
  # @return [PageTipoOportunidadeAUDResponse]
  describe 'listar_auditorias_using_get1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_status_using_get
  # {{{tipo_oportunidade_resource_listar_status}}}
  # {{{tipo_oportunidade_resource_listar_status_notes}}}
  # @param id {{{tipo_oportunidade_resource_listar_status_param_id}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :nome {{{status_oportunidade_request_nome_value}}}
  # @option opts [String] :descricao {{{status_oportunidade_request_descricao_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{status_oportunidade_request_flag_ativo_value}}}
  # @return [PageStatusOportunidadeResponse]
  describe 'listar_status_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get35
  # {{{oportunidade_resource_listar}}}
  # {{{oportunidade_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [Integer] :id_status_oportunidade {{{oportunidade_request_id_status_oportunidade_value}}}
  # @option opts [String] :data_cadastro {{{oportunidade_request_data_cadastro_value}}}
  # @option opts [String] :data_atualizacao {{{oportunidade_request_data_atualizacao_value}}}
  # @option opts [String] :numero_receita_federal {{{oportunidade_request_numero_receita_federal_value}}}
  # @option opts [String] :data_inicio_vigencia {{{oportunidade_request_data_inicio_vigencia_value}}}
  # @option opts [String] :data_fim_vigencia {{{oportunidade_request_data_fim_vigencia_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{oportunidade_request_flag_ativo_value}}}
  # @return [PageOportunidadeResponse]
  describe 'listar_using_get35 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get55
  # {{{tipo_oportunidade_resource_listar}}}
  # {{{tipo_oportunidade_resource_listar_notes}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
  # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
  # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
  # @option opts [String] :descricao {{{tipo_oportunidade_request_descricao_value}}}
  # @option opts [BOOLEAN] :flag_ativo {{{tipo_oportunidade_request_flag_ativo_value}}}
  # @return [PageTipoOportunidadeResponse]
  describe 'listar_using_get55 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_status_using_post
  # {{{tipo_oportunidade_resource_salvar_status}}}
  # {{{tipo_oportunidade_resource_salvar_status_notes}}}
  # @param id {{{tipo_oportunidade_resource_salvar_status_param_id}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [StatusOportunidadeResponse]
  describe 'salvar_status_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post21
  # {{{oportunidade_resource_salvar}}}
  # {{{oportunidade_resource_salvar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [OportunidadeResponse]
  describe 'salvar_using_post21 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post30
  # {{{tipo_oportunidade_resource_salvar}}}
  # {{{tipo_oportunidade_resource_salvar_notes}}}
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [TipoOportunidadeResponse]
  describe 'salvar_using_post30 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


end

