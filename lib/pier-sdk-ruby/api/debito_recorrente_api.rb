=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class DebitoRecorrenteApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Lista os d\u00E9bitos recorrentes de uma Conta
    # A entidade D\u00E9bito Recorrente trata dos registros contratados por um determinado cliente (idConta) onde a cobran\u00E7a dele se d\u00E1 de forma cont\u00EDnua, consistindo em uma \u201Cassinatura\u201D ou pagamento de mensalidades. Isso significa que, enquanto o servi\u00E7o continuar a ser prestado, o cliente dever\u00E1 continuar realizando os pagamentos. A determina\u00E7\u00E3o de quanto tempo essa rela\u00E7\u00E3o ir\u00E1 durar \u00E9 feita em contrato. Na maioria das vezes, existe um per\u00EDodo m\u00EDnimo e, caso o servi\u00E7o seja cancelado ou o pagamento n\u00E3o seja realizado, o status do D\u00E9bito Recorrente ter\u00E1 a FlagAtivo com valor false. Assim, este m\u00E9todo lista todas as opera\u00E7\u00F5es de D\u00E9bitos Recorrentes que um determinado idConta j\u00E1 contratou, esteja ele ativo ou n\u00E3o.
    # @param id_conta C\u00F3digo de identifica\u00E7\u00E3o da Conta (id)
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_debito_recorrente C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id)
    # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @option opts [String] :data_hora_inicio Data inicio do d\u00E9bito recorrente.
    # @option opts [String] :data_hora_fim Data fim do d\u00E9bito recorrente.
    # @option opts [BOOLEAN] :ativo Identifica se o d\u00E9bito recorrente est\u00E1 ativo.
    # @option opts [String] :data_hora_ultimo_pagamento Data do \u00FAltimo pagamento efetuado.
    # @return [PageTipoDebitoRecorrenteResponse]
    def listar_using_get16(id_conta, opts = {})
      data, _status_code, _headers = listar_using_get16_with_http_info(id_conta, opts)
      return data
    end

    # Lista os d\u00E9bitos recorrentes de uma Conta
    # A entidade D\u00E9bito Recorrente trata dos registros contratados por um determinado cliente (idConta) onde a cobran\u00E7a dele se d\u00E1 de forma cont\u00EDnua, consistindo em uma \u201Cassinatura\u201D ou pagamento de mensalidades. Isso significa que, enquanto o servi\u00E7o continuar a ser prestado, o cliente dever\u00E1 continuar realizando os pagamentos. A determina\u00E7\u00E3o de quanto tempo essa rela\u00E7\u00E3o ir\u00E1 durar \u00E9 feita em contrato. Na maioria das vezes, existe um per\u00EDodo m\u00EDnimo e, caso o servi\u00E7o seja cancelado ou o pagamento n\u00E3o seja realizado, o status do D\u00E9bito Recorrente ter\u00E1 a FlagAtivo com valor false. Assim, este m\u00E9todo lista todas as opera\u00E7\u00F5es de D\u00E9bitos Recorrentes que um determinado idConta j\u00E1 contratou, esteja ele ativo ou n\u00E3o.
    # @param id_conta C\u00F3digo de identifica\u00E7\u00E3o da Conta (id)
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_tipo_debito_recorrente C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id)
    # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @option opts [String] :data_hora_inicio Data inicio do d\u00E9bito recorrente.
    # @option opts [String] :data_hora_fim Data fim do d\u00E9bito recorrente.
    # @option opts [BOOLEAN] :ativo Identifica se o d\u00E9bito recorrente est\u00E1 ativo.
    # @option opts [String] :data_hora_ultimo_pagamento Data do \u00FAltimo pagamento efetuado.
    # @return [Array<(PageTipoDebitoRecorrenteResponse, Fixnum, Hash)>] PageTipoDebitoRecorrenteResponse data, response status code and response headers
    def listar_using_get16_with_http_info(id_conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DebitoRecorrenteApi.listar_using_get16 ..."
      end
      
      
      # verify the required parameter 'id_conta' is set
      fail ArgumentError, "Missing the required parameter 'id_conta' when calling DebitoRecorrenteApi.listar_using_get16" if id_conta.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/debitos-recorrentes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = id_conta
      query_params[:'idTipoDebitoRecorrente'] = opts[:'id_tipo_debito_recorrente'] if opts[:'id_tipo_debito_recorrente']
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'dataHoraInicio'] = opts[:'data_hora_inicio'] if opts[:'data_hora_inicio']
      query_params[:'dataHoraFim'] = opts[:'data_hora_fim'] if opts[:'data_hora_fim']
      query_params[:'ativo'] = opts[:'ativo'] if opts[:'ativo']
      query_params[:'dataHoraUltimoPagamento'] = opts[:'data_hora_ultimo_pagamento'] if opts[:'data_hora_ultimo_pagamento']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DebitoRecorrenteApi#listar_using_get16\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Listar Tipos Debitos Recorrentes
    # Para os emissores que utilizam a entidade Debitos Recorrentes precisam previamente solicitar a Conductor o cadastro de quais Tipos eles poder\u00E3o comercializar. Por isso, este recurso tem como objetivo apresentar todos os Tipos de D\u00E9bitos Recorrentes que est\u00E3o cadastrados para um determinado Emissor, independente do status dele.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @option opts [Integer] :id C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id).
    # @option opts [String] :descricao Descri\u00E7\u00E3o do tipo de d\u00E9bito recorrente.
    # @option opts [Float] :valor Valor do tipo de d\u00E9bito recorrente.
    # @option opts [BOOLEAN] :flag_ativo Flag que identifica se o tipo d\u00E9bito recorrente est\u00E1 ativo.
    # @return [PageTipoDebitoRecorrenteResponse]
    def listar_using_get43(opts = {})
      data, _status_code, _headers = listar_using_get43_with_http_info(opts)
      return data
    end

    # Listar Tipos Debitos Recorrentes
    # Para os emissores que utilizam a entidade Debitos Recorrentes precisam previamente solicitar a Conductor o cadastro de quais Tipos eles poder\u00E3o comercializar. Por isso, este recurso tem como objetivo apresentar todos os Tipos de D\u00E9bitos Recorrentes que est\u00E3o cadastrados para um determinado Emissor, independente do status dele.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @option opts [Integer] :id C\u00F3digo de identifica\u00E7\u00E3o do tipo de d\u00E9bito recorrente (id).
    # @option opts [String] :descricao Descri\u00E7\u00E3o do tipo de d\u00E9bito recorrente.
    # @option opts [Float] :valor Valor do tipo de d\u00E9bito recorrente.
    # @option opts [BOOLEAN] :flag_ativo Flag que identifica se o tipo d\u00E9bito recorrente est\u00E1 ativo.
    # @return [Array<(PageTipoDebitoRecorrenteResponse, Fixnum, Hash)>] PageTipoDebitoRecorrenteResponse data, response status code and response headers
    def listar_using_get43_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DebitoRecorrenteApi.listar_using_get43 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-debitos-recorrentes".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'id'] = opts[:'id'] if opts[:'id']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'valor'] = opts[:'valor'] if opts[:'valor']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoDebitoRecorrenteResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DebitoRecorrenteApi#listar_using_get43\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
