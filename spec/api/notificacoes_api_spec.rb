=begin
PIER Labs


Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::NotificacoesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NotificacoesApi' do
  before do
    # run before each test
    @instance = Pier::NotificacoesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NotificacoesApi' do
    it 'should create an instact of NotificacoesApi' do
      @instance.should be_a(Pier::NotificacoesApi)
    end
  end


  # unit tests for atualizar_sms_using_post
  # Atualizar SMS
  # Esse recurso permite atualizar o status do SMS do emissor
  # @param nsu Seu n\u00C3\u00BAmero
  # @param status Status
  # @param data Data
  # @param texto_status TextoStatus
  # @param operadora Operadora
  # @param [Hash] opts the optional parameters
  # @return [SMS]
  describe 'atualizar_sms_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for limpar_acesso_tww_using_get
  # Limpar Acessos
  # Esse recurso permite limpar a lista de emissores que possuem acesso a envio de SMS pela TWW.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'limpar_acesso_tww_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_push_using_get
  # Listar Push
  # Esse recurso permite listar os Pushes do emissor
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page P\u00C3\u00A1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100)
  # @option opts [Date] :data_envio Apresenta a data e em que o registro foi enviado para o dispositivo.
  # @option opts [String] :evento Nome do evento da notifica\u00C3\u00A7\u00C3\u00A3o
  # @option opts [String] :status Status de envio da notifica\u00C3\u00A7\u00C3\u00A3o
  # @option opts [String] :plataforma Plataforma de Push notifications.
  # @option opts [String] :protocolo N\u00C3\u00BAmero do protocolo de envio de notifica\u00C3\u00A7\u00C3\u00B5es
  # @return [PagePush]
  describe 'listar_push_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_sms_using_get
  # Listar SMS
  # Esse recurso permite listar os SMS do emissor
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page P\u00C3\u00A1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 100, Max = 100)
  # @option opts [DateTime] :data_inclusao Apresenta a data e em que o registro foi inclu\u00C3\u00ADdo na base para ser enviado
  # @option opts [String] :evento Nome do evento da notifica\u00C3\u00A7\u00C3\u00A3o
  # @option opts [String] :status Status de envio da notifica\u00C3\u00A7\u00C3\u00A3o
  # @option opts [String] :operadora Nome da operadora a qual a notifica\u00C3\u00A7\u00C3\u00A3o foi enviada.
  # @option opts [String] :protocolo N\u00C3\u00BAmero do protocolo de envio de notifica\u00C3\u00A7\u00C3\u00B5es
  # @return [PageSMS]
  describe 'listar_sms_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for responder_sms_using_post
  # Responder SMS
  # Esse recurso permite atualizar a resposta do SMS, fornecida pedo usu\u00C3\u00A1rio
  # @param nsu Seu n\u00C3\u00BAmero
  # @param data Data
  # @param resposta TextoStatus
  # @param [Hash] opts the optional parameters
  # @return [SMS]
  describe 'responder_sms_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_push_fcm_using_post
  # Enviar Push FCM
  # Esse recurso permite enviar Push para um determinado dipositivo movel atrav\u00C3\u00A9s da plataforma FCM (Firebase Cloud Messaging).
  # @param push_persists pushPersists
  # @param [Hash] opts the optional parameters
  # @return [NotificacaoSMSResponse]
  describe 'salvar_push_fcm_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_push_gcm_using_post
  # Enviar Push GCM
  # Esse recurso permite enviar Push para um determinado dipositivo movel atrav\u00C3\u00A9s da plataforma GCM (Google Cloud Messaging).
  # @param push_persists pushPersists
  # @param [Hash] opts the optional parameters
  # @return [NotificacaoSMSResponse]
  describe 'salvar_push_gcm_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_push_using_post
  # Enviar Push APNS
  # Esse recurso permite enviar Push para um determinado dipositivo movel atrav\u00C3\u00A9s da plataforma APNS (Apple Push Notification Service).
  # @param push_persists pushPersists
  # @param [Hash] opts the optional parameters
  # @return [NotificacaoSMSResponse]
  describe 'salvar_push_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_sms_using_post
  # Enviar SMS
  # Esse recurso permite enviar uma lista de SMS.
  # @param lista_sms listaSMS
  # @param [Hash] opts the optional parameters
  # @return [NotificacaoSMSResponse]
  describe 'salvar_sms_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


end

