=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagtransferenciabancariaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{transferencia_bancaria_resource_atualizar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_atualizar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [TaxaJurosContaResponse]
    def atualizar_taxas_juros_contas_using_put(id, update, opts = {})
      data, _status_code, _headers = atualizar_taxas_juros_contas_using_put_with_http_info(id, update, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_atualizar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_atualizar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [Array<(TaxaJurosContaResponse, Fixnum, Hash)>] TaxaJurosContaResponse data, response status code and response headers
    def atualizar_taxas_juros_contas_using_put_with_http_info(id, update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.atualizar_taxas_juros_contas_using_put ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.atualizar_taxas_juros_contas_using_put" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'update' is set
      fail ArgumentError, "Missing the required parameter 'update' when calling GlobaltagtransferenciabancariaApi.atualizar_taxas_juros_contas_using_put" if update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/taxas-transferencias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxaJurosContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#atualizar_taxas_juros_contas_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_bancaria_resource_atualizar}}}
    # {{{conta_bancaria_resource_atualizar_notes}}}
    # @param id {{{conta_bancaria_resource_atualizar_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def atualizar_using_put1(id, update, opts = {})
      data, _status_code, _headers = atualizar_using_put1_with_http_info(id, update, opts)
      return data
    end

    # {{{conta_bancaria_resource_atualizar}}}
    # {{{conta_bancaria_resource_atualizar_notes}}}
    # @param id {{{conta_bancaria_resource_atualizar_param_id}}}
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def atualizar_using_put1_with_http_info(id, update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.atualizar_using_put1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.atualizar_using_put1" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'update' is set
      fail ArgumentError, "Missing the required parameter 'update' when calling GlobaltagtransferenciabancariaApi.atualizar_using_put1" if update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#atualizar_using_put1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [String]
    def cancelar_transferencia_credito_conta_bancaria_using_post(id_transferencia, opts = {})
      data, _status_code, _headers = cancelar_transferencia_credito_conta_bancaria_using_post_with_http_info(id_transferencia, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_cancelar_transferencia_credito_conta_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def cancelar_transferencia_credito_conta_bancaria_using_post_with_http_info(id_transferencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.cancelar_transferencia_credito_conta_bancaria_using_post ..."
      end
      
      
      # verify the required parameter 'id_transferencia' is set
      fail ArgumentError, "Missing the required parameter 'id_transferencia' when calling GlobaltagtransferenciabancariaApi.cancelar_transferencia_credito_conta_bancaria_using_post" if id_transferencia.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/transferencias-creditos-contas-bancarias/{idTransferencia}/cancelar".sub('{format}','json').sub('{' + 'idTransferencia' + '}', id_transferencia.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#cancelar_transferencia_credito_conta_bancaria_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [String]
    def confirmar_transferencia_credito_conta_bancaria_using_post(id_transferencia, opts = {})
      data, _status_code, _headers = confirmar_transferencia_credito_conta_bancaria_using_post_with_http_info(id_transferencia, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_confirmar_transferencia_credito_conta_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def confirmar_transferencia_credito_conta_bancaria_using_post_with_http_info(id_transferencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.confirmar_transferencia_credito_conta_bancaria_using_post ..."
      end
      
      
      # verify the required parameter 'id_transferencia' is set
      fail ArgumentError, "Missing the required parameter 'id_transferencia' when calling GlobaltagtransferenciabancariaApi.confirmar_transferencia_credito_conta_bancaria_using_post" if id_transferencia.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/transferencias-creditos-contas-bancarias/{idTransferencia}/confirmar".sub('{format}','json').sub('{' + 'idTransferencia' + '}', id_transferencia.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#confirmar_transferencia_credito_conta_bancaria_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_consultar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_consultar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param numero_meses_carencia numeroMesesCarencia
    # @param [Hash] opts the optional parameters
    # @return [TaxaJurosContaResponse]
    def consultar_taxas_juros_contas_using_get(id, numero_meses_carencia, opts = {})
      data, _status_code, _headers = consultar_taxas_juros_contas_using_get_with_http_info(id, numero_meses_carencia, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_consultar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_consultar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param numero_meses_carencia numeroMesesCarencia
    # @param [Hash] opts the optional parameters
    # @return [Array<(TaxaJurosContaResponse, Fixnum, Hash)>] TaxaJurosContaResponse data, response status code and response headers
    def consultar_taxas_juros_contas_using_get_with_http_info(id, numero_meses_carencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.consultar_taxas_juros_contas_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.consultar_taxas_juros_contas_using_get" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'numero_meses_carencia' is set
      fail ArgumentError, "Missing the required parameter 'numero_meses_carencia' when calling GlobaltagtransferenciabancariaApi.consultar_taxas_juros_contas_using_get" if numero_meses_carencia.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/taxas-transferencias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'numeroMesesCarencia'] = numero_meses_carencia

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxaJurosContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#consultar_taxas_juros_contas_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_consultar_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_consultar_transferencia_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_consultar_transferencia_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [TransferenciaCreditoContaBancariaResponse]
    def consultar_transferencia_bancaria_using_get(id_transferencia, opts = {})
      data, _status_code, _headers = consultar_transferencia_bancaria_using_get_with_http_info(id_transferencia, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_consultar_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_consultar_transferencia_bancaria_notes}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_consultar_transferencia_bancaria_param_id_transferencia}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransferenciaCreditoContaBancariaResponse, Fixnum, Hash)>] TransferenciaCreditoContaBancariaResponse data, response status code and response headers
    def consultar_transferencia_bancaria_using_get_with_http_info(id_transferencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.consultar_transferencia_bancaria_using_get ..."
      end
      
      
      # verify the required parameter 'id_transferencia' is set
      fail ArgumentError, "Missing the required parameter 'id_transferencia' when calling GlobaltagtransferenciabancariaApi.consultar_transferencia_bancaria_using_get" if id_transferencia.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/transferencias-creditos-contas-bancarias/{idTransferencia}".sub('{format}','json').sub('{' + 'idTransferencia' + '}', id_transferencia.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransferenciaCreditoContaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#consultar_transferencia_bancaria_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_bancaria_resource_consultar}}}
    # {{{conta_bancaria_resource_consultar_notes}}}
    # @param id {{{conta_bancaria_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def consultar_using_get13(id, opts = {})
      data, _status_code, _headers = consultar_using_get13_with_http_info(id, opts)
      return data
    end

    # {{{conta_bancaria_resource_consultar}}}
    # {{{conta_bancaria_resource_consultar_notes}}}
    # @param id {{{conta_bancaria_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def consultar_using_get13_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.consultar_using_get13 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.consultar_using_get13" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#consultar_using_get13\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_consultar}}}
    # {{{transferencia_bancaria_resource_consultar_notes}}}
    # @param id {{{transferencia_bancaria_resource_consultar_param_id}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_consultar_param_id_evento}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta_bancaria_destino {{{transferencia_bancaria_resource_consultar_param_id_conta_portador}}}
    # @return [TransferenciaBancariaResponse]
    def consultar_using_get48(id, id_transferencia, opts = {})
      data, _status_code, _headers = consultar_using_get48_with_http_info(id, id_transferencia, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_consultar}}}
    # {{{transferencia_bancaria_resource_consultar_notes}}}
    # @param id {{{transferencia_bancaria_resource_consultar_param_id}}}
    # @param id_transferencia {{{transferencia_bancaria_resource_consultar_param_id_evento}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta_bancaria_destino {{{transferencia_bancaria_resource_consultar_param_id_conta_portador}}}
    # @return [Array<(TransferenciaBancariaResponse, Fixnum, Hash)>] TransferenciaBancariaResponse data, response status code and response headers
    def consultar_using_get48_with_http_info(id, id_transferencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.consultar_using_get48 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.consultar_using_get48" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_transferencia' is set
      fail ArgumentError, "Missing the required parameter 'id_transferencia' when calling GlobaltagtransferenciabancariaApi.consultar_using_get48" if id_transferencia.nil?
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/transferencias-creditos-contas-bancarias/{id_transferencia}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s).sub('{' + 'id_transferencia' + '}', id_transferencia.to_s)

      # query parameters
      query_params = {}
      query_params[:'id_conta_bancaria_destino'] = opts[:'id_conta_bancaria_destino'] if opts[:'id_conta_bancaria_destino']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransferenciaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#consultar_using_get48\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_listar_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_listar_transferencia_bancaria_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_conta {{{transferencia_credito_conta_bancaria_request_id_conta_value}}}
    # @option opts [String] :data_solicitacao_inicial {{{transferencia_credito_conta_bancaria_request_data_solicitacao_inicial_value}}}
    # @option opts [String] :data_solicitacao_final {{{transferencia_credito_conta_bancaria_request_data_solicitacao_final_value}}}
    # @option opts [Integer] :status {{{transferencia_credito_conta_bancaria_request_status_value}}}
    # @return [PageTransferenciaCreditoContaBancariaResponse]
    def listar_transferencia_bancaria_using_get(opts = {})
      data, _status_code, _headers = listar_transferencia_bancaria_using_get_with_http_info(opts)
      return data
    end

    # {{{transferencia_bancaria_resource_listar_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_listar_transferencia_bancaria_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [Integer] :id_conta {{{transferencia_credito_conta_bancaria_request_id_conta_value}}}
    # @option opts [String] :data_solicitacao_inicial {{{transferencia_credito_conta_bancaria_request_data_solicitacao_inicial_value}}}
    # @option opts [String] :data_solicitacao_final {{{transferencia_credito_conta_bancaria_request_data_solicitacao_final_value}}}
    # @option opts [Integer] :status {{{transferencia_credito_conta_bancaria_request_status_value}}}
    # @return [Array<(PageTransferenciaCreditoContaBancariaResponse, Fixnum, Hash)>] PageTransferenciaCreditoContaBancariaResponse data, response status code and response headers
    def listar_transferencia_bancaria_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.listar_transferencia_bancaria_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/transferencias-creditos-contas-bancarias".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'idConta'] = opts[:'id_conta'] if opts[:'id_conta']
      query_params[:'dataSolicitacaoInicial'] = opts[:'data_solicitacao_inicial'] if opts[:'data_solicitacao_inicial']
      query_params[:'dataSolicitacaoFinal'] = opts[:'data_solicitacao_final'] if opts[:'data_solicitacao_final']
      query_params[:'status'] = opts[:'status'] if opts[:'status']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTransferenciaCreditoContaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#listar_transferencia_bancaria_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_bancaria_resource_listar}}}
    # {{{conta_bancaria_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta {{{conta_bancaria_portador_listar_request_id_conta_value}}}
    # @option opts [String] :nome_agencia {{{conta_bancaria_portador_listar_request_nome_agencia_value}}}
    # @option opts [Integer] :banco {{{conta_bancaria_portador_listar_request_codigo_banco_value}}}
    # @option opts [String] :numero_agencia {{{conta_bancaria_portador_listar_request_numero_agencia_value}}}
    # @option opts [String] :numero_conta {{{conta_bancaria_portador_listar_request_numero_conta_value}}}
    # @option opts [Integer] :flag_ativo {{{conta_bancaria_portador_listar_request_flag_ativo_value}}}
    # @option opts [Integer] :flag_conta_origem_doc {{{conta_bancaria_portador_listar_request_flag_conta_origem_doc_value}}}
    # @option opts [Integer] :id_pessoa_fisica {{{conta_bancaria_portador_listar_request_id_pessoa_fisica_value}}}
    # @option opts [String] :favorecido {{{conta_bancaria_portador_listar_request_favorecido_value}}}
    # @option opts [String] :numero_receira_federal {{{conta_bancaria_portador_listar_request_numero_receira_federal_value}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageContaBancariaPortadorResponse]
    def listar_using_get16(opts = {})
      data, _status_code, _headers = listar_using_get16_with_http_info(opts)
      return data
    end

    # {{{conta_bancaria_resource_listar}}}
    # {{{conta_bancaria_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta {{{conta_bancaria_portador_listar_request_id_conta_value}}}
    # @option opts [String] :nome_agencia {{{conta_bancaria_portador_listar_request_nome_agencia_value}}}
    # @option opts [Integer] :banco {{{conta_bancaria_portador_listar_request_codigo_banco_value}}}
    # @option opts [String] :numero_agencia {{{conta_bancaria_portador_listar_request_numero_agencia_value}}}
    # @option opts [String] :numero_conta {{{conta_bancaria_portador_listar_request_numero_conta_value}}}
    # @option opts [Integer] :flag_ativo {{{conta_bancaria_portador_listar_request_flag_ativo_value}}}
    # @option opts [Integer] :flag_conta_origem_doc {{{conta_bancaria_portador_listar_request_flag_conta_origem_doc_value}}}
    # @option opts [Integer] :id_pessoa_fisica {{{conta_bancaria_portador_listar_request_id_pessoa_fisica_value}}}
    # @option opts [String] :favorecido {{{conta_bancaria_portador_listar_request_favorecido_value}}}
    # @option opts [String] :numero_receira_federal {{{conta_bancaria_portador_listar_request_numero_receira_federal_value}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageContaBancariaPortadorResponse, Fixnum, Hash)>] PageContaBancariaPortadorResponse data, response status code and response headers
    def listar_using_get16_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.listar_using_get16 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = opts[:'id_conta'] if opts[:'id_conta']
      query_params[:'nomeAgencia'] = opts[:'nome_agencia'] if opts[:'nome_agencia']
      query_params[:'banco'] = opts[:'banco'] if opts[:'banco']
      query_params[:'numeroAgencia'] = opts[:'numero_agencia'] if opts[:'numero_agencia']
      query_params[:'numeroConta'] = opts[:'numero_conta'] if opts[:'numero_conta']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']
      query_params[:'flagContaOrigemDoc'] = opts[:'flag_conta_origem_doc'] if opts[:'flag_conta_origem_doc']
      query_params[:'idPessoaFisica'] = opts[:'id_pessoa_fisica'] if opts[:'id_pessoa_fisica']
      query_params[:'favorecido'] = opts[:'favorecido'] if opts[:'favorecido']
      query_params[:'numeroReceiraFederal'] = opts[:'numero_receira_federal'] if opts[:'numero_receira_federal']
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#listar_using_get16\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_listar}}}
    # {{{transferencia_bancaria_resource_listar_notes}}}
    # @param id {{{transferencia_bancaria_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta_bancaria_destino {{{transferencia_bancaria_resource_listar_param_id_conta_portador}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageTransferenciaBancariaResponse]
    def listar_using_get59(id, opts = {})
      data, _status_code, _headers = listar_using_get59_with_http_info(id, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_listar}}}
    # {{{transferencia_bancaria_resource_listar_notes}}}
    # @param id {{{transferencia_bancaria_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta_bancaria_destino {{{transferencia_bancaria_resource_listar_param_id_conta_portador}}}
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageTransferenciaBancariaResponse, Fixnum, Hash)>] PageTransferenciaBancariaResponse data, response status code and response headers
    def listar_using_get59_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.listar_using_get59 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.listar_using_get59" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/transferencias-creditos-contas-bancarias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'id_conta_bancaria_destino'] = opts[:'id_conta_bancaria_destino'] if opts[:'id_conta_bancaria_destino']
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTransferenciaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#listar_using_get59\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_salvar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [TaxaJurosContaResponse]
    def salvar_taxas_juros_contas_using_post(id, persist, opts = {})
      data, _status_code, _headers = salvar_taxas_juros_contas_using_post_with_http_info(id, persist, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_salvar_taxas_juros_contas}}}
    # {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_notes}}}
    # @param id {{{transferencia_bancaria_resource_salvar_taxas_juros_contas_param_id}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TaxaJurosContaResponse, Fixnum, Hash)>] TaxaJurosContaResponse data, response status code and response headers
    def salvar_taxas_juros_contas_using_post_with_http_info(id, persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.salvar_taxas_juros_contas_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.salvar_taxas_juros_contas_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagtransferenciabancariaApi.salvar_taxas_juros_contas_using_post" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/taxas-transferencias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TaxaJurosContaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#salvar_taxas_juros_contas_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{conta_bancaria_resource_salvar}}}
    # {{{conta_bancaria_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def salvar_using_post7(persist, opts = {})
      data, _status_code, _headers = salvar_using_post7_with_http_info(persist, opts)
      return data
    end

    # {{{conta_bancaria_resource_salvar}}}
    # {{{conta_bancaria_resource_salvar_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def salvar_using_post7_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.salvar_using_post7 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagtransferenciabancariaApi.salvar_using_post7" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#salvar_using_post7\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_simular_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_simular_transferencia_bancaria_notes}}}
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [PlanoParcelamentoTransferenciaCreditoContaBancariaResponse]
    def simular_transferencia_bancaria_using_post(request, opts = {})
      data, _status_code, _headers = simular_transferencia_bancaria_using_post_with_http_info(request, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_simular_transferencia_bancaria}}}
    # {{{transferencia_bancaria_resource_simular_transferencia_bancaria_notes}}}
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Array<(PlanoParcelamentoTransferenciaCreditoContaBancariaResponse, Fixnum, Hash)>] PlanoParcelamentoTransferenciaCreditoContaBancariaResponse data, response status code and response headers
    def simular_transferencia_bancaria_using_post_with_http_info(request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.simular_transferencia_bancaria_using_post ..."
      end
      
      
      # verify the required parameter 'request' is set
      fail ArgumentError, "Missing the required parameter 'request' when calling GlobaltagtransferenciabancariaApi.simular_transferencia_bancaria_using_post" if request.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/simular-transferencias-creditos-contas-bancarias".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PlanoParcelamentoTransferenciaCreditoContaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#simular_transferencia_bancaria_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_transferencia_credito_conta_bancaria_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [TransferenciaCreditoContaBancariaResponse]
    def transferencia_credito_conta_bancaria_using_post(persist, opts = {})
      data, _status_code, _headers = transferencia_credito_conta_bancaria_using_post_with_http_info(persist, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_transferencia_credito_conta_bancaria}}}
    # {{{transferencia_bancaria_resource_transferencia_credito_conta_bancaria_notes}}}
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransferenciaCreditoContaBancariaResponse, Fixnum, Hash)>] TransferenciaCreditoContaBancariaResponse data, response status code and response headers
    def transferencia_credito_conta_bancaria_using_post_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.transferencia_credito_conta_bancaria_using_post ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling GlobaltagtransferenciabancariaApi.transferencia_credito_conta_bancaria_using_post" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/transferencias-creditos-contas-bancarias".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransferenciaCreditoContaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#transferencia_credito_conta_bancaria_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{transferencia_bancaria_resource_transferir}}}
    # {{{transferencia_bancaria_resource_transferir_notes}}}
    # @param id {{{transferencia_bancaria_resource_transferir_param_id}}}
    # @param transferencia_bancaria_persist transferenciaBancariaPersist
    # @param [Hash] opts the optional parameters
    # @return [TransferenciaBancariaResponse]
    def transferir_using_post(id, transferencia_bancaria_persist, opts = {})
      data, _status_code, _headers = transferir_using_post_with_http_info(id, transferencia_bancaria_persist, opts)
      return data
    end

    # {{{transferencia_bancaria_resource_transferir}}}
    # {{{transferencia_bancaria_resource_transferir_notes}}}
    # @param id {{{transferencia_bancaria_resource_transferir_param_id}}}
    # @param transferencia_bancaria_persist transferenciaBancariaPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransferenciaBancariaResponse, Fixnum, Hash)>] TransferenciaBancariaResponse data, response status code and response headers
    def transferir_using_post_with_http_info(id, transferencia_bancaria_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagtransferenciabancariaApi.transferir_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagtransferenciabancariaApi.transferir_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'transferencia_bancaria_persist' is set
      fail ArgumentError, "Missing the required parameter 'transferencia_bancaria_persist' when calling GlobaltagtransferenciabancariaApi.transferir_using_post" if transferencia_bancaria_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/transferencias-creditos-contas-bancarias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(transferencia_bancaria_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransferenciaBancariaResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagtransferenciabancariaApi#transferir_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
