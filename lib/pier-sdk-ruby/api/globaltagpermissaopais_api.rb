=begin
PIER Labs


Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class GlobaltagpermissaopaisApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # {{{permissao_pais_resource_consultar_pais}}}
    # {{{permissao_pais_resource_consultar_pais_notes}}}
    # @param id {{{permissao_pais_resource_consultar_pais_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [PaisResponse]
    def consultar_pais_using_get(id, opts = {})
      data, _status_code, _headers = consultar_pais_using_get_with_http_info(id, opts)
      return data
    end

    # {{{permissao_pais_resource_consultar_pais}}}
    # {{{permissao_pais_resource_consultar_pais_notes}}}
    # @param id {{{permissao_pais_resource_consultar_pais_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(PaisResponse, Fixnum, Hash)>] PaisResponse data, response status code and response headers
    def consultar_pais_using_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagpermissaopaisApi.consultar_pais_using_get ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagpermissaopaisApi.consultar_pais_using_get" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/paises/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PaisResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagpermissaopaisApi#consultar_pais_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{enum_resource_listar_continentes}}}
    # {{{enum_resource_listar_continentes_notes}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<Object>]
    def listar_continentes_using_get(opts = {})
      data, _status_code, _headers = listar_continentes_using_get_with_http_info(opts)
      return data
    end

    # {{{enum_resource_listar_continentes}}}
    # {{{enum_resource_listar_continentes_notes}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<Object>, Fixnum, Hash)>] Array<Object> data, response status code and response headers
    def listar_continentes_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagpermissaopaisApi.listar_continentes_using_get ..."
      end
      
      # resource path
      local_var_path = "/api/continentes".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagpermissaopaisApi#listar_continentes_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # {{{permissao_pais_resource_listar_paises}}}
    # {{{permissao_pais_resource_listar_paises_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :codigo {{{pais_request_codigo_value}}}
    # @option opts [String] :sigla {{{pais_request_sigla_value}}}
    # @option opts [String] :descricao {{{pais_request_descricao_value}}}
    # @option opts [String] :continente {{{pais_request_continente_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{pais_request_flag_ativo_value}}}
    # @return [PagePaisResponse]
    def listar_paises_using_get(opts = {})
      data, _status_code, _headers = listar_paises_using_get_with_http_info(opts)
      return data
    end

    # {{{permissao_pais_resource_listar_paises}}}
    # {{{permissao_pais_resource_listar_paises_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :codigo {{{pais_request_codigo_value}}}
    # @option opts [String] :sigla {{{pais_request_sigla_value}}}
    # @option opts [String] :descricao {{{pais_request_descricao_value}}}
    # @option opts [String] :continente {{{pais_request_continente_value}}}
    # @option opts [BOOLEAN] :flag_ativo {{{pais_request_flag_ativo_value}}}
    # @return [Array<(PagePaisResponse, Fixnum, Hash)>] PagePaisResponse data, response status code and response headers
    def listar_paises_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagpermissaopaisApi.listar_paises_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      if opts[:'continente'] && !['AFRICA', 'AMERICA_LATINA', 'AMERICA_NORTE', 'ASIA', 'ANTARTIDA', 'EUROPA', 'OCEANIA'].include?(opts[:'continente'])
        fail ArgumentError, 'invalid value for "continente", must be one of AFRICA, AMERICA_LATINA, AMERICA_NORTE, ASIA, ANTARTIDA, EUROPA, OCEANIA'
      end
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/paises".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'codigo'] = opts[:'codigo'] if opts[:'codigo']
      query_params[:'sigla'] = opts[:'sigla'] if opts[:'sigla']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']
      query_params[:'continente'] = opts[:'continente'] if opts[:'continente']
      query_params[:'flagAtivo'] = opts[:'flag_ativo'] if opts[:'flag_ativo']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PagePaisResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagpermissaopaisApi#listar_paises_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
