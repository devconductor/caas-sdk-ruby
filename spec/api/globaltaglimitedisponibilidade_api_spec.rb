=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::GlobaltaglimitedisponibilidadeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GlobaltaglimitedisponibilidadeApi' do
  before do
    # run before each test
    @instance = Pier::GlobaltaglimitedisponibilidadeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlobaltaglimitedisponibilidadeApi' do
    it 'should create an instact of GlobaltaglimitedisponibilidadeApi' do
      @instance.should be_a(Pier::GlobaltaglimitedisponibilidadeApi)
    end
  end

  # unit tests for alterar_using_put9
  # {{{limite_disponibilidade_resource_alterar}}}
  # {{{limite_disponibilidade_resource_alterar_notes}}}
  # @param id_conta {{{limite_disponibilidade_update_id_conta_value}}}
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :limite_global {{{limite_disponibilidade_persist_limite_global_value}}}
  # @option opts [Float] :limite_compra {{{limite_disponibilidade_persist_limite_compra_value}}}
  # @option opts [Float] :limite_parcelado {{{limite_disponibilidade_persist_limite_parcelado_value}}}
  # @option opts [Float] :limite_parcelas {{{limite_disponibilidade_persist_limite_parcelas_value}}}
  # @option opts [Float] :limite_saque_global {{{limite_disponibilidade_persist_limite_saque_global_value}}}
  # @option opts [Float] :limite_saque_periodo {{{limite_disponibilidade_persist_limite_saque_periodo_value}}}
  # @option opts [Float] :limite_consignado {{{limite_disponibilidade_persist_limite_consignado_value}}}
  # @option opts [Float] :limite_internacional_compra {{{limite_disponibilidade_persist_limite_internacional_compra_value}}}
  # @option opts [Float] :limite_internacional_parcelado {{{limite_disponibilidade_persist_limite_internacional_parcelado_value}}}
  # @option opts [Float] :limite_internacional_parcelas {{{limite_disponibilidade_persist_limite_internacional_parcelas_value}}}
  # @option opts [Float] :limite_internacional_saque_global {{{limite_disponibilidade_persist_limite_internacional_saque_global_value}}}
  # @option opts [Float] :limite_internacional_saque_periodo {{{limite_disponibilidade_persist_limite_internacional_saque_periodo_value}}}
  # @option opts [Float] :limite_maximo {{{limite_disponibilidade_persist_limite_maximo_value}}}
  # @return [LimiteDisponibilidadeResponse]
  describe 'alterar_using_put9 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get25
  # {{{limite_disponibilidade_resource_consultar}}}
  # {{{limite_disponibilidade_resource_consultar_notes}}}
  # @param id_conta {{{limite_disponibilidade_resource_consultar_param_id_conta}}}
  # @param [Hash] opts the optional parameters
  # @return [LimiteDisponibilidadeResponse]
  describe 'consultar_using_get25 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for sensibilizar_saldo_disponivel_global_using_post
  # {{{limite_disponibilidade_resource_sensibilizar_credito_disponivel}}}
  # {{{limite_disponibilidade_resource_sensibilizar_credito_disponivel_notes}}}
  # @param id {{{sensibilizar_saldo_global_param_id}}}
  # @param sensibilizar_saldo_global sensibilizarSaldoGlobal
  # @param [Hash] opts the optional parameters
  # @return [LimiteDisponibilidadeResponse]
  describe 'sensibilizar_saldo_disponivel_global_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
