=begin
PIER Labs


Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class TransferenciaBancariaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # Atualiza conta banc\u00C3\u00A1ria portador
    # Esse recurso permite atualizar uma conta banc\u00C3\u00A1ria do portador.
    # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id).
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def atualizar_using_put1(id, update, opts = {})
      data, _status_code, _headers = atualizar_using_put1_with_http_info(id, update, opts)
      return data
    end

    # Atualiza conta banc\u00C3\u00A1ria portador
    # Esse recurso permite atualizar uma conta banc\u00C3\u00A1ria do portador.
    # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id).
    # @param update update
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def atualizar_using_put1_with_http_info(id, update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciaBancariaApi.atualizar_using_put1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling TransferenciaBancariaApi.atualizar_using_put1" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'update' is set
      fail ArgumentError, "Missing the required parameter 'update' when calling TransferenciaBancariaApi.atualizar_using_put1" if update.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciaBancariaApi#atualizar_using_put1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # Consulta conta banc\u00C3\u00A1ria portador
    # Esse recurso permite consultar uma conta banc\u00C3\u00A1ria do portador a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
    # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id).
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def consultar_using_get9(id, opts = {})
      data, _status_code, _headers = consultar_using_get9_with_http_info(id, opts)
      return data
    end

    # Consulta conta banc\u00C3\u00A1ria portador
    # Esse recurso permite consultar uma conta banc\u00C3\u00A1ria do portador a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
    # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id).
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def consultar_using_get9_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciaBancariaApi.consultar_using_get9 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling TransferenciaBancariaApi.consultar_using_get9" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciaBancariaApi#consultar_using_get9\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # Lista contas banc\u00C3\u00A1rias portador
    # Esse recurso permite listar contas banc\u00C3\u00A1rias do portador.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o
    # @option opts [String] :nome_agencia Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia
    # @option opts [String] :numero_agencia N\u00C3\u00BAmero da ag\u00C3\u00AAncia
    # @option opts [String] :numero_conta N\u00C3\u00BAmero da conta
    # @option opts [Integer] :flag_conta_origem_doc Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED)
    # @option opts [Integer] :id_pessoa_fisica C\u00C3\u00B3digo da pessoa
    # @option opts [String] :favorecido Nome do favorecido
    # @option opts [String] :numero_receira_federal Documento do favorecido
    # @option opts [Array<String>] :sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
    # @option opts [Integer] :page P\u00C3\u00A1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
    # @return [PageContaBancariaPortadorResponse]
    def listar_using_get11(opts = {})
      data, _status_code, _headers = listar_using_get11_with_http_info(opts)
      return data
    end

    # Lista contas banc\u00C3\u00A1rias portador
    # Esse recurso permite listar contas banc\u00C3\u00A1rias do portador.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_conta C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o
    # @option opts [String] :nome_agencia Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia
    # @option opts [String] :numero_agencia N\u00C3\u00BAmero da ag\u00C3\u00AAncia
    # @option opts [String] :numero_conta N\u00C3\u00BAmero da conta
    # @option opts [Integer] :flag_conta_origem_doc Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED)
    # @option opts [Integer] :id_pessoa_fisica C\u00C3\u00B3digo da pessoa
    # @option opts [String] :favorecido Nome do favorecido
    # @option opts [String] :numero_receira_federal Documento do favorecido
    # @option opts [Array<String>] :sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
    # @option opts [Integer] :page P\u00C3\u00A1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
    # @return [Array<(PageContaBancariaPortadorResponse, Fixnum, Hash)>] PageContaBancariaPortadorResponse data, response status code and response headers
    def listar_using_get11_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciaBancariaApi.listar_using_get11 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'idConta'] = opts[:'id_conta'] if opts[:'id_conta']
      query_params[:'nomeAgencia'] = opts[:'nome_agencia'] if opts[:'nome_agencia']
      query_params[:'numeroAgencia'] = opts[:'numero_agencia'] if opts[:'numero_agencia']
      query_params[:'numeroConta'] = opts[:'numero_conta'] if opts[:'numero_conta']
      query_params[:'flagContaOrigemDoc'] = opts[:'flag_conta_origem_doc'] if opts[:'flag_conta_origem_doc']
      query_params[:'idPessoaFisica'] = opts[:'id_pessoa_fisica'] if opts[:'id_pessoa_fisica']
      query_params[:'favorecido'] = opts[:'favorecido'] if opts[:'favorecido']
      query_params[:'numeroReceiraFederal'] = opts[:'numero_receira_federal'] if opts[:'numero_receira_federal']
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciaBancariaApi#listar_using_get11\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # Cadastra uma conta banc\u00C3\u00A1ria do portador
    # Esse recurso permite cadastrar contas banc\u00C3\u00A1rias do portador.
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [ContaBancariaPortadorResponse]
    def salvar_using_post7(persist, opts = {})
      data, _status_code, _headers = salvar_using_post7_with_http_info(persist, opts)
      return data
    end

    # Cadastra uma conta banc\u00C3\u00A1ria do portador
    # Esse recurso permite cadastrar contas banc\u00C3\u00A1rias do portador.
    # @param persist persist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaBancariaPortadorResponse, Fixnum, Hash)>] ContaBancariaPortadorResponse data, response status code and response headers
    def salvar_using_post7_with_http_info(persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciaBancariaApi.salvar_using_post7 ..."
      end
      
      
      # verify the required parameter 'persist' is set
      fail ArgumentError, "Missing the required parameter 'persist' when calling TransferenciaBancariaApi.salvar_using_post7" if persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas-bancarias-portador".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaBancariaPortadorResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciaBancariaApi#salvar_using_post7\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
