=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class GlobaltagarquivoApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # {{{arquivo_resource_consultar}}}
    # {{{arquivo_resource_consultar_notes}}}
    # @param id {{{arquivo_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [ArquivoDetalheResponse]
    def consultar_using_get6(id, opts = {})
      data, _status_code, _headers = consultar_using_get6_with_http_info(id, opts)
      return data
    end

    # {{{arquivo_resource_consultar}}}
    # {{{arquivo_resource_consultar_notes}}}
    # @param id {{{arquivo_resource_consultar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(ArquivoDetalheResponse, Fixnum, Hash)>] ArquivoDetalheResponse data, response status code and response headers
    def consultar_using_get6_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.consultar_using_get6 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagarquivoApi.consultar_using_get6" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ArquivoDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#consultar_using_get6\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_resource_integrar}}}
    # {{{arquivo_resource_integrar_notes}}}
    # @param integrar_arquivo_request integrarArquivoRequest
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def integrar_using_post(integrar_arquivo_request, opts = {})
      data, _status_code, _headers = integrar_using_post_with_http_info(integrar_arquivo_request, opts)
      return data
    end

    # {{{arquivo_resource_integrar}}}
    # {{{arquivo_resource_integrar_notes}}}
    # @param integrar_arquivo_request integrarArquivoRequest
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def integrar_using_post_with_http_info(integrar_arquivo_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.integrar_using_post ..."
      end
      
      
      # verify the required parameter 'integrar_arquivo_request' is set
      fail ArgumentError, "Missing the required parameter 'integrar_arquivo_request' when calling GlobaltagarquivoApi.integrar_using_post" if integrar_arquivo_request.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos/integrar".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(integrar_arquivo_request)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#integrar_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal}}}
    # {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal_notes}}}
    # @param numero_receita_federal {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal_param_numero_receita_federal}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @return [PageArquivoAUDResponse]
    def listar_por_numero_receita_federal_using_get(numero_receita_federal, opts = {})
      data, _status_code, _headers = listar_por_numero_receita_federal_using_get_with_http_info(numero_receita_federal, opts)
      return data
    end

    # {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal}}}
    # {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal_notes}}}
    # @param numero_receita_federal {{{arquivo_a_u_d_resource_listar_por_numero_receita_federal_param_numero_receita_federal}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @return [Array<(PageArquivoAUDResponse, Fixnum, Hash)>] PageArquivoAUDResponse data, response status code and response headers
    def listar_por_numero_receita_federal_using_get_with_http_info(numero_receita_federal, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.listar_por_numero_receita_federal_using_get ..."
      end
      
      
      # verify the required parameter 'numero_receita_federal' is set
      fail ArgumentError, "Missing the required parameter 'numero_receita_federal' when calling GlobaltagarquivoApi.listar_por_numero_receita_federal_using_get" if numero_receita_federal.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos-auditorias".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'numeroReceitaFederal'] = numero_receita_federal
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageArquivoAUDResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#listar_por_numero_receita_federal_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_resource_listar_status_arquivos}}}
    # {{{arquivo_resource_listar_status_arquivos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{status_arquivo_request_nome_value}}}
    # @option opts [String] :descricao {{{status_arquivo_request_descricao_value}}}
    # @return [PageStatusArquivoResponse]
    def listar_status_arquivos_using_get(opts = {})
      data, _status_code, _headers = listar_status_arquivos_using_get_with_http_info(opts)
      return data
    end

    # {{{arquivo_resource_listar_status_arquivos}}}
    # {{{arquivo_resource_listar_status_arquivos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{status_arquivo_request_nome_value}}}
    # @option opts [String] :descricao {{{status_arquivo_request_descricao_value}}}
    # @return [Array<(PageStatusArquivoResponse, Fixnum, Hash)>] PageStatusArquivoResponse data, response status code and response headers
    def listar_status_arquivos_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.listar_status_arquivos_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/status-arquivos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageStatusArquivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#listar_status_arquivos_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_resource_listar_tipos_arquivos}}}
    # {{{arquivo_resource_listar_tipos_arquivos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{tipo_arquivo_request_nome_value}}}
    # @option opts [String] :descricao {{{tipo_arquivo_request_descricao_value}}}
    # @return [PageTipoArquivoResponse]
    def listar_tipos_arquivos_using_get(opts = {})
      data, _status_code, _headers = listar_tipos_arquivos_using_get_with_http_info(opts)
      return data
    end

    # {{{arquivo_resource_listar_tipos_arquivos}}}
    # {{{arquivo_resource_listar_tipos_arquivos_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{tipo_arquivo_request_nome_value}}}
    # @option opts [String] :descricao {{{tipo_arquivo_request_descricao_value}}}
    # @return [Array<(PageTipoArquivoResponse, Fixnum, Hash)>] PageTipoArquivoResponse data, response status code and response headers
    def listar_tipos_arquivos_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.listar_tipos_arquivos_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/tipos-arquivos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'descricao'] = opts[:'descricao'] if opts[:'descricao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageTipoArquivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#listar_tipos_arquivos_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_a_u_d_resource_listar}}}
    # {{{arquivo_a_u_d_resource_listar_notes}}}
    # @param id {{{arquivo_a_u_d_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @return [PageArquivoAUDResponse]
    def listar_using_get6(id, opts = {})
      data, _status_code, _headers = listar_using_get6_with_http_info(id, opts)
      return data
    end

    # {{{arquivo_a_u_d_resource_listar}}}
    # {{{arquivo_a_u_d_resource_listar_notes}}}
    # @param id {{{arquivo_a_u_d_resource_listar_param_id}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
    # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
    # @return [Array<(PageArquivoAUDResponse, Fixnum, Hash)>] PageArquivoAUDResponse data, response status code and response headers
    def listar_using_get6_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.listar_using_get6 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagarquivoApi.listar_using_get6" if id.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos/{id}/auditorias".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageArquivoAUDResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#listar_using_get6\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_resource_listar}}}
    # {{{arquivo_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{arquivo_request_nome_value}}}
    # @option opts [Integer] :id_tipo_arquivo {{{arquivo_request_id_tipo_arquivo_value}}}
    # @option opts [Integer] :id_status_arquivo {{{arquivo_request_id_status_arquivo_value}}}
    # @option opts [String] :extensao {{{arquivo_request_extensao_value}}}
    # @return [PageArquivoResponse]
    def listar_using_get7(opts = {})
      data, _status_code, _headers = listar_using_get7_with_http_info(opts)
      return data
    end

    # {{{arquivo_resource_listar}}}
    # {{{arquivo_resource_listar_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :nome {{{arquivo_request_nome_value}}}
    # @option opts [Integer] :id_tipo_arquivo {{{arquivo_request_id_tipo_arquivo_value}}}
    # @option opts [Integer] :id_status_arquivo {{{arquivo_request_id_status_arquivo_value}}}
    # @option opts [String] :extensao {{{arquivo_request_extensao_value}}}
    # @return [Array<(PageArquivoResponse, Fixnum, Hash)>] PageArquivoResponse data, response status code and response headers
    def listar_using_get7_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.listar_using_get7 ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'nome'] = opts[:'nome'] if opts[:'nome']
      query_params[:'idTipoArquivo'] = opts[:'id_tipo_arquivo'] if opts[:'id_tipo_arquivo']
      query_params[:'idStatusArquivo'] = opts[:'id_status_arquivo'] if opts[:'id_status_arquivo']
      query_params[:'extensao'] = opts[:'extensao'] if opts[:'extensao']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageArquivoResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#listar_using_get7\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{arquivo_resource_salvar}}}
    # {{{arquivo_resource_salvar_notes}}}
    # @param arquivo_persist arquivoPersist
    # @param [Hash] opts the optional parameters
    # @return [ArquivoDetalheResponse]
    def salvar_using_post1(arquivo_persist, opts = {})
      data, _status_code, _headers = salvar_using_post1_with_http_info(arquivo_persist, opts)
      return data
    end

    # {{{arquivo_resource_salvar}}}
    # {{{arquivo_resource_salvar_notes}}}
    # @param arquivo_persist arquivoPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ArquivoDetalheResponse, Fixnum, Hash)>] ArquivoDetalheResponse data, response status code and response headers
    def salvar_using_post1_with_http_info(arquivo_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagarquivoApi.salvar_using_post1 ..."
      end
      
      
      # verify the required parameter 'arquivo_persist' is set
      fail ArgumentError, "Missing the required parameter 'arquivo_persist' when calling GlobaltagarquivoApi.salvar_using_post1" if arquivo_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/arquivos".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(arquivo_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ArquivoDetalheResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagarquivoApi#salvar_using_post1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
