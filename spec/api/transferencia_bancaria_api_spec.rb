=begin
PIER Labs


Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::TransferenciaBancariaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TransferenciaBancariaApi' do
  before do
    # run before each test
    @instance = Pier::TransferenciaBancariaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TransferenciaBancariaApi' do
    it 'should create an instact of TransferenciaBancariaApi' do
      @instance.should be_a(Pier::TransferenciaBancariaApi)
    end
  end


  # unit tests for atualizar_using_put1
  # Atualiza conta banc\u00C3\u00A1ria portador
  # Esse recurso permite atualizar uma conta banc\u00C3\u00A1ria do portador.
  # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria do portador (id).
  # @param update update
  # @param [Hash] opts the optional parameters
  # @return [ContaBancariaPortadorResponse]
  describe 'atualizar_using_put1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for consultar_using_get9
  # Consulta conta banc\u00C3\u00A1ria portador
  # Esse recurso permite consultar uma conta banc\u00C3\u00A1ria do portador a partir do seu c\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o (id).
  # @param id C\u00C3\u00B3digo de identifica\u00C3\u00A7\u00C3\u00A3o da conta banc\u00C3\u00A1ria (id).
  # @param [Hash] opts the optional parameters
  # @return [ContaBancariaPortadorResponse]
  describe 'consultar_using_get9 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for listar_using_get11
  # Lista contas banc\u00C3\u00A1rias portador
  # Esse recurso permite listar contas banc\u00C3\u00A1rias do portador.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_conta C\u00C3\u00B3digo identificador da conta cart\u00C3\u00A3o
  # @option opts [String] :nome_agencia Descri\u00C3\u00A7\u00C3\u00A3o da ag\u00C3\u00AAncia
  # @option opts [String] :numero_agencia N\u00C3\u00BAmero da ag\u00C3\u00AAncia
  # @option opts [String] :numero_conta N\u00C3\u00BAmero da conta
  # @option opts [Integer] :flag_conta_origem_doc Sinaliza se origem \u00C3\u00A9 DOC (1: DOC, 0: TED)
  # @option opts [Integer] :id_pessoa_fisica C\u00C3\u00B3digo da pessoa
  # @option opts [String] :favorecido Nome do favorecido
  # @option opts [String] :numero_receira_federal Documento do favorecido
  # @option opts [Array<String>] :sort Tipo de ordena\u00C3\u00A7\u00C3\u00A3o dos registros.
  # @option opts [Integer] :page P\u00C3\u00A1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00C3\u00A7\u00C3\u00A3o (Default = 50, Max = 50)
  # @return [PageContaBancariaPortadorResponse]
  describe 'listar_using_get11 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


  # unit tests for salvar_using_post7
  # Cadastra uma conta banc\u00C3\u00A1ria do portador
  # Esse recurso permite cadastrar contas banc\u00C3\u00A1rias do portador.
  # @param persist persist
  # @param [Hash] opts the optional parameters
  # @return [ContaBancariaPortadorResponse]
  describe 'salvar_using_post7 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end


end

