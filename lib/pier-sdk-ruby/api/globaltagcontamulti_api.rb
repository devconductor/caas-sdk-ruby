=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class GlobaltagcontamultiApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # {{{conta_resource_cadastrar_cartao_multiapp}}}
    # {{{conta_resource_cadastrar_cartao_multiapp_notes}}}
    # @param cartao_multi_app_persist cartaoMultiAppPersist
    # @param [Hash] opts the optional parameters
    # @return [VinculoCartoesResponse]
    def criar_cartoes_multi_app_using_post(cartao_multi_app_persist, opts = {})
      data, _status_code, _headers = criar_cartoes_multi_app_using_post_with_http_info(cartao_multi_app_persist, opts)
      return data
    end

    # {{{conta_resource_cadastrar_cartao_multiapp}}}
    # {{{conta_resource_cadastrar_cartao_multiapp_notes}}}
    # @param cartao_multi_app_persist cartaoMultiAppPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(VinculoCartoesResponse, Fixnum, Hash)>] VinculoCartoesResponse data, response status code and response headers
    def criar_cartoes_multi_app_using_post_with_http_info(cartao_multi_app_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcontamultiApi.criar_cartoes_multi_app_using_post ..."
      end
      
      
      # verify the required parameter 'cartao_multi_app_persist' is set
      fail ArgumentError, "Missing the required parameter 'cartao_multi_app_persist' when calling GlobaltagcontamultiApi.criar_cartoes_multi_app_using_post" if cartao_multi_app_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/cartoes/gerar-cartoes-multiapp".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(cartao_multi_app_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'VinculoCartoesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcontamultiApi#criar_cartoes_multi_app_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{conta_resource_cadastrar_conta_multiapp}}}
    # {{{conta_resource_cadastrar_conta_multiapp_notes}}}
    # @param conta_multi_app_persist contaMultiAppPersist
    # @param [Hash] opts the optional parameters
    # @return [ContaMultiAppResponse]
    def criar_contas_multi_app_using_post(conta_multi_app_persist, opts = {})
      data, _status_code, _headers = criar_contas_multi_app_using_post_with_http_info(conta_multi_app_persist, opts)
      return data
    end

    # {{{conta_resource_cadastrar_conta_multiapp}}}
    # {{{conta_resource_cadastrar_conta_multiapp_notes}}}
    # @param conta_multi_app_persist contaMultiAppPersist
    # @param [Hash] opts the optional parameters
    # @return [Array<(ContaMultiAppResponse, Fixnum, Hash)>] ContaMultiAppResponse data, response status code and response headers
    def criar_contas_multi_app_using_post_with_http_info(conta_multi_app_persist, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagcontamultiApi.criar_contas_multi_app_using_post ..."
      end
      
      
      # verify the required parameter 'conta_multi_app_persist' is set
      fail ArgumentError, "Missing the required parameter 'conta_multi_app_persist' when calling GlobaltagcontamultiApi.criar_contas_multi_app_using_post" if conta_multi_app_persist.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/cadastrar-conta-multiapp".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(conta_multi_app_persist)
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ContaMultiAppResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagcontamultiApi#criar_contas_multi_app_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
