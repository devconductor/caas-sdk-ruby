=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require 'spec_helper'
require 'json'

# Unit tests for Pier::ContaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContaApi' do
  before do
    # run before each test
    @instance = Pier::ContaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContaApi' do
    it 'should create an instact of ContaApi' do
      @instance.should be_a(Pier::ContaApi)
    end
  end

  # unit tests for ajustar_conta_using_post1
  # Lan\u00E7a um ajuste para a conta do id informado
  # Este recurso insere um ajuste para a conta do id informado
  # @param id Id Conta
  # @param id_tipo_ajuste C\u00F3digo identificador do tipo de ajuste.
  # @param data_ajuste Data do ajuste no formato yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ.
  # @param valor_ajuste Valor do ajuste
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identificador_externo Identificador Externo
  # @return [AjusteFinanceiroResponse]
  describe 'ajustar_conta_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_produto_using_post
  # Altera o produto associado \u00E0 conta.
  # O recurso permite fazer modifica\u00E7\u00E3o do produto associado \u00E0 conta.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param request request
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'alterar_produto_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_titular_using_post
  # Realiza a altera\u00E7\u00E3o de uma Pessoa tilular da conta
  # Esta m\u00E9todo permite altera a pessoa de uma conta.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da Conta (id)
  # @param id_pessoa C\u00F3digo de identifica\u00E7\u00E3o de uma Pessoa (id).
  # @param [Hash] opts the optional parameters
  # @return [ContaResponse]
  describe 'alterar_titular_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for alterar_vencimento_using_put
  # Realiza a altera\u00E7\u00E3o do dia de vencimento das faturas da conta
  # Esse recurso permite alterar o vencimento para no m\u00E1ximo at\u00E9 30 dias ap\u00F3s data atual de uma conta especifica no PIER, respeitando o par\u00E2metro de intervalor entre as modifica\u00E7\u00F5es do vencimento informado pelo emissor.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param novo_dia_vencimento Novo dia de vencimento.
  # @param [Hash] opts the optional parameters
  # @return [ContaResponse]
  describe 'alterar_vencimento_using_put test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for ativar_anuidade_using_post
  # Atribuir Anuidade
  # Esse recurso permite configurar qual a regra de Anuidade que ser\u00E1 atribu\u00EDda a uma determinada Conta.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param id_anuidade Identificador da anuidade
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [String] :ddd DDD do celular
  # @option opts [String] :celular N\u00FAmero do celular
  # @option opts [Integer] :id_operadora Identificador da operadora do celular
  # @option opts [Integer] :id_origem_comercial Identificador da origem comercial
  # @return [Object]
  describe 'ativar_anuidade_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for ativar_envio_fatura_email_using_post
  #  Ativa o servi\u00E7o de envio de fatura por email
  # Este recurso ativa o servi\u00E7o de envio de fatura por email
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'ativar_envio_fatura_email_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for bloquear_using_post1
  # Realiza o bloqueio de uma determinada Conta
  # Este m\u00E9todo permite a realiza\u00E7\u00E3o do bloqueio de uma determinada conta a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param id_status C\u00F3digo de Identifica\u00E7\u00E3o do Novo Status Conta.
  # @param [Hash] opts the optional parameters
  # @return [ContaResponse]
  describe 'bloquear_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for cancelar_using_post1
  # Realiza o cancelamento de uma determinada Conta
  # Este m\u00E9todo permite a realiza\u00E7\u00E3o do cancelamento de uma determinada conta a partir do seu c\u00F3digo de identifica\u00E7\u00E3o (id).
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param id_status C\u00F3digo de Identifica\u00E7\u00E3o do Novo Status Conta.
  # @param [Hash] opts the optional parameters
  # @return [ContaResponse]
  describe 'cancelar_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_beneficio_pagamento_atraso_using_get
  # Apresenta a data m\u00E1xima para pagamento da fatura em atraso para receber o benef\u00EDcio.
  # Este m\u00E9todo permite consultar se o cliente tem direito ao benef\u00EDcio de pagamento em atraso, em loja, at\u00E9 o s\u00E1bado subsequente ao vencimento, ficando isento do pagamento de multa, encargos, mora e IOF.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [BeneficioPagamentoAtrasoResponse]
  describe 'consultar_beneficio_pagamento_atraso_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_boleto_emitido_using_get
  # Consulta os dados de um determinado boleto da fatura
  # Este recurso consulta um boleto da fatura
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @return [BoletoResponse]
  describe 'consultar_boleto_emitido_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_divida_atualizada_cliente_using_get
  # Consulta a d\u00EDvida atualizada do cliente
  # Este recurso consulta a d\u00EDvida atualizada do cliente
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [String] :data_vencimento Data do vencimento
  # @option opts [Integer] :id_escritorio_cobranca C\u00F3digo de identifica\u00E7\u00E3o do escrit\u00F3rio de cobran\u00E7a
  # @return [DividaClienteResponse]
  describe 'consultar_divida_atualizada_cliente_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_taxas_tarifas_using_get
  # Permite consultar a partir do ID da conta as taxas e tarifas
  # Esta opera\u00E7\u00E3o tem como objetivo permitir que os Emissores consultem as taxas e tarifas da conta
  # @param id ID da conta a ser consultada.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageTaxasRefinanciamentoResponse]
  describe 'consultar_taxas_tarifas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get13
  # Apresenta dados de uma determinada conta
  # Este m\u00E9todo permite consultar dados de uma determinada conta a partir de seu codigo de identifica\u00E7\u00E3o (id).
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [ContaDetalheResponse]
  describe 'consultar_using_get13 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for consultar_using_get42
  # Consulta os detalhes de uma determinada transfer\u00EAncia
  # Este m\u00E9todo permite consultar os detalhes de uma determinada transfer\u00EAncia de cr\u00E9dito realizada entre contas.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param id_transferencia C\u00F3digo de Identifica\u00E7\u00E3o da transfer\u00EAncia (id_transferencia).
  # @param [Hash] opts the optional parameters
  # @return [TransferenciaDetalheResponse]
  describe 'consultar_using_get42 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for desativar_envio_fatura_email_using_post
  # Desativa o servi\u00E7o de envio de fatura por email
  # Este recurso desativa o servi\u00E7o de envio de fatura por email
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'desativar_envio_fatura_email_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for gerar_boleto_recarga_using_post
  # Gera um boleto de recarga
  # Este recurso gera um boleto de recarga
  # @param id Id Conta
  # @param valor Atributo que representa o valor do Boleto Emitido
  # @param data_vencimento Atributo que representa a data de vencimento do boleto
  # @param [Hash] opts the optional parameters
  # @return [BoletoResponse]
  describe 'gerar_boleto_recarga_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for gerar_cartao_embossing_using_post
  # Realiza o envio para gera\u00E7\u00E3o de um novo cart\u00E3o na gr\u00E1fica
  # Este recurso permite que seja gerado um novo Cart\u00E3o para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00E1 preciso informar o c\u00F3digo de identifica\u00E7\u00E3o da Conta (id), o idPessoa do Portador e o idTipoPlastico do Cart\u00E3o que dever\u00E1 ser gerado para impress\u00E3o. Esta funcionalidade poder\u00E1 ser utilizada para impress\u00E3o de cart\u00F5es em gr\u00E1fica.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param cartao_embossing_request cartaoEmbossingRequest
  # @param [Hash] opts the optional parameters
  # @return [CartaoEmbossingResponse]
  describe 'gerar_cartao_embossing_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for gerar_cartao_provisorio_using_post
  # Realiza a gera\u00E7\u00E3o de um cart\u00E3o provisorio
  # Este recurso permite que seja gerado um cart\u00E3o provis\u00F3rio para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00E1 preciso informar o c\u00F3digo de identifica\u00E7\u00E3o da Conta (id).
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @return [CartaoImpressaoProvisorioResponse]
  describe 'gerar_cartao_provisorio_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for gerar_cartao_using_post
  # Realiza a gera\u00E7\u00E3o de um novo cart\u00E3o para impress\u00E3o avulsa
  # Este recurso permite que seja gerado um novo Cart\u00E3o para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00E1 preciso informar o c\u00F3digo de identifica\u00E7\u00E3o da Conta (id), o idPessoa do Portador e o idTipoPlastico do Cart\u00E3o que dever\u00E1 ser gerado para impress\u00E3o. Esta funcionalidade poder\u00E1 ser utilizada para realizar a impress\u00E3o de cart\u00F5es em Lojas, Quiosques, Escrit\u00F3rios, Terminais de Auto Atendimento, ou outro local que o Emissor escolher, desde que se possua uma impressora de Cart\u00F5es habilidade para o fazer, no local.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param id_pessoa C\u00F3digo de identifica\u00E7\u00E3o da pessoa (id).
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_tipo_plastico C\u00F3digo de identifica\u00E7\u00E3o do TipoPlastico (id).
  # @return [CartaoImpressaoResponse]
  describe 'gerar_cartao_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for gerar_cartao_virtual_using_post
  # Realiza a gera\u00E7\u00E3o de um cart\u00E3o virtual
  # Este recurso permite que seja gerado um Cart\u00E3o virtual para um determinado Portador que esteja vinculado a uma Conta. Para isso, ser\u00E1 preciso informar o c\u00F3digo de identifica\u00E7\u00E3o da Conta (id). Esta funcionalidade poder\u00E1 ser utilizada para realizar a cria\u00E7\u00E3o de cart\u00F5es virtuaes atraves de um app.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param data_validade Data de Validade
  # @param [Hash] opts the optional parameters
  # @return [CartaoImpressaoResponse]
  describe 'gerar_cartao_virtual_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_historico_alteracoes_limites_using_get
  # Lista o hist\u00F3rico de altera\u00E7\u00F5es de limites da conta
  # Este recurso consulta o hist\u00F3rico com as altera\u00E7\u00F5es de limites da conta informada
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageHistoricoEventosResponse]
  describe 'listar_historico_alteracoes_limites_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_historico_assessoria_using_get
  # Lista o hist\u00F3rico de entradas/sa\u00EDdas de assessorias de cobran\u00E7a
  # Permite listar todos os registros de entrada e sa\u00EDda da Conta em arquivos de integra\u00E7\u00E3o com empresas de assessorias de cobran\u00E7a a partir do c\u00F3digo de identifica\u00E7\u00E3o da conta (idConta).
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageHistoricoAssessoriaResponse]
  describe 'listar_historico_assessoria_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_historico_atrasos_faturas_using_get
  # Lista o historico de atrasos das faturas
  # Este recurso lista o hist\u00F3rico do pagamento de faturas em atraso
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageHistoricoAtrasoFaturaResponse]
  describe 'listar_historico_atrasos_faturas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_nao_processadas_using_get
  # Lista as transa\u00E7\u00F5es n\u00E3o processadas da conta
  # Este m\u00E9todo permite que sejam listadas todas as transa\u00E7\u00F5es n\u00E3o processadas da Conta.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [String] :data_inicio Data de in\u00EDcio da consulta do extrato no formato yyyy-MM-dd (Par\u00E2mentro Ignorado se dataFim n\u00E3o for definida).
  # @option opts [String] :data_fim Data fim da consulta do extrato no formato yyyy-MM-dd  (Par\u00E2mentro Ignorado se dataInicio n\u00E3o for definida).
  # @return [PageTransacaoNaoProcessadaResponse]
  describe 'listar_nao_processadas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_processadas_using_get
  # Lista as transa\u00E7\u00F5es processadas da conta
  # Este m\u00E9todo permite que sejam listadas todas as transa\u00E7\u00F5es processadas da Conta.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [String] :data_vencimento Data de vencimento do extrato no formato yyyy-MM-dd.
  # @option opts [String] :data_inicio Data de in\u00EDcio da consulta do extrato no formato yyyy-MM-dd (Ignorado quando o par\u00E2mentro dataVencimento \u00E9 usado).
  # @option opts [String] :data_fim Data fim da consulta do extrato no formato yyyy-MM-dd  (Ignorado quando o par\u00E2mentro dataVencimento \u00E9 usado).
  # @return [PageTransacoesCorrentesResponse]
  describe 'listar_processadas_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get17
  # Lista contas existentes na base de dados do Emissor
  # Este recurso permite listar contas existentes na base de dados do Emissor.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [Integer] :id_produto C\u00F3digo de identifica\u00E7\u00E3o do produto ao qual a conta faz parte. (id).
  # @option opts [Integer] :id_origem_comercial C\u00F3digo de Identifica\u00E7\u00E3o da Origem Comercial (id) que deu origem a Conta.
  # @option opts [Integer] :id_pessoa C\u00F3digo de Identifica\u00E7\u00E3o da Pessoa Titular da Conta (id).
  # @option opts [Integer] :id_status_conta C\u00F3digo de Identifica\u00E7\u00E3o do status da conta.
  # @option opts [Integer] :dia_vencimento Apresenta o dia de vencimento.
  # @option opts [Integer] :melhor_dia_compra Apresenta o melhor dia de compra.
  # @option opts [String] :data_status_conta Apresenta a data em que o idStatusConta atual fora atribu\u00EDdo para ela.
  # @option opts [String] :data_cadastro Apresenta a data em que o cart\u00E3o foi gerado.
  # @option opts [String] :data_ultima_alteracao_vencimento Apresenta a data da ultima altera\u00E7\u00E3o de vencimento.
  # @return [PageContaResponse]
  describe 'listar_using_get17 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for listar_using_get50
  # Lista as transfer\u00EAncias realizadas pela conta
  # Este m\u00E9todo permite que sejam listadas as transfer\u00EAncias realizadas pela conta existentes na base do emissor.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta (id).
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @option opts [Integer] :id_transferencia C\u00F3digo de identifica\u00E7\u00E3o da transfer\u00EAncia (id).
  # @option opts [Integer] :id_conta_origem C\u00F3digo de identifica\u00E7\u00E3o da conta em que o valor ser\u00E1 debitado para a transfer\u00EAncia. (id).
  # @option opts [Integer] :id_conta_destino C\u00F3digo de identifica\u00E7\u00E3o da conta em que o valor ser\u00E1 creditado para a transfer\u00EAncia. (id).
  # @option opts [Float] :valor_transferencia Valor estabelecido para ser transferido.
  # @option opts [String] :data_transferencia Data estabelecida para ocorrer a transfer\u00EAncia.
  # @return [PageTransferenciaResponse]
  describe 'listar_using_get50 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for reativar_using_post1
  # Realiza a reativa\u00E7\u00E3o de contas.
  # Este recurso permite reativar contas. Para isso, ser\u00E1 preciso informar o c\u00F3digo de identifica\u00E7\u00E3o da Conta (id).
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'reativar_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for simular_emprestimo_financiamento_using_post
  # Simula valores de presta\u00E7\u00F5es de empr\u00E9stimos/financiamentos
  # Esta opera\u00E7\u00E3o pode ser utilizada para simular opera\u00E7\u00F5es financeiras a partir de informa\u00E7\u00F5es fornecidas pelo usu\u00E1rio. Os c\u00E1lculos gerados devem ser considerados apenas como refer\u00EAncia para as situa\u00E7\u00F5es reais e n\u00E3o como valores oficiais.
  # @param id C\u00F3digo de identifica\u00E7\u00E3o da conta (id).
  # @param request request
  # @param [Hash] opts the optional parameters
  # @return [EmprestimoPessoalResponse]
  describe 'simular_emprestimo_financiamento_using_post test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for transacoes_using_get
  # Permite listar uma linha do tempo com os eventos da conta
  # Esta opera\u00E7\u00E3o tem como objetivo permitir a listagem, em formato de timeline, dos eventos vinculados a uma detemrinada conta. Transa\u00E7\u00F5es, fechamento da fatura, pagamentos, gera\u00E7\u00E3o de cart\u00F5es e altera\u00E7\u00E3o de limite s\u00E3o exemplos de eventos contemplados por esta funcionalidade. Neste m\u00E9todo, as opera\u00E7\u00F5es s\u00E3o ordenadas de forma decrescente.
  # @param id Id Conta
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :sort Tipo de ordena\u00E7\u00E3o dos registros.
  # @option opts [Integer] :page P\u00E1gina solicitada (Default = 0)
  # @option opts [Integer] :limit Limite de elementos por solicita\u00E7\u00E3o (Default = 50, Max = 50)
  # @return [PageTransacaoResponse]
  describe 'transacoes_using_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for transferir_using_post1
  # Realiza uma transfer\u00EAncia de Cr\u00E9dito para outro cliente do mesmo Emissor
  # Este m\u00E9todo permite que um portador de um cart\u00E3o possa realizar auma transfer\u00EAncia de cr\u00E9dito para outro cliente do mesmo emissor.
  # @param id C\u00F3digo de Identifica\u00E7\u00E3o da conta do cliente portador do cart\u00E3o que ser\u00E1 debitado (id).
  # @param id_conta_destino C\u00F3digo de Identifica\u00E7\u00E3o do cliente portador do cart\u00E3o que ser\u00E1 creditado (id).
  # @param valor_transferencia Valor da Transfer\u00EAncia.
  # @param [Hash] opts the optional parameters
  # @return [TransferenciaDetalheResponse]
  describe 'transferir_using_post1 test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
