=begin
PIER Labs


Gest\u00C3\u00A3o de pagamento eletr\u00C3\u00B4nicos como servi\u00C3\u00A7o


OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git


License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html



Terms of Service: http://pierlabs.io/terms/


=end

require "uri"

module Pier

  class NotificacoesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end


    # Atualizar SMS
    # Esse recurso permite atualizar o status do SMS do emissor
    # @param seu_num Seu n\u00C3\u00BAmero
    # @param status Status
    # @param data Data
    # @param texto_status TextoStatus
    # @param operadora Operadora
    # @param [Hash] opts the optional parameters
    # @return [SMS]
    def atualizar_sms_using_put(seu_num, status, data, texto_status, operadora, opts = {})
      data, _status_code, _headers = atualizar_sms_using_put_with_http_info(seu_num, status, data, texto_status, operadora, opts)
      return data
    end

    # Atualizar SMS
    # Esse recurso permite atualizar o status do SMS do emissor
    # @param seu_num Seu n\u00C3\u00BAmero
    # @param status Status
    # @param data Data
    # @param texto_status TextoStatus
    # @param operadora Operadora
    # @param [Hash] opts the optional parameters
    # @return [Array<(SMS, Fixnum, Hash)>] SMS data, response status code and response headers
    def atualizar_sms_using_put_with_http_info(seu_num, status, data, texto_status, operadora, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: NotificacoesApi.atualizar_sms_using_put ..."
      end
      
      
      # verify the required parameter 'seu_num' is set
      fail ArgumentError, "Missing the required parameter 'seu_num' when calling NotificacoesApi.atualizar_sms_using_put" if seu_num.nil?
      
      
      
      
      
      
      # verify the required parameter 'status' is set
      fail ArgumentError, "Missing the required parameter 'status' when calling NotificacoesApi.atualizar_sms_using_put" if status.nil?
      
      
      
      
      
      
      # verify the required parameter 'data' is set
      fail ArgumentError, "Missing the required parameter 'data' when calling NotificacoesApi.atualizar_sms_using_put" if data.nil?
      
      
      
      
      
      
      # verify the required parameter 'texto_status' is set
      fail ArgumentError, "Missing the required parameter 'texto_status' when calling NotificacoesApi.atualizar_sms_using_put" if texto_status.nil?
      
      
      
      
      
      
      # verify the required parameter 'operadora' is set
      fail ArgumentError, "Missing the required parameter 'operadora' when calling NotificacoesApi.atualizar_sms_using_put" if operadora.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/notificacoes/sms/atualizar-status".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'SeuNum'] = seu_num
      query_params[:'Status'] = status
      query_params[:'Data'] = data
      query_params[:'TextoStatus'] = texto_status
      query_params[:'Operadora'] = operadora

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SMS')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificacoesApi#atualizar_sms_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end


    # Responder SMS
    # Esse recurso permite atualizar a resposta do SMS, fornecida pedo usu\u00C3\u00A1rio
    # @param seunum Seu n\u00C3\u00BAmero
    # @param data Data
    # @param texto_sms_mo TextoStatus
    # @param [Hash] opts the optional parameters
    # @return [SMS]
    def responder_sms_using_put(seunum, data, texto_sms_mo, opts = {})
      data, _status_code, _headers = responder_sms_using_put_with_http_info(seunum, data, texto_sms_mo, opts)
      return data
    end

    # Responder SMS
    # Esse recurso permite atualizar a resposta do SMS, fornecida pedo usu\u00C3\u00A1rio
    # @param seunum Seu n\u00C3\u00BAmero
    # @param data Data
    # @param texto_sms_mo TextoStatus
    # @param [Hash] opts the optional parameters
    # @return [Array<(SMS, Fixnum, Hash)>] SMS data, response status code and response headers
    def responder_sms_using_put_with_http_info(seunum, data, texto_sms_mo, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: NotificacoesApi.responder_sms_using_put ..."
      end
      
      
      # verify the required parameter 'seunum' is set
      fail ArgumentError, "Missing the required parameter 'seunum' when calling NotificacoesApi.responder_sms_using_put" if seunum.nil?
      
      
      
      
      
      
      # verify the required parameter 'data' is set
      fail ArgumentError, "Missing the required parameter 'data' when calling NotificacoesApi.responder_sms_using_put" if data.nil?
      
      
      
      
      
      
      # verify the required parameter 'texto_sms_mo' is set
      fail ArgumentError, "Missing the required parameter 'texto_sms_mo' when calling NotificacoesApi.responder_sms_using_put" if texto_sms_mo.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/notificacoes/sms/responder".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'Seunum'] = seunum
      query_params[:'Data'] = data
      query_params[:'TextoSmsMo'] = texto_sms_mo

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SMS')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NotificacoesApi#responder_sms_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end

end
