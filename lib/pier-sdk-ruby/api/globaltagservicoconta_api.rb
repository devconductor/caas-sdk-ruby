=begin
PIER Labs

Gest\u00E3o de pagamento eletr\u00F4nicos como servi\u00E7o

OpenAPI spec version: 0.0.1
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module Pier
  class GlobaltagservicocontaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # {{{conta_resource_ativar_anuidade}}}
    # {{{conta_resource_ativar_anuidade_notes}}}
    # @param id {{{conta_resource_ativar_anuidade_param_id}}}
    # @param id_anuidade {{{anuidade_request_id_anuidade_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :ddd {{{anuidade_request_d_d_d_value}}}
    # @option opts [String] :celular {{{anuidade_request_celular_value}}}
    # @option opts [Integer] :id_operadora {{{anuidade_request_id_operadora_value}}}
    # @option opts [Integer] :id_origem_comercial {{{anuidade_request_id_origem_comercial_value}}}
    # @return [Object]
    def ativar_anuidade_using_post(id, id_anuidade, opts = {})
      data, _status_code, _headers = ativar_anuidade_using_post_with_http_info(id, id_anuidade, opts)
      return data
    end

    # {{{conta_resource_ativar_anuidade}}}
    # {{{conta_resource_ativar_anuidade_notes}}}
    # @param id {{{conta_resource_ativar_anuidade_param_id}}}
    # @param id_anuidade {{{anuidade_request_id_anuidade_value}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @option opts [String] :ddd {{{anuidade_request_d_d_d_value}}}
    # @option opts [String] :celular {{{anuidade_request_celular_value}}}
    # @option opts [Integer] :id_operadora {{{anuidade_request_id_operadora_value}}}
    # @option opts [Integer] :id_origem_comercial {{{anuidade_request_id_origem_comercial_value}}}
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def ativar_anuidade_using_post_with_http_info(id, id_anuidade, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagservicocontaApi.ativar_anuidade_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagservicocontaApi.ativar_anuidade_using_post" if id.nil?
      
      
      
      
      
      
      # verify the required parameter 'id_anuidade' is set
      fail ArgumentError, "Missing the required parameter 'id_anuidade' when calling GlobaltagservicocontaApi.ativar_anuidade_using_post" if id_anuidade.nil?
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/atribuir-anuidade".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}
      query_params[:'idAnuidade'] = id_anuidade
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']
      query_params[:'DDD'] = opts[:'ddd'] if opts[:'ddd']
      query_params[:'celular'] = opts[:'celular'] if opts[:'celular']
      query_params[:'idOperadora'] = opts[:'id_operadora'] if opts[:'id_operadora']
      query_params[:'idOrigemComercial'] = opts[:'id_origem_comercial'] if opts[:'id_origem_comercial']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagservicocontaApi#ativar_anuidade_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{conta_resource_ativar_envio_fatura_email}}}
    # {{{conta_resource_ativar_envio_fatura_email_notes}}}
    # @param id {{{conta_resource_ativar_envio_fatura_email_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def ativar_envio_fatura_email_using_post(id, opts = {})
      data, _status_code, _headers = ativar_envio_fatura_email_using_post_with_http_info(id, opts)
      return data
    end

    # {{{conta_resource_ativar_envio_fatura_email}}}
    # {{{conta_resource_ativar_envio_fatura_email_notes}}}
    # @param id {{{conta_resource_ativar_envio_fatura_email_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def ativar_envio_fatura_email_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagservicocontaApi.ativar_envio_fatura_email_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagservicocontaApi.ativar_envio_fatura_email_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/ativar-fatura-email".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagservicocontaApi#ativar_envio_fatura_email_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{conta_resource_desativar_envio_fatura_email}}}
    # {{{conta_resource_desativar_envio_fatura_email_notes}}}
    # @param id {{{conta_resource_desativar_envio_fatura_email_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def desativar_envio_fatura_email_using_post(id, opts = {})
      data, _status_code, _headers = desativar_envio_fatura_email_using_post_with_http_info(id, opts)
      return data
    end

    # {{{conta_resource_desativar_envio_fatura_email}}}
    # {{{conta_resource_desativar_envio_fatura_email_notes}}}
    # @param id {{{conta_resource_desativar_envio_fatura_email_param_id}}}
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def desativar_envio_fatura_email_using_post_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagservicocontaApi.desativar_envio_fatura_email_using_post ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling GlobaltagservicocontaApi.desativar_envio_fatura_email_using_post" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/contas/{id}/desativar-fatura-email".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagservicocontaApi#desativar_envio_fatura_email_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{anuidade_resource_listar_anuidades}}}
    # {{{anuidade_resource_listar_anuidades_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageAnuidadeResponse]
    def listar_anuidades_using_get(opts = {})
      data, _status_code, _headers = listar_anuidades_using_get_with_http_info(opts)
      return data
    end

    # {{{anuidade_resource_listar_anuidades}}}
    # {{{anuidade_resource_listar_anuidades_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageAnuidadeResponse, Fixnum, Hash)>] PageAnuidadeResponse data, response status code and response headers
    def listar_anuidades_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagservicocontaApi.listar_anuidades_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/anuidades".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageAnuidadeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagservicocontaApi#listar_anuidades_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # {{{operadora_resource_listar_operadoras_telefonicas}}}
    # {{{operadora_resource_listar_operadoras_telefonicas_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [PageOperadoraResponse]
    def listar_operadoras_telefonicas_using_get(opts = {})
      data, _status_code, _headers = listar_operadoras_telefonicas_using_get_with_http_info(opts)
      return data
    end

    # {{{operadora_resource_listar_operadoras_telefonicas}}}
    # {{{operadora_resource_listar_operadoras_telefonicas_notes}}}
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :sort {{{global_menssagem_sort_sort}}}
    # @option opts [Integer] :page {{{global_menssagem_sort_page_value}}}
    # @option opts [Integer] :limit {{{global_menssagem_sort_limit}}}
    # @return [Array<(PageOperadoraResponse, Fixnum, Hash)>] PageOperadoraResponse data, response status code and response headers
    def listar_operadoras_telefonicas_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: GlobaltagservicocontaApi.listar_operadoras_telefonicas_using_get ..."
      end
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      # resource path
      local_var_path = "/api/operadoras-telefonicas".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'sort'] = @api_client.build_collection_param(opts[:'sort'], :multi) if opts[:'sort']
      query_params[:'page'] = opts[:'page'] if opts[:'page']
      query_params[:'limit'] = opts[:'limit'] if opts[:'limit']

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageOperadoraResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GlobaltagservicocontaApi#listar_operadoras_telefonicas_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
